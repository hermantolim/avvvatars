{"version":3,"file":"avvvatars-react-alt.cjs.development.js","sources":["../src/lib/mersenne_twister.ts","../src/lib/alea.ts","../src/lib/random.ts","../src/lib/colors.ts","../src/shape/shapes.tsx","../src/shape/faces.tsx","../src/shape/Shape.tsx","../src/index.tsx"],"sourcesContent":["// Mersenne Twister from https://gist.github.com/banksean/300494\n  /*\n  A C-program for MT19937, with initialization improved 2002/1/26.\n  Coded by Takuji Nishimura and Makoto Matsumoto.\n\n  Before using, initialize the state by using init_genrand(seed)\n  or init_by_array(init_key, key_length).\n\n  Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions\n  are met:\n\n  1. Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n  2. Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\n  3. The names of its contributors may not be used to endorse or promote\n  products derived from this software without specific prior written\n  permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n  Any feedback is very welcome.\n  http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n  email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n*/\ninterface MersenneInitialTypes {\n  N: number\n  M: number\n  MATRIX_A: number\n  UPPER_MASK: number\n  LOWER_MASK: number\n  mt: Array<number>\n  mti: number\n  init_genrand: (seed: number) => void\n\n  random: () => number\n}\n\nconst MersenneTwister = function (this: MersenneInitialTypes, seed: number) {\n  if (seed === undefined) {\n      // kept random number same size as time used previously to ensure no unexpected results downstream\n      seed = Math.floor(Math.random()*Math.pow(10,13));\n  }\n  /* Period parameters */\n  this.N = 624;\n  this.M = 397;\n  this.MATRIX_A = 0x9908b0df;   /* constant vector a */\n  this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n  this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n  this.mt = new Array(this.N); /* the array for the state vector */\n  this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */\n\n  this.init_genrand(seed);\n} as any as { new (seed: number): MersenneInitialTypes; } ;\n\n/* initializes mt[N] with a seed */\nMersenneTwister.prototype.init_genrand = function (s: number) {\n  this.mt[0] = s >>> 0;\n  for (this.mti = 1; this.mti < this.N; this.mti++) {\n      s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n      this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;\n      /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n      /* In the previous versions, MSBs of the seed affect   */\n      /* only MSBs of the array mt[].                        */\n      /* 2002/01/09 modified by Makoto Matsumoto             */\n      this.mt[this.mti] >>>= 0;\n      /* for >32 bit machines */\n  }\n};\n\n/* initialize by an array with array-length */\n/* init_key is the array for initializing keys */\n/* key_length is its length */\n/* slight change for C++, 2004/2/26 */\nMersenneTwister.prototype.init_by_array = function (init_key: any, key_length: any) {\n  var i = 1, j = 0, k, s;\n  this.init_genrand(19650218);\n  k = (this.N > key_length ? this.N : key_length);\n  for (; k; k--) {\n      s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n      this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */\n      this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n      i++;\n      j++;\n      if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n      if (j >= key_length) { j = 0; }\n  }\n  for (k = this.N - 1; k; k--) {\n      s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n      this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */\n      this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n      i++;\n      if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n  }\n\n  this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n};\n\n/* generates a random number on [0,0xffffffff]-interval */\nMersenneTwister.prototype.genrand_int32 = function () {\n  var y;\n  var mag01 = new Array(0x0, this.MATRIX_A);\n  /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n  if (this.mti >= this.N) { /* generate N words at one time */\n    var kk;\n\n    if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */\n        this.init_genrand(5489); /* a default initial seed is used */\n    }\n    for (kk = 0; kk < this.N - this.M; kk++) {\n        y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n        this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n    }\n    for (;kk < this.N - 1; kk++) {\n        y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n        this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n    }\n    y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n    this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n    this.mti = 0;\n  }\n\n  y = this.mt[this.mti++];\n\n  /* Tempering */\n  y ^= (y >>> 11);\n  y ^= (y << 7) & 0x9d2c5680;\n  y ^= (y << 15) & 0xefc60000;\n  y ^= (y >>> 18);\n\n  return y >>> 0;\n};\n\n/* generates a random number on [0,0x7fffffff]-interval */\nMersenneTwister.prototype.genrand_int31 = function () {\n  return (this.genrand_int32() >>> 1);\n};\n\n/* generates a random number on [0,1]-real-interval */\nMersenneTwister.prototype.genrand_real1 = function () {\n  return this.genrand_int32() * (1.0 / 4294967295.0);\n  /* divided by 2^32-1 */\n};\n\n/* generates a random number on [0,1)-real-interval */\nMersenneTwister.prototype.random = function () {\n  return this.genrand_int32() * (1.0 / 4294967296.0);\n  /* divided by 2^32 */\n};\n\n/* generates a random number on (0,1)-real-interval */\nMersenneTwister.prototype.genrand_real3 = function () {\n  return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\n  /* divided by 2^32 */\n};\n\n/* generates a random number on [0,1) with 53-bit resolution*/\nMersenneTwister.prototype.genrand_res53 = function () {\n  var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;\n  return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n};\n\nexport default MersenneTwister","class AleaGen {\n  c: number;\n  s0: number;\n  s1: number;\n  s2: number;\n  \n  constructor(seed: any) {\n    if (seed == null) seed = +(new Date);\n\n    let n = 0xefc8249d;\n\n    // Apply the seeding algorithm from Baagoe.\n    this.c = 1;\n    this.s0 = mash(' ');\n    this.s1 = mash(' ');\n    this.s2 = mash(' ');\n    this.s0 -= mash(seed);\n    if (this.s0 < 0) { this.s0 += 1; }\n    this.s1 -= mash(seed);\n    if (this.s1 < 0) { this.s1 += 1; }\n    this.s2 -= mash(seed);\n    if (this.s2 < 0) { this.s2 += 1; }\n\n    function mash(data: string) {\n      data = String(data);\n      for (let i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        let h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    }\n  }\n\n  next() {\n    let {c,s0,s1,s2} = this;\n    let t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n    this.s0 = s1;\n    this.s1 = s2;\n    return this.s2 = t - (this.c = t | 0);\n  }\n\n  copy(f: this, t: this) {\n    t.c = f.c;\n    t.s0 = f.s0;\n    t.s1 = f.s1;\n    t.s2 = f.s2;\n    return t;\n  }\n}\n\nexport default AleaGen","import MersenneTwister from './mersenne_twister'\nimport AleaGen from './alea'\n\ninterface range {\n  min: number\n  max: number\n}\n\ninterface GenerateRandom extends range {\n  value: string\n}\n\ninterface MinMax extends range {\n  random: number\n}\n\nfunction minMax(opts: MinMax){\n  const { random, min, max } = opts\n  return Math.floor(random * (max - min + 1) + min);\n}\n\n\nexport default function randomNumber(opts: GenerateRandom){\n  const { value, min, max } = opts\n\n  const prepareSeed = new AleaGen(value)\n  const seedOutput = prepareSeed.s1 * 10000000\n\n  const mersenne = new MersenneTwister(seedOutput)\n\n  return minMax({random: mersenne.random(), min, max})\n}\n","const TAILWIND_COLORS = {\n  slate: {\n    '50': '#f8fafc',\n    '100': '#f1f5f9',\n    '200': '#e2e8f0',\n    '300': '#cbd5e1',\n    '400': '#94a3b8',\n    '500': '#64748b',\n    '600': '#475569',\n    '700': '#334155',\n    '800': '#1e293b',\n    '900': '#0f172a'\n  },\n  gray: {\n    '50': '#f9fafb',\n    '100': '#f3f4f6',\n    '200': '#e5e7eb',\n    '300': '#d1d5db',\n    '400': '#9ca3af',\n    '500': '#6b7280',\n    '600': '#4b5563',\n    '700': '#374151',\n    '800': '#1f2937',\n    '900': '#111827'\n  },\n  zinc: {\n    '50': '#fafafa',\n    '100': '#f4f4f5',\n    '200': '#e4e4e7',\n    '300': '#d4d4d8',\n    '400': '#a1a1aa',\n    '500': '#71717a',\n    '600': '#52525b',\n    '700': '#3f3f46',\n    '800': '#27272a',\n    '900': '#18181b'\n  },\n  neutral: {\n    '50': '#fafafa',\n    '100': '#f5f5f5',\n    '200': '#e5e5e5',\n    '300': '#d4d4d4',\n    '400': '#a3a3a3',\n    '500': '#737373',\n    '600': '#525252',\n    '700': '#404040',\n    '800': '#262626',\n    '900': '#171717'\n  },\n  stone: {\n    '50': '#fafaf9',\n    '100': '#f5f5f4',\n    '200': '#e7e5e4',\n    '300': '#d6d3d1',\n    '400': '#a8a29e',\n    '500': '#78716c',\n    '600': '#57534e',\n    '700': '#44403c',\n    '800': '#292524',\n    '900': '#1c1917'\n  },\n  red: {\n    '50': '#fef2f2',\n    '100': '#fee2e2',\n    '200': '#fecaca',\n    '300': '#fca5a5',\n    '400': '#f87171',\n    '500': '#ef4444',\n    '600': '#dc2626',\n    '700': '#b91c1c',\n    '800': '#991b1b',\n    '900': '#7f1d1d'\n  },\n  orange: {\n    '50': '#fff7ed',\n    '100': '#ffedd5',\n    '200': '#fed7aa',\n    '300': '#fdba74',\n    '400': '#fb923c',\n    '500': '#f97316',\n    '600': '#ea580c',\n    '700': '#c2410c',\n    '800': '#9a3412',\n    '900': '#7c2d12'\n  },\n  amber: {\n    '50': '#fffbeb',\n    '100': '#fef3c7',\n    '200': '#fde68a',\n    '300': '#fcd34d',\n    '400': '#fbbf24',\n    '500': '#f59e0b',\n    '600': '#d97706',\n    '700': '#b45309',\n    '800': '#92400e',\n    '900': '#78350f'\n  },\n  yellow: {\n    '50': '#fefce8',\n    '100': '#fef9c3',\n    '200': '#fef08a',\n    '300': '#fde047',\n    '400': '#facc15',\n    '500': '#eab308',\n    '600': '#ca8a04',\n    '700': '#a16207',\n    '800': '#854d0e',\n    '900': '#713f12'\n  },\n  lime: {\n    '50': '#f7fee7',\n    '100': '#ecfccb',\n    '200': '#d9f99d',\n    '300': '#bef264',\n    '400': '#a3e635',\n    '500': '#84cc16',\n    '600': '#65a30d',\n    '700': '#4d7c0f',\n    '800': '#3f6212',\n    '900': '#365314'\n  },\n  green: {\n    '50': '#f0fdf4',\n    '100': '#dcfce7',\n    '200': '#bbf7d0',\n    '300': '#86efac',\n    '400': '#4ade80',\n    '500': '#22c55e',\n    '600': '#16a34a',\n    '700': '#15803d',\n    '800': '#166534',\n    '900': '#14532d'\n  },\n  emerald: {\n    '50': '#ecfdf5',\n    '100': '#d1fae5',\n    '200': '#a7f3d0',\n    '300': '#6ee7b7',\n    '400': '#34d399',\n    '500': '#10b981',\n    '600': '#059669',\n    '700': '#047857',\n    '800': '#065f46',\n    '900': '#064e3b'\n  },\n  teal: {\n    '50': '#f0fdfa',\n    '100': '#ccfbf1',\n    '200': '#99f6e4',\n    '300': '#5eead4',\n    '400': '#2dd4bf',\n    '500': '#14b8a6',\n    '600': '#0d9488',\n    '700': '#0f766e',\n    '800': '#115e59',\n    '900': '#134e4a'\n  },\n  cyan: {\n    '50': '#ecfeff',\n    '100': '#cffafe',\n    '200': '#a5f3fc',\n    '300': '#67e8f9',\n    '400': '#22d3ee',\n    '500': '#06b6d4',\n    '600': '#0891b2',\n    '700': '#0e7490',\n    '800': '#155e75',\n    '900': '#164e63'\n  },\n  sky: {\n    '50': '#f0f9ff',\n    '100': '#e0f2fe',\n    '200': '#bae6fd',\n    '300': '#7dd3fc',\n    '400': '#38bdf8',\n    '500': '#0ea5e9',\n    '600': '#0284c7',\n    '700': '#0369a1',\n    '800': '#075985',\n    '900': '#0c4a6e'\n  },\n  blue: {\n    '50': '#eff6ff',\n    '100': '#dbeafe',\n    '200': '#bfdbfe',\n    '300': '#93c5fd',\n    '400': '#60a5fa',\n    '500': '#3b82f6',\n    '600': '#2563eb',\n    '700': '#1d4ed8',\n    '800': '#1e40af',\n    '900': '#1e3a8a'\n  },\n  indigo: {\n    '50': '#eef2ff',\n    '100': '#e0e7ff',\n    '200': '#c7d2fe',\n    '300': '#a5b4fc',\n    '400': '#818cf8',\n    '500': '#6366f1',\n    '600': '#4f46e5',\n    '700': '#4338ca',\n    '800': '#3730a3',\n    '900': '#312e81'\n  },\n  violet: {\n    '50': '#f5f3ff',\n    '100': '#ede9fe',\n    '200': '#ddd6fe',\n    '300': '#c4b5fd',\n    '400': '#a78bfa',\n    '500': '#8b5cf6',\n    '600': '#7c3aed',\n    '700': '#6d28d9',\n    '800': '#5b21b6',\n    '900': '#4c1d95'\n  },\n  purple: {\n    '50': '#faf5ff',\n    '100': '#f3e8ff',\n    '200': '#e9d5ff',\n    '300': '#d8b4fe',\n    '400': '#c084fc',\n    '500': '#a855f7',\n    '600': '#9333ea',\n    '700': '#7e22ce',\n    '800': '#6b21a8',\n    '900': '#581c87'\n  },\n  fuchsia: {\n    '50': '#fdf4ff',\n    '100': '#fae8ff',\n    '200': '#f5d0fe',\n    '300': '#f0abfc',\n    '400': '#e879f9',\n    '500': '#d946ef',\n    '600': '#c026d3',\n    '700': '#a21caf',\n    '800': '#86198f',\n    '900': '#701a75'\n  },\n  pink: {\n    '50': '#fdf2f8',\n    '100': '#fce7f3',\n    '200': '#fbcfe8',\n    '300': '#f9a8d4',\n    '400': '#f472b6',\n    '500': '#ec4899',\n    '600': '#db2777',\n    '700': '#be185d',\n    '800': '#9d174d',\n    '900': '#831843'\n  },\n  rose: {\n    '50': '#fff1f2',\n    '100': '#ffe4e6',\n    '200': '#fecdd3',\n    '300': '#fda4af',\n    '400': '#fb7185',\n    '500': '#f43f5e',\n    '600': '#e11d48',\n    '700': '#be123c',\n    '800': '#9f1239',\n    '900': '#881337'\n  }\n}\n\nconst MATERIAL_COLORS = {\n  red: {\n    50: '#FFEBEE',\n    100: '#FFCDD2',\n    200: '#EF9A9A',\n    300: '#E57373',\n    400: '#EF5350',\n    500: '#F44336',\n    600: '#E53935',\n    700: '#D32F2F',\n    800: '#C62828',\n    900: '#B71C1C',\n    A100: '#FF8A80',\n    A200: '#FF5252',\n    A400: '#FF1744',\n    A700: '#D50000',\n  },\n  pink: {\n    50: '#FCE4EC',\n    100: '#F8BBD0',\n    200: '#F48FB1',\n    300: '#F06292',\n    400: '#EC407A',\n    500: '#E91E63',\n    600: '#D81B60',\n    700: '#C2185B',\n    800: '#AD1457',\n    900: '#880E4F',\n    A100: '#FF80AB',\n    A200: '#FF4081',\n    A400: '#F50057',\n    A700: '#C51162',\n  },\n  purple: {\n    50: '#F3E5F5',\n    100: '#E1BEE7',\n    200: '#CE93D8',\n    300: '#BA68C8',\n    400: '#AB47BC',\n    500: '#9C27B0',\n    600: '#8E24AA',\n    700: '#7B1FA2',\n    800: '#6A1B9A',\n    900: '#4A148C',\n    A100: '#EA80FC',\n    A200: '#E040FB',\n    A400: '#D500F9',\n    A700: '#AA00FF',\n  },\n  deepPurple: {\n    50: '#EDE7F6',\n    100: '#D1C4E9',\n    200: '#B39DDB',\n    300: '#9575CD',\n    400: '#7E57C2',\n    500: '#673AB7',\n    600: '#5E35B1',\n    700: '#512DA8',\n    800: '#4527A0',\n    900: '#311B92',\n    A100: '#B388FF',\n    A200: '#7C4DFF',\n    A400: '#651FFF',\n    A700: '#6200EA',\n  },\n  indigo: {\n    50: '#E8EAF6',\n    100: '#C5CAE9',\n    200: '#9FA8DA',\n    300: '#7986CB',\n    400: '#5C6BC0',\n    500: '#3F51B5',\n    600: '#3949AB',\n    700: '#303F9F',\n    800: '#283593',\n    900: '#1A237E',\n    A100: '#8C9EFF',\n    A200: '#536DFE',\n    A400: '#3D5AFE',\n    A700: '#304FFE',\n  },\n  blue: {\n    50: '#E3F2FD',\n    100: '#BBDEFB',\n    200: '#90CAF9',\n    300: '#64B5F6',\n    400: '#42A5F5',\n    500: '#2196F3',\n    600: '#1E88E5',\n    700: '#1976D2',\n    800: '#1565C0',\n    900: '#0D47A1',\n    A100: '#82B1FF',\n    A200: '#448AFF',\n    A400: '#2979FF',\n    A700: '#2962FF',\n  },\n  lightBlue: {\n    50: '#E1F5FE',\n    100: '#B3E5FC',\n    200: '#81D4FA',\n    300: '#4FC3F7',\n    400: '#29B6F6',\n    500: '#03A9F4',\n    600: '#039BE5',\n    700: '#0288D1',\n    800: '#0277BD',\n    900: '#01579B',\n    A100: '#80D8FF',\n    A200: '#40C4FF',\n    A400: '#00B0FF',\n    A700: '#0091EA',\n  },\n  cyan: {\n    50: '#E0F7FA',\n    100: '#B2EBF2',\n    200: '#80DEEA',\n    300: '#4DD0E1',\n    400: '#26C6DA',\n    500: '#00BCD4',\n    600: '#00ACC1',\n    700: '#0097A7',\n    800: '#00838F',\n    900: '#006064',\n    A100: '#84FFFF',\n    A200: '#18FFFF',\n    A400: '#00E5FF',\n    A700: '#00B8D4',\n  },\n  teal: {\n    50: '#E0F2F1',\n    100: '#B2DFDB',\n    200: '#80CBC4',\n    300: '#4DB6AC',\n    400: '#26A69A',\n    500: '#009688',\n    600: '#00897B',\n    700: '#00796B',\n    800: '#00695C',\n    900: '#004D40',\n    A100: '#A7FFEB',\n    A200: '#64FFDA',\n    A400: '#1DE9B6',\n    A700: '#00BFA5',\n  },\n  green: {\n    50: '#E8F5E9',\n    100: '#C8E6C9',\n    200: '#A5D6A7',\n    300: '#81C784',\n    400: '#66BB6A',\n    500: '#4CAF50',\n    600: '#43A047',\n    700: '#388E3C',\n    800: '#2E7D32',\n    900: '#1B5E20',\n    A100: '#B9F6CA',\n    A200: '#69F0AE',\n    A400: '#00E676',\n    A700: '#00C853',\n  },\n  lightGreen: {\n    50: '#F1F8E9',\n    100: '#DCEDC8',\n    200: '#C5E1A5',\n    300: '#AED581',\n    400: '#9CCC65',\n    500: '#8BC34A',\n    600: '#7CB342',\n    700: '#689F38',\n    800: '#558B2F',\n    900: '#33691E',\n    A100: '#CCFF90',\n    A200: '#B2FF59',\n    A400: '#76FF03',\n    A700: '#64DD17',\n  },\n  lime: {\n    50: '#F9FBE7',\n    100: '#F0F4C3',\n    200: '#E6EE9C',\n    300: '#DCE775',\n    400: '#D4E157',\n    500: '#CDDC39',\n    600: '#C0CA33',\n    700: '#AFB42B',\n    800: '#9E9D24',\n    900: '#827717',\n    A100: '#F4FF81',\n    A200: '#EEFF41',\n    A400: '#C6FF00',\n    A700: '#AEEA00',\n  },\n  yellow: {\n    50: '#FFFDE7',\n    100: '#FFF9C4',\n    200: '#FFF59D',\n    300: '#FFF176',\n    400: '#FFEE58',\n    500: '#FFEB3B',\n    600: '#FDD835',\n    700: '#FBC02D',\n    800: '#F9A825',\n    900: '#F57F17',\n    A100: '#FFFF8D',\n    A200: '#FFFF00',\n    A400: '#FFEA00',\n    A700: '#FFD600',\n  },\n  amber: {\n    50: '#FFF8E1',\n    100: '#FFECB3',\n    200: '#FFE082',\n    300: '#FFD54F',\n    400: '#FFCA28',\n    500: '#FFC107',\n    600: '#FFB300',\n    700: '#FFA000',\n    800: '#FF8F00',\n    900: '#FF6F00',\n    A100: '#FFE57F',\n    A200: '#FFD740',\n    A400: '#FFC400',\n    A700: '#FFAB00',\n  },\n  orange: {\n    50: '#FFF3E0',\n    100: '#FFE0B2',\n    200: '#FFCC80',\n    300: '#FFB74D',\n    400: '#FFA726',\n    500: '#FF9800',\n    600: '#FB8C00',\n    700: '#F57C00',\n    800: '#EF6C00',\n    900: '#E65100',\n    A100: '#FFD180',\n    A200: '#FFAB40',\n    A400: '#FF9100',\n    A700: '#FF6D00',\n  },\n  deepOrange: {\n    50: '#FBE9E7',\n    100: '#FFCCBC',\n    200: '#FFAB91',\n    300: '#FF8A65',\n    400: '#FF7043',\n    500: '#FF5722',\n    600: '#F4511E',\n    700: '#E64A19',\n    800: '#D84315',\n    900: '#BF360C',\n    A100: '#FF9E80',\n    A200: '#FF6E40',\n    A400: '#FF3D00',\n    A700: '#DD2C00',\n  },\n  brown: {\n    50: '#EFEBE9',\n    100: '#D7CCC8',\n    200: '#BCAAA4',\n    300: '#A1887F',\n    400: '#8D6E63',\n    500: '#795548',\n    600: '#6D4C41',\n    700: '#5D4037',\n    800: '#4E342E',\n    900: '#3E2723',\n  },\n  blueGrey: {\n    50: '#ECEFF1',\n    100: '#CFD8DC',\n    200: '#B0BEC5',\n    300: '#90A4AE',\n    400: '#78909C',\n    500: '#607D8B',\n    600: '#546E7A',\n    700: '#455A64',\n    800: '#37474F',\n    900: '#263238',\n  },\n  grey: {\n    50: '#FAFAFA',\n    100: '#F5F5F5',\n    200: '#EEEEEE',\n    300: '#E0E0E0',\n    400: '#BDBDBD',\n    500: '#9E9E9E',\n    600: '#757575',\n    700: '#616161',\n    800: '#424242',\n    900: '#212121',\n  },\n}\n/*\nexport const BACKGROUND_COLORS = [\n  'F7F9FC',\n  'EEEDFD',\n  'FFEBEE',\n  'FDEFE2',\n  'E7F9F3',\n  'EDEEFD',\n  'ECFAFE',\n  'F2FFD1',\n  'FFF7E0',\n  'FDF1F7',\n  'EAEFE6',\n  'E0E6EB',\n  'E4E2F3',\n  'E6DFEC',\n  'E2F4E8',\n  'E6EBEF',\n  'EBE6EF',\n  'E8DEF6',\n  'D8E8F3',\n  'ECE1FE'\n]*/\n\nexport const BACKGROUND_COLORS = [\n  TAILWIND_COLORS.gray['500'],\n  TAILWIND_COLORS.stone['500'],\n  TAILWIND_COLORS.red['500'],\n  TAILWIND_COLORS.orange['500'],\n  TAILWIND_COLORS.amber['400'],\n  TAILWIND_COLORS.yellow['400'],\n  TAILWIND_COLORS.lime['500'],\n  TAILWIND_COLORS.green['500'],\n  TAILWIND_COLORS.emerald['500'],\n  TAILWIND_COLORS.teal['500'],\n  TAILWIND_COLORS.cyan['500'],\n  TAILWIND_COLORS.sky['500'],\n  TAILWIND_COLORS.blue['500'],\n  TAILWIND_COLORS.indigo['500'],\n  TAILWIND_COLORS.violet['500'],\n  TAILWIND_COLORS.purple['500'],\n  TAILWIND_COLORS.fuchsia['500'],\n  TAILWIND_COLORS.pink['500'],\n  TAILWIND_COLORS.rose['500'],\n  MATERIAL_COLORS.red['500'],\n  MATERIAL_COLORS.pink['500'],\n  MATERIAL_COLORS.purple['500'],\n  MATERIAL_COLORS.deepPurple['500'],\n  MATERIAL_COLORS.indigo['500'],\n  MATERIAL_COLORS.blue['500'],\n  MATERIAL_COLORS.lightBlue['600'],\n  MATERIAL_COLORS.cyan['500'],\n  MATERIAL_COLORS.teal['500'],\n  MATERIAL_COLORS.green['500'],\n  MATERIAL_COLORS.lightGreen['600'],\n  MATERIAL_COLORS.lime['600'],\n  MATERIAL_COLORS.yellow['600'],\n  MATERIAL_COLORS.amber['600'],\n  MATERIAL_COLORS.orange['500'],\n  MATERIAL_COLORS.deepOrange['500'],\n  MATERIAL_COLORS.brown['500'],\n  MATERIAL_COLORS.grey['500'],\n  MATERIAL_COLORS.blueGrey['500'],\n]\n\n/*\nexport const TEXT_COLORS = [\n  '060A23',\n  '4409B9',\n  'BD0F2C',\n  'C56511',\n  '216E55',\n  '05128A',\n  '1F84A3',\n  '526E0C',\n  '935F10',\n  '973562',\n  '69785E',\n  '2D3A46',\n  '280F6D',\n  '37364F',\n  '363548',\n  '4D176E',\n  'AB133E',\n  '420790',\n  '222A54',\n  '192251'\n]*/\n\n/*\nexport const SHAPE_COLORS = [\n  '060A23',\n  '5E36F5',\n  'E11234',\n  'E87917',\n  '3EA884',\n  '0618BC',\n  '0FBBE6',\n  '87B80A',\n  'FFC933',\n  'EE77AF',\n  '69785E',\n  '2D3A46',\n  '280F6D',\n  '37364F',\n  '363548',\n  '4D176E',\n  'AB133E',\n  '420790',\n  '222A54',\n  '192251'\n]\n*/\n\nexport const SHAPE_COLORS = [\n  TAILWIND_COLORS.gray['100'],\n  TAILWIND_COLORS.stone['100'],\n  TAILWIND_COLORS.red['100'],\n  TAILWIND_COLORS.orange['100'],\n  TAILWIND_COLORS.amber['700'],\n  TAILWIND_COLORS.yellow['700'],\n  TAILWIND_COLORS.lime['100'],\n  TAILWIND_COLORS.green['100'],\n  TAILWIND_COLORS.emerald['100'],\n  TAILWIND_COLORS.teal['100'],\n  TAILWIND_COLORS.cyan['100'],\n  TAILWIND_COLORS.sky['100'],\n  TAILWIND_COLORS.blue['100'],\n  TAILWIND_COLORS.indigo['100'],\n  TAILWIND_COLORS.violet['100'],\n  TAILWIND_COLORS.purple['100'],\n  TAILWIND_COLORS.fuchsia['100'],\n  TAILWIND_COLORS.pink['100'],\n  TAILWIND_COLORS.rose['100'],\n  MATERIAL_COLORS.red['100'],\n  MATERIAL_COLORS.pink['100'],\n  MATERIAL_COLORS.purple['100'],\n  MATERIAL_COLORS.deepPurple['100'],\n  MATERIAL_COLORS.indigo['100'],\n  MATERIAL_COLORS.blue['100'],\n  MATERIAL_COLORS.lightBlue['100'],\n  MATERIAL_COLORS.cyan['100'],\n  MATERIAL_COLORS.teal['100'],\n  MATERIAL_COLORS.green['100'],\n  MATERIAL_COLORS.lightGreen['900'],\n  MATERIAL_COLORS.lime['900'],\n  MATERIAL_COLORS.yellow['900'],\n  MATERIAL_COLORS.amber['900'],\n  MATERIAL_COLORS.orange['100'],\n  MATERIAL_COLORS.deepOrange['100'],\n  MATERIAL_COLORS.brown['100'],\n  MATERIAL_COLORS.grey['100'],\n  MATERIAL_COLORS.blueGrey['100'],\n]\n\n","import * as React from 'react';\nexport interface ShapeProps {\n  width: number\n}\n\nconst defaultProps = {\n  viewBox: '0 0 32 32',\n  fill: 'none'\n}\n\n//              ,,\n//             `&M`\n//            .*&&*.\n//            f&&&&u\n// '|r/1-+I;\"/&&&&&&),:!>]1/r/'\n//   !M&&&&&&&&&&&&&&&&&&&&&I\n//    '/&&&&&&&&&&&&&&&&&&/'\n//      IM&&&&&&&&&&&&&&MI\n//      IM&&&&&&&&&&&&&&MI\n//    '/&&&&&&&&&&&&&&&&&&/'\n//   I&&&&&&&&&&&&&&&&&&&&&M!\n// '|r/1]>!:,)&&&&&&/\":I+-1/r|'\n//            u&&&&f\n//            .*&&*.\n//             `M&`\n//              ,,\n\n// Shape 88 in figma\nexport const Shape1 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M16 0L19.856 9.32122L29.8565 8L23.712 16L29.8565 24L19.856 22.6787L16 32L12.144 22.6787L2.14359 24L8.28799 16L2.14359 8L12.144 9.32122L16 0Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//                ``\n//        .       nc       .\n//        {t`    ,$$,    `\\(\n//         *$8!. *$$* .!M$*\n//         'B$$$*$$$$*$$$B'\n//  ';,,,\"^^[$$$$$$$$$$$$[^^^,,;;'\n//    ;f$$$$$$$$$$$$$$$$$$$$$$f;.\n//       ;f$$$$$$$$$$$$$$$$f,.\n//      .,\\B$$$$$$$$$$$$$$$t;\n//   .,t$$$$$$$$$$$$$$$$$$$$$$t;\n//  ';;,,^^^[$$$$$$$$$$$$[^^\",,,;'\n//         '8$$$c$$$$*$$$B`\n//         *$M<. *$$M .!M$*\n//        [\\`    ,$$,    `\\\\\n//        .       nn       .\n//                ``\n\n// Shape 87 in figma\nexport const Shape2 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M16.017 0L18.4 8.66546L25.4214 3.05573L22.256 11.467L31.2338 11.0557L23.729 16L31.2338 20.9443L22.256 20.533L25.4214 28.9443L18.4 23.3346L16.017 32L13.6338 23.3346L6.61234 28.9443L9.77776 20.533L0.800003 20.9443L8.30492 16L0.800003 11.0557L9.77776 11.467L6.61234 3.05573L13.6338 8.66546L16.017 0Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n\n//               +B8<\n//              [$$$$[\n//             [$$$$$$\\\n//            ($$$$$$$$\\\n//           ($$$$$$$$$$\\\n//       `!tB$$$$$$$$$$$$8t!'\n//   '!tB$$$$$$$$$$$$$$$$$$$$8(;'\n// <8$$$$$$$$$$$$$$$$$$$$$$$$$$$$8?\n// ?8$$$$$$$$$$$$$$$$$$$$$$$$$$$$8<\n//   ';(8$$$$$$$$$$$$$$$$$$$$BfI'\n//       '!f8$$$$$$$$$$$$Bf!`\n//           \\$$$$$$$$$$(\n//            \\$$$$$$$${\n//             \\$$$$$$[\n//              [$$$$[\n//               <8B+\n\n// Shape 86 in figma\nexport const Shape3 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4196)\">\n      <path d=\"M14.3891 0.980581C15.0651 -0.32686 16.9349 -0.32686 17.6109 0.980581L21.9157 9.3063C22.0882 9.63994 22.36 9.91178 22.6938 10.0843L31.0194 14.3891C32.3269 15.0651 32.3269 16.9349 31.0194 17.6109L22.6938 21.9157C22.36 22.0882 22.0882 22.36 21.9157 22.6938L17.6109 31.0194C16.9349 32.3269 15.0651 32.3269 14.3891 31.0194L10.0843 22.6938C9.91178 22.36 9.63994 22.0882 9.3063 21.9157L0.980581 17.6109C-0.32686 16.9349 -0.32686 15.0651 0.980581 14.3891L9.3063 10.0843C9.63994 9.91178 9.91178 9.63994 10.0843 9.3063L14.3891 0.980581Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4196\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//           .   ,\\(,   .\n//         ,B$$*B$$$$BM$$B,\n//     ';<[$$$$$$$$$$$$$$$$(<,`\n//     $$$$$$$$$$$$$$$$$$$$$$$B\n//    I$$$$$$$$$$$$$$$$$$$$$$$$,\n//  +B$$$$$$$$$$$$$$$$$$$$$$$$$$8[\n//  ?$$$$$$$$$$$$$$$$$$$$$$$$$$$$?\n//  \"$$$$$$$$$$$$$$$$$$$$$$$$$$$$\"\n// ^$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B^\n// .($$$$$$$$$$$$$$$$$$$$$$$$$$$$(.\n//   +$$$$$$$$$$$$$$$$$$$$$$$$$$+\n//   ($$$$$$$$$$$$$$$$$$$$$$$$$$(\n//   .,?M$$$$$$$$$$$$$$$$$$$$M[,\n//      .B$$$$$$$$$$$$$$$$$$8.\n//       '?++f$$$$$$$$$$f+++`\n//            `(f!`^+r\\`\n\n// Shape 85 in figma\nexport const Shape4 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M14.9887 0.824754C15.5774 0.344629 16.4226 0.344629 17.0112 0.824754L18.2805 1.85999C18.68 2.18572 19.2118 2.29912 19.7093 2.16464L21.2862 1.73842C22.0186 1.54049 22.7891 1.88399 23.1315 2.56092L23.8766 4.03445C24.1086 4.49301 24.5466 4.81228 25.0541 4.89268L26.6747 5.14943C27.4214 5.26773 27.9835 5.89263 28.0222 6.64772L28.1075 8.31013C28.1338 8.82127 28.403 9.28903 28.8318 9.56852L30.2184 10.4723C30.8498 10.8839 31.1083 11.6805 30.8389 12.3845L30.2424 13.9434C30.0598 14.4203 30.116 14.9557 30.3933 15.3844L31.2989 16.7838C31.708 17.4163 31.6206 18.2485 31.089 18.7822L29.9162 19.9597C29.5555 20.3217 29.3894 20.8342 29.4694 21.339L29.7304 22.9869C29.8483 23.7323 29.4293 24.4589 28.725 24.7302L27.1874 25.3222C26.7088 25.5065 26.3475 25.909 26.2158 26.4046L25.7901 28.0075C25.5957 28.7397 24.9146 29.235 24.1582 29.1945L22.5248 29.1072C22.0107 29.0797 21.5149 29.3011 21.1923 29.7022L20.1622 30.9835C19.6864 31.5753 18.8602 31.7512 18.1845 31.4043L16.7307 30.6579C16.272 30.4226 15.728 30.4226 15.2693 30.6579L13.8154 31.4043C13.1399 31.7512 12.3136 31.5753 11.8378 30.9835L10.8077 29.7022C10.4851 29.3011 9.98927 29.0797 9.47524 29.1072L7.84177 29.1945C7.08544 29.235 6.40433 28.7397 6.2099 28.0075L5.78411 26.4046C5.65246 25.909 5.29123 25.5065 4.81267 25.3222L3.27505 24.7302C2.57065 24.4589 2.15163 23.7323 2.26968 22.9869L2.53059 21.339C2.61051 20.8342 2.44449 20.3217 2.08384 19.9597L0.910984 18.7822C0.379377 18.2485 0.292011 17.4163 0.701193 16.7838L1.60664 15.3844C1.88403 14.9557 1.94011 14.4203 1.75761 13.9434L1.16105 12.3845C0.891637 11.6805 1.15017 10.8839 1.78166 10.4723L3.16822 9.56852C3.59699 9.28903 3.86617 8.82127 3.8924 8.31013L3.97771 6.64772C4.01646 5.89263 4.57848 5.26773 5.32524 5.14943L6.94588 4.89268C7.4534 4.81228 7.89142 4.49301 8.12332 4.03445L8.86852 2.56092C9.21086 1.88399 9.9815 1.54049 10.7138 1.73842L12.2907 2.16464C12.7882 2.29912 13.3201 2.18572 13.7194 1.85999L14.9887 0.824754Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//            .I  II  !.\n//         1I .$! cr ;$  ![\n//      +I .*n`8$[$$[$B`rM..I+\n//   ''  +$\\r$$$$$$$$$$$$\\\\B+  `.\n//    ;nn+n$$$$$$$$$$$$$$$$c[rr;\n//  II,\"?$$$$$$$$$$$$$$$$$$$$+^,I;\n//   ';($$$$$$$$$$$$$$$$$$$$$$\\;'\n// ^+\\n*$$$$$$$$$$$$$$$$$$$$$$*n\\?\"\n//    \"($$$$$$$$$$$$$$$$$$$$$$\\`\n// `+({[M$$$$$$$$$$$$$$$$$$$$*[[(+^\n//   .Ir$B$$$$$$$$$$$$$$$$$$B$t;\n//  'I^'`r$$$$$$$$$$$$$$$$$$r`'\";'\n//     <r!`n$B$$$$$$$$$$$$n'!r<\n//        (f`\"$rf$**$\\r$,`f\\\n//       '`  r[ ;$`'$; {r  ``\n//           \"  \"+  ?\"  ,\n\n// Shape 84 in figma\nexport const Shape5 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4202)\">\n     <path d=\"M15.6499 0.295421C15.7177 -0.0984755 16.2822 -0.0984728 16.3501 0.295424L17.0981 4.63688C17.1578 4.98301 17.6286 5.04261 17.7723 4.72221L19.5742 0.703522C19.7378 0.338907 20.2845 0.47956 20.2525 0.877992L19.8994 5.26941C19.8712 5.61954 20.3125 5.79459 20.5312 5.52005L23.2741 2.07662C23.5229 1.76421 24.0176 2.03669 23.8877 2.41461L22.4557 6.58008C22.3414 6.91218 22.7254 7.1917 23.0054 6.98027L26.5168 4.32848C26.8354 4.08789 27.2469 4.47506 27.0272 4.80874L24.6062 8.48651C24.4133 8.77973 24.7158 9.14614 25.0395 9.01112L29.0987 7.31758C29.467 7.16394 29.7696 7.64147 29.4739 7.90994L26.2162 10.8689C25.9565 11.1048 26.1586 11.5351 26.5056 11.485L30.8576 10.8561C31.2525 10.7991 31.427 11.337 31.0741 11.5234L27.1842 13.5776C26.8741 13.7414 26.963 14.2085 27.3115 14.2464L31.683 14.7217C32.0797 14.7649 32.115 15.3293 31.727 15.4219L27.4494 16.4424C27.1083 16.5238 27.0786 16.9984 27.4067 17.1219L31.5229 18.6715C31.8963 18.8122 31.7906 19.3677 31.3917 19.3608L26.9952 19.2834C26.6446 19.2771 26.4981 19.7294 26.7853 19.9309L30.3875 22.4574C30.7142 22.6867 30.4739 23.1984 30.0893 23.0922L25.8502 21.9218C25.5122 21.8285 25.2579 22.2299 25.4861 22.4966L28.348 25.8414C28.6077 26.145 28.2478 26.5806 27.9016 26.3819L24.0862 24.192C23.7819 24.0174 23.436 24.343 23.5909 24.6581L25.5326 28.6109C25.7088 28.9696 25.2522 29.3019 24.9662 29.0234L21.8141 25.9515C21.5629 25.7066 21.1469 25.9357 21.2187 26.2795L22.1184 30.5918C22.2 30.9832 21.675 31.1914 21.4674 30.8502L19.1768 27.0894C18.9941 26.7896 18.5344 26.9078 18.5186 27.2587L18.3195 31.66C18.3016 32.0592 17.7414 32.1301 17.625 31.7478L16.3398 27.5346C16.2373 27.1987 15.7627 27.1987 15.6602 27.5346L14.3751 31.7478C14.2585 32.1301 13.6985 32.0592 13.6804 31.66L13.4814 27.2587C13.4656 26.9078 13.0059 26.7896 12.8232 27.0894L10.5327 30.8502C10.3249 31.1914 9.80003 30.9832 9.88166 30.5918L10.7814 26.2795C10.8531 25.9357 10.4372 25.7066 10.1859 25.9515L7.03384 29.0234C6.74786 29.3019 6.29117 28.9696 6.46736 28.6109L8.40918 24.6581C8.564 24.343 8.218 24.0174 7.91381 24.192L4.09835 26.3819C3.75218 26.5806 3.39235 26.145 3.65202 25.8414L6.51397 22.4966C6.74214 22.2299 6.48782 21.8285 6.14984 21.9218L1.91069 23.0922C1.52607 23.1984 1.28572 22.6867 1.61254 22.4574L5.21478 19.9309C5.50198 19.7294 5.35531 19.2771 5.0048 19.2834L0.60831 19.3608C0.209421 19.3677 0.103642 18.8122 0.477101 18.6715L4.59328 17.1219C4.92146 16.9984 4.89165 16.5238 4.55061 16.4424L0.27304 15.4219C-0.115062 15.3293 -0.0796143 14.7649 0.317009 14.7217L4.68851 14.2464C5.03704 14.2085 5.12597 13.7414 4.81584 13.5776L0.925958 11.5234C0.573032 11.337 0.747473 10.7991 1.14234 10.8561L5.49448 11.485C5.84146 11.5351 6.04355 11.1048 5.78381 10.8689L2.52603 7.90994C2.23046 7.64147 2.53293 7.16394 2.90123 7.31758L6.96054 9.01112C7.28419 9.14614 7.58672 8.77973 7.39371 8.48651L4.97274 4.80874C4.75307 4.47506 5.16458 4.08789 5.48317 4.32848L8.99459 6.98027C9.27456 7.1917 9.65853 6.91218 9.54437 6.58008L8.1123 2.41461C7.98238 2.03669 8.47706 1.76421 8.72592 2.07662L11.4688 5.52005C11.6875 5.79459 12.1288 5.61952 12.1007 5.26941L11.7475 0.877989C11.7155 0.479558 12.2622 0.338906 12.4257 0.703518L14.2278 4.72221C14.3714 5.04261 14.8423 4.98301 14.902 4.63688L15.6499 0.295421Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4202\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//             ^(*B$*(^\n//           .t$$$$$$$$f.\n//     .`^\"I\\B$$$$$$$$$$B(;\"^`\n//   `t$$$$$$$$$$$$$$$$$$$$$$$$t`\n//  `$$$$$$$$$$$$$$$$$$$$$$$$$$$$`\n//  I$$$$$$$$$$$$$$$$$$$$$$$$$$$$+\n//  .*$$$$$$$$$$$$$$$$$$$$$$$$$$*.\n//   '$$$$$$$$$$$$$$$$$$$$$$$$$$`\n//   '$$$$$$$$$$$$$$$$$$$$$$$$$$`\n//  .*$$$$$$$$$$$$$$$$$$$$$$$$$$*.\n//  i$$$$$$$$$$$$$$$$$$$$$$$$$$$$+\n//  `$$$$$$$$$$$$$$$$$$$$$$$$$$$$`\n//   'f$$$$$$$$$$$$$$$$$$$$$$$$r`\n//      `^\";(B$$$$$$$$$$B\\I\"^`.\n//           .($$$$$$$$f.\n//             `(*$$*(^\n\n// Shape 83 in figma\nexport const Shape6 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4205)\">\n      <path d=\"M11.4493 2.61355C13.4938 -0.871185 18.532 -0.871183 20.5765 2.61355L20.6507 2.74011C21.5941 4.34773 23.3134 5.34048 25.1773 5.35354L25.3242 5.35456C29.3643 5.38285 31.8834 9.74597 29.8877 13.259L29.8152 13.3866C28.8946 15.0072 28.8946 16.9928 29.8152 18.6134L29.8877 18.741C31.8834 22.2541 29.3643 26.6171 25.3242 26.6454L25.1773 26.6464C23.3134 26.6595 21.5941 27.6523 20.6507 29.2598L20.5765 29.3864C18.532 32.8712 13.4938 32.8712 11.4493 29.3864L11.375 29.2598C10.4318 27.6523 8.71227 26.6595 6.84843 26.6464L6.7017 26.6454C2.66154 26.6171 0.142494 22.2541 2.13806 18.741L2.21054 18.6134C3.13117 16.9928 3.13117 15.0072 2.21054 13.3866L2.13806 13.259C0.142494 9.74597 2.66154 5.38285 6.7017 5.35456L6.84843 5.35354C8.71229 5.34048 10.4318 4.34773 11.375 2.74011L11.4493 2.61355Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4205\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//               .$$.\n//               .$$.\n//     !M!       .$$.       !M!\n//      !88!     .$$.     !88!\n//        !88!   .$$.   !88!\n//          !88! .$$. !88!\n//            !88?$$?88!\n// ++++++++++++[B$$$$B[++++++++++++\n// ++++++++++++[B$$$$B[++++++++++++\n//            !88?$$?88!\n//          !88! .$$. !88!\n//        !88!   .$$.   !88!\n//      !88!     .$$.     !88!\n//     !M!       .$$.       !*;\n//               .$$.\n//               .$$.\n\n// Shape 82 in figma\nexport const Shape7 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.1429 0H14.8571V13.2409L5.49442 3.87816L3.87818 5.49442L13.2409 14.8571H0V17.1429H13.2409L3.87818 26.5056L5.49442 28.1218L14.8571 18.759V32H17.1429V18.759L26.5056 28.1218L28.1218 26.5056L18.759 17.1429H32V14.8571H18.759L28.1218 5.4944L26.5056 3.87816L17.1429 13.2409V0Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//          `!`  .$$.  '+^\n//          !$*. .$$.  *$;\n//     !M!   \\$f .$$. r$[   !M!\n//      !88!  *$?.$$.?$n  !88!\n//  ,+\".  !88!'M$<$$<$8'!88!  .,?,\n//  ;(M$8(;,+88r$$$$$$f88<^!\\*$*{;\n//     .^+n8$*$$$$$$$$$$M$Bf<\".\n// +++++++++tB$$$$$$$$$$Br?++++++++\n// ++++++++?rB$$$$$$$$$$Bf+++++++++\n//     .,<tB$M$$$$$$$$$$*$8n+^.\n//  ;{*$*\\!^<88f$$$$$$r88+,;(8$M(;\n//  ,+,.  !88!'8$<$$<$M'!88!  .\"+,\n//      !88!  n$?.$$.?$*  !88!\n//     !M!   [$t .$$. f$\\   !*;\n//          ;$*  .$$. .*$!\n//          ^+'  .$$.  `!`\n\n// Shape 81 in figma\nexport const Shape8 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.1429 0H14.8571V10.1205L11.0659 0.736931L8.94666 1.59318L12.8361 11.2198L5.49442 3.87816L3.87818 5.49442L10.9148 12.5311L1.79586 8.5469L0.880734 10.6414L10.5297 14.8571H0V17.1429H10.5297L0.880738 21.3586L1.79586 23.4531L10.9148 19.469L3.87818 26.5056L5.49442 28.1218L12.8361 20.7802L8.94666 30.4069L11.0659 31.263L14.8571 21.8795V32H17.1429V21.8795L20.9341 31.263L23.0533 30.4069L19.164 20.7802L26.5056 28.1218L28.1218 26.5056L21.0851 19.469L30.2042 23.4531L31.1192 21.3586L21.4704 17.1429H32V14.8571H21.4702L31.1192 10.6414L30.2042 8.5469L21.0851 12.5311L28.1218 5.4944L26.5056 3.87816L19.164 11.2198L23.0533 1.59318L20.9341 0.736931L17.1429 10.1205V0Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//               .88.\n//               f$$f\n//              \\$$$$\\\n//            `n$$$$$$*`\n//          .[$$$$$$$$$$('\n//        `(B$$$$$$$$$$$$$t`\n//     ^?*$$$$$$$$$$$$$$$$$$8+^\n// I(*$$$$$$$$$$$$$$$$$$$$$$$$$$c{I\n// ,[n$$$$$$$$$$$$$$$$$$$$$$$$$Br[;\n//     `+8$$$$$$$$$$$$$$$$$$M?`\n//        `\\$$$$$$$$$$$$$$\\`\n//          .[$$$$$$$$$$('\n//            'c$$$$$$*`\n//              \\$$$$f\n//               \\$$r\n//               .88.\n\n// Shape 80 in figma\nexport const Shape9 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M16.0406 32C15.536 32 15.1094 31.6346 14.9872 31.145C14.5976 29.5845 13.8519 27.925 12.75 26.1667C11.4444 24.0555 9.58333 22.0973 7.16667 20.2917C5.06478 18.703 2.9629 17.6197 0.861021 17.0418C0.363208 16.905 0 16.4635 0 15.9472C0 15.4411 0.349237 15.0047 0.835957 14.8657C2.89672 14.2774 4.88195 13.3221 6.79166 12C8.98611 10.4722 10.8194 8.63888 12.2917 6.5C13.5941 4.59464 14.4881 2.71021 14.9738 0.846731C15.101 0.358552 15.5308 0 16.0354 0C16.5454 0 16.9782 0.366493 17.1024 0.861328C17.3827 1.97846 17.8208 3.12192 18.4166 4.29166C19.1667 5.73611 20.125 7.12499 21.2917 8.45834C22.4861 9.76389 23.8195 10.9444 25.2917 12C27.2155 13.3637 29.1712 14.3218 31.159 14.8742C31.6467 15.0097 32 15.4439 32 15.95C32 16.4637 31.636 16.9014 31.1406 17.0373C29.8806 17.3827 28.5837 17.9398 27.2501 18.7083C25.6389 19.6528 24.1389 20.7778 22.7499 22.0834C21.3611 23.3611 20.2222 24.7083 19.3333 26.125C18.2293 27.8869 17.4827 29.5592 17.0939 31.1422C16.9733 31.6333 16.5461 32 16.0406 32Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//             `$$$$$$`\n//      .+!    `$$$$$$`    !+.\n//    .+B$$8!  `$$$$$$`  !8$$B+.\n//   .M$$$$$$8!^$$$$$$^!8$$$$$$M.\n//     !8$$$$$$B$$$$$$$$$$$$$8!\n//       !8$$$$$$$$$$$$$$$$8!\n// [[[[[[[($$$$$$$$$$$$$$$B([[[[[[[\n// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n// [[[[[[[(B$$$$$$$$$$$$$$$([[[[[[[\n//       !8$$$$$$$$$$$$$$$$8!\n//     !8$$$$$$$$$$$$$B$$$$$$8!\n//   .M$$$$$$8!^$$$$$$^!8$$$$$$M.\n//    .+B$$8!  `$$$$$$`  !8$$B+.\n//      .+!    `$$$$$$`    !+.\n//             `$$$$$$`\n\n// Shape 79 in figma\nexport const Shape10 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M19.2 0H12.8V8.27451L6.94904 2.42355L2.42355 6.94902L8.27453 12.8H0V19.2H8.27451L2.42355 25.0509L6.94904 29.5765L12.8 23.7254V32H19.2V23.7254L25.051 29.5765L29.5765 25.051L23.7254 19.2H32V12.8H23.7254L29.5765 6.94902L25.051 2.42354L19.2 8.27451V0Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//             `{*$$*(`\n//            ,$$$$$$$$,\n//            +$$$$$$$$?\n//             \\$$$$$$f\n//              `f$$f`\n//   .`^`         ?(         `^`.\n// 't$$$$$('     '[('     '\\B$$$$t.\n// M$$$$$$$$t\"''($$$$('',\\$$$$$$$$*\n// *$$$$$$$$f,``($$$$f``,f$$$$$$$$*\n// 'f$$$$B\\'     `[\\`     '($$$$$f'\n//   .`^`         [[         `^`.\n//              `t$$t`\n//             \\$$$$$$(\n//            ?$$$$$$$$+\n//            ,$$$$$$$$,\n//             `(*$$*[`\n\n// Shape 78 in figma\nexport const Shape11 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M16 32C14.6667 32 13.5556 31.5694 12.6667 30.7083C11.7778 29.8472 11.3333 28.8056 11.3333 27.5834C11.3333 26.889 11.4722 26.2638 11.75 25.7083C12.0278 25.1528 12.5139 24.5416 13.2083 23.875C13.9306 23.2083 14.5 22.5834 14.9167 22C15.3611 21.389 15.5833 20.8611 15.5833 20.4166V18.9166C14.9722 18.7778 14.4306 18.5 13.9583 18.0834C13.5139 17.6389 13.2222 17.111 13.0833 16.5H11.5833C11.1111 16.5 10.5556 16.7222 9.91667 17.1667C9.27778 17.611 8.66667 18.1528 8.08333 18.7917C7.5 19.4306 6.91667 19.9027 6.33333 20.2083C5.77778 20.5139 5.1389 20.6667 4.41667 20.6667C3.16667 20.6667 2.1111 20.2222 1.25 19.3333C0.416667 18.4445 0 17.3333 0 16C0 14.6667 0.416667 13.5556 1.25 12.6667C2.1111 11.7778 3.16667 11.3333 4.41667 11.3333C5.58333 11.3333 6.58333 11.75 7.41667 12.5833C8.25 13.4167 9 14.125 9.66667 14.7083C10.3333 15.2917 10.9722 15.5833 11.5833 15.5833H13.0833C13.2222 14.9444 13.5139 14.4167 13.9583 14C14.4306 13.5556 14.9722 13.2778 15.5833 13.1667V11.6667C15.5833 10.9444 15.0278 10.0278 13.9167 8.91667L13.0417 8.04166C11.9028 6.90278 11.3333 5.69445 11.3333 4.41667C11.3333 3.16667 11.7778 2.12499 12.6667 1.29167C13.5833 0.430555 14.6944 0 16 0C17.3333 0 18.4445 0.430555 19.3333 1.29167C20.2222 2.15278 20.6667 3.19445 20.6667 4.41667C20.6667 5.83333 19.9722 7.16667 18.5834 8.41667C17.1944 9.69445 16.5 10.7778 16.5 11.6667V13.1667C17.1389 13.2778 17.6667 13.5556 18.0834 14C18.5278 14.4167 18.8056 14.9444 18.9166 15.5833H20.4166C21.3611 15.5833 22.4445 14.875 23.6667 13.4583C24.9166 12.0417 26.2222 11.3333 27.5834 11.3333C28.8333 11.3333 29.875 11.7917 30.7083 12.7083C31.5694 13.5972 32 14.6944 32 16C32 17.3333 31.5694 18.4445 30.7083 19.3333C29.8472 20.2222 28.8056 20.6667 27.5834 20.6667C26.4166 20.6667 25.4306 20.2638 24.625 19.4584C23.8195 18.6528 23.0694 17.9584 22.375 17.375C21.6805 16.7917 21.0278 16.5 20.4166 16.5H18.9166C18.6944 17.8333 17.889 18.6389 16.5 18.9166V20.4166C16.5 21.2499 17.1944 22.3195 18.5834 23.625C19.9722 24.9306 20.6667 26.2499 20.6667 27.5834C20.6667 28.8333 20.2083 29.875 19.2917 30.7083C18.4027 31.5694 17.3056 32 16 32Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//             ,t*$$M(,\n//           .*$$$$$$$$*.\n//           ($$$$$$$$$$(\n//           [$$$$$$$$$${\n//           .r$$$$$$$$r\n//   ,[n**r+`  ,*$$$$n;  ^[rc*n{^\n// '8$$$$$$$$M\"  \"BBI  ,M$$$$$$$$M`\n// M$$$$$$$$$$$M<\"fr^!*$$$$$$$$$$$*\n// M$$$$$$$$$$$*!^ft^In$$$$$$$$$$$M\n// `M$$$$$$$$M,  \"8B,  ^n$$$$$$$$8'\n//   ,(n*cr[`  ^n$$$$n;  `+r**n[,\n//            t$$$$$$$$c.\n//           {$$$$$$$$$$[\n//           ($$$$$$$$$$(\n//           .*$$$$$$$$*.\n//             ;(M$$*f,\n\n// Shape 77 in figma\nexport const Shape12 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M16 32C14.9444 32 13.9722 31.7362 13.0833 31.2083C12.2222 30.7083 11.5278 30.0278 11 29.1667C10.5 28.2778 10.25 27.3056 10.25 26.2499C10.25 24.9166 10.5556 23.8056 11.1667 22.9166C11.7778 22.0278 12.7222 20.9861 14 19.7917C14.9444 18.9306 15.4167 18.111 15.4167 17.3333V16.5834H14.6667C13.8056 16.5834 12.625 17.4445 11.125 19.1667C9.65278 20.889 7.8611 21.7499 5.75 21.7499C4.69445 21.7499 3.72222 21.5 2.83333 21C1.97222 20.4722 1.27778 19.7778 0.75 18.9166C0.25 18.0278 0 17.0555 0 16C0 14.9444 0.25 13.9861 0.75 13.125C1.27778 12.2361 1.97222 11.5417 2.83333 11.0417C3.72222 10.5139 4.69445 10.25 5.75 10.25C7.83333 10.25 9.6111 11.0972 11.0833 12.7917C12.5556 14.4861 13.75 15.3333 14.6667 15.3333H15.4167V14.6667C15.4167 13.8889 14.9444 13.0694 14 12.2083L13.0417 11.3333C12.3472 10.6944 11.7083 9.93056 11.125 9.04166C10.5417 8.12499 10.25 7.02778 10.25 5.75C10.25 4.69445 10.5 3.73611 11 2.87501C11.5278 1.98611 12.2222 1.29167 13.0833 0.791666C13.9722 0.263888 14.9444 0 16 0C17.0555 0 18.0139 0.263888 18.875 0.791666C19.7638 1.31944 20.4584 2.01389 20.9584 2.87501C21.4861 3.73611 21.7499 4.69445 21.7499 5.75C21.7499 7.83333 20.9027 9.6111 19.2083 11.0833C17.5139 12.5556 16.6667 13.75 16.6667 14.6667V15.3333H17.3333C18.2778 15.3333 19.4722 14.4861 20.9166 12.7917C22.3333 11.0972 24.111 10.25 26.2501 10.25C27.3056 10.25 28.2638 10.5139 29.125 11.0417C30.0139 11.5417 30.7083 12.2222 31.2083 13.0833C31.7362 13.9444 32 14.9167 32 16C32 17.0555 31.7362 18.0278 31.2083 18.9166C30.7083 19.7778 30.0139 20.4722 29.125 21C28.2638 21.5 27.3056 21.7499 26.2501 21.7499C24.9445 21.7499 23.8195 21.4306 22.875 20.7917C21.9584 20.1528 20.9306 19.2222 19.7917 18C18.9306 17.0555 18.111 16.5834 17.3333 16.5834H16.6667V17.3333C16.6667 18.3611 17.5139 19.5555 19.2083 20.9166C20.9027 22.2778 21.7499 24.0555 21.7499 26.2499C21.7499 27.3056 21.4861 28.2778 20.9584 29.1667C20.4584 30.0278 19.7778 30.7083 18.9166 31.2083C18.0555 31.7362 17.0834 32 16 32Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//              (B$$8{\n//       ``    ^$$$$$$`    ``\n//     +B$$8+![8$$$$$$8+![8$$B+\n//    +$$$$$$$$$$$$$$$$$$$$$$$$+\n//     +$$$$$$$$$$$$$$$$$$$$$$!\n//      $$$$$$$$$$$$$$$$$$$$$$.\n// '![{8$$$$$$$$$$$$$$$$$$$$$$8([<'\n// 8$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B\n// B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$8\n// '<[(8$$$$$$$$$$$$$$$$$$$$$$8{[!'\n//     .$$$$$$$$$$$$$$$$$$$$$$\n//     <$$$$$$$$$$$$$$$$$$$$$$+\n//    +$$$$$$$$$$$$$$$$$$$$$$$$+\n//     +B$$8[!+8$$$$$$8[!+8$$8!\n//       ``    `$$$$$$^    ``\n//              {8$$B(\n\n// Shape 76 in figma\nexport const Shape13 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M19.2 2.28571C19.2 1.02335 18.1766 0 16.9142 0H15.0857C13.8233 0 12.8 1.02335 12.8 2.28571V2.7563C12.8 4.79266 10.338 5.81246 8.89805 4.37254L8.56528 4.03979C7.67266 3.14717 6.22542 3.14717 5.33278 4.03979L4.03979 5.33278C3.14717 6.22541 3.14717 7.67264 4.03979 8.56528L4.37256 8.89805C5.81248 10.338 4.79267 12.8 2.75632 12.8H2.28571C1.02335 12.8 0 13.8233 0 15.0857V16.9142C0 18.1766 1.02335 19.2 2.28571 19.2H2.7563C4.79267 19.2 5.81248 21.6621 4.37256 23.1019L4.03979 23.4347C3.14717 24.3274 3.14717 25.7746 4.03979 26.6672L5.33278 27.9602C6.22542 28.8528 7.67266 28.8528 8.56528 27.9602L8.89805 27.6274C10.338 26.1875 12.8 27.2074 12.8 29.2437V29.7142C12.8 30.9766 13.8233 32 15.0857 32H16.9142C18.1766 32 19.2 30.9766 19.2 29.7142V29.2437C19.2 27.2074 21.6621 26.1875 23.1019 27.6274L23.4347 27.9602C24.3274 28.8528 25.7746 28.8528 26.6672 27.9602L27.9602 26.6672C28.8528 25.7746 28.8528 24.3274 27.9602 23.4347L27.6275 23.1019C26.1875 21.6621 27.2074 19.2 29.2437 19.2H29.7142C30.9766 19.2 32 18.1766 32 16.9142V15.0857C32 13.8233 30.9766 12.8 29.7142 12.8H29.2437C27.2074 12.8 26.1875 10.338 27.6274 8.89805L27.9602 8.56526C28.8528 7.67264 28.8528 6.22541 27.9602 5.33278L26.6672 4.03979C25.7746 3.14715 24.3274 3.14715 23.4347 4.03979L23.1019 4.37254C21.6621 5.81246 19.2 4.79266 19.2 2.7563V2.28571Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//             .*$$$$r.\n//      .,,    `$$$$$$`    ,,.\n//    .+B$$8!  I$$$$$$, .!8$$B+.\n//    r$$$$$$$$$$$$$$$$$$$$$$$$n\n//     !8$$$$B\\,'   .';\\B$$$$8!\n//      .$$$(.          .($$$.\n// `?[[[r$$[              ?$$c[[[[,\n// $$$$$$$$.               $$$$$$$$\n// $$$$$$$$               .$$$$$$$$\n// ,[[[[c$$?              [$$r[[[?`\n//      .$$$(.          .($$$.\n//     !8$$$$B\\;'.   ',\\B$$$$8!\n//    n$$$$$$$$$$$$$$$$$$$$$$$$r\n//    .+B$$8!. ,$$$$$$I  !8$$8!\n//      .,,    `$$$$$$`    ,,\n//             .r$$$$*.\n\n// Shape 74 in figma\nexport const Shape14 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.6 0C18.4837 0 19.2 0.716344 19.2 1.6V4.41178C19.2 5.83722 20.9234 6.55109 21.9314 5.54314L23.9195 3.55491C24.5445 2.93008 25.5574 2.93008 26.1824 3.55491L28.4451 5.81766C29.0699 6.4425 29.0699 7.45557 28.4451 8.0804L26.4568 10.0686C25.449 11.0766 26.1627 12.8 27.5882 12.8H30.4C31.2837 12.8 32 13.5163 32 14.4V17.6C32 18.4837 31.2837 19.2 30.4 19.2H27.5882C26.1627 19.2 25.449 20.9234 26.4568 21.9314L28.4451 23.9195C29.0699 24.5445 29.0699 25.5574 28.4451 26.1824L26.1824 28.4451C25.5574 29.0699 24.5445 29.0699 23.9195 28.4451L21.9314 26.4568C20.9234 25.449 19.2 26.1627 19.2 27.5882V30.4C19.2 31.2837 18.4837 32 17.6 32H14.4C13.5163 32 12.8 31.2837 12.8 30.4V27.5882C12.8 26.1627 11.0766 25.449 10.0686 26.4568L8.0804 28.4451C7.45557 29.0699 6.4425 29.0699 5.81766 28.4451L3.55493 26.1824C2.93008 25.5574 2.93008 24.5445 3.55493 23.9195L5.54315 21.9314C6.55109 20.9234 5.83723 19.2 4.41178 19.2H1.6C0.716346 19.2 0 18.4837 0 17.6V14.4C0 13.5163 0.716344 12.8 1.6 12.8H4.41178C5.83722 12.8 6.55109 11.0766 5.54315 10.0686L3.55493 8.0804C2.93008 7.45555 2.93008 6.4425 3.55493 5.81766L5.81766 3.55491C6.4425 2.93008 7.45557 2.93008 8.0804 3.55491L10.0686 5.54314C11.0766 6.55109 12.8 5.83722 12.8 4.41178V1.6C12.8 0.716344 13.5163 0 14.4 0H17.6ZM16 24C20.4182 24 24 20.4182 24 16C24 11.5817 20.4182 8 16 8C11.5817 8 8 11.5817 8 16C8 20.4182 11.5817 24 16 24Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//                t\\\n//       `,'    'n$$c.    .,`\n//       ,$$8(+,8$$$$8,!tB$$,\n//       '$$$$$$$$$$$$$$$$$$'\n//      .`$$$B\\,'   .';\\B$$$`.\n//  ?r*B$$$$(.          .($$$$B*f+\n//  .{$$$$$[              ?$$$$$[\n//    'r$$$.               $$$f'\n//    `t$$$               .$$$r'\n//  .($$$$$?              [$$$$${.\n//  +f*B$$$$(.          .($$$$Bc\\+\n//      .`$$$B\\;'.   ',\\B$$$`\n//       '$$$$$$$$$$$$$$$$$$'\n//       ,$$M\\!,8$$$$8,<(8$$,\n//       `,.    .*$$n.    .,`\n//                (\\\n\n// Shape 73 in figma\nexport const Shape15 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4226)\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.2566 0.137553C16.1323 -0.0696549 15.832 -0.0696548 15.7077 0.137554L12.6898 5.16932C12.6076 5.3063 12.4371 5.3617 12.2901 5.29919L6.89094 3.00231C6.66861 2.90772 6.42566 3.08423 6.44691 3.3249L6.96294 9.16959C6.97699 9.3287 6.87158 9.47378 6.71592 9.50959L0.997836 10.8249C0.762365 10.8791 0.66957 11.1647 0.828233 11.3469L4.68114 15.772C4.78602 15.8925 4.78602 16.0718 4.68114 16.1923L0.828233 20.6174C0.66957 20.7997 0.762366 21.0853 0.997837 21.1394L6.71592 22.4547C6.87158 22.4906 6.97699 22.6357 6.96294 22.7947L6.44691 28.6394C6.42566 28.8802 6.66861 29.0566 6.89094 28.9621L12.2901 26.6651C12.4371 26.6026 12.6076 26.6581 12.6898 26.795L15.7077 31.8267C15.832 32.0341 16.1323 32.0339 16.2566 31.8267L19.2746 26.795C19.3566 26.6581 19.5272 26.6026 19.6742 26.6651L25.0734 28.9621C25.2957 29.0566 25.5387 28.8802 25.5174 28.6394L25.0014 22.7947C24.9874 22.6357 25.0928 22.4906 25.2485 22.4547L30.9666 21.1394C31.2019 21.0853 31.2947 20.7997 31.1362 20.6174L27.2832 16.1923C27.1784 16.0718 27.1784 15.8925 27.2832 15.772L31.1362 11.3469C31.2947 11.1647 31.2019 10.8791 30.9666 10.8249L25.2485 9.50959C25.0928 9.47378 24.9874 9.3287 25.0014 9.16959L25.5174 3.3249C25.5387 3.08423 25.2957 2.90772 25.0734 3.00231L19.6742 5.29919C19.5272 5.3617 19.3566 5.3063 19.2746 5.16932L16.2566 0.137553ZM16 24C20.4182 24 24 20.4182 24 16C24 11.5817 20.4182 8.00001 16 8.00001C11.5817 8.00001 8 11.5817 8 16C8 20.4182 11.5817 24 16 24Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4226\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//          'I'  .B$.  '<`\n//          !$*. .$$.  *$;\n//     IM!   \\$f .$$. r$[   !*!\n//      !88!  *${,$$,[$n  !88!\n//  \"+\".  !88+[Br{+?{n$[<88!  .,+\"\n//  ,(*$8(;[$8;        IM$?!\\*$*{,\n//     .^+n$n            f$f<\".\n// <++++++?B`            'B?++++++!\n// !++++++?B'            `B?++++++<\n//     .,<t$f            n$n+^.\n//  ,{*$*\\!?$MI        ;8$[;(8$M(,\n//  \"<,.  !88<?$n{?+{rB[+88!  .\"+\"\n//      !88!  n$[,$$,{$*  !88!\n//     !*!   [$t .$$. f$\\   !*;\n//          ;$*  .$$. .*$!\n//          `<'  .$B.  'I'\n\n// Shape 72 in figma\nexport const Shape16 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.5029 0C16.8563 0 17.1429 0.286538 17.1429 0.64V6.82798C17.1429 7.53142 18.1128 7.71995 18.3763 7.06773L20.6942 1.33033C20.8267 1.0026 21.1997 0.84427 21.5275 0.97668L22.46 1.35343C22.7877 1.48584 22.9461 1.85885 22.8136 2.18658L20.3424 8.30317C20.0811 8.9496 20.8952 9.48846 21.3883 8.99547L26.053 4.3307C26.303 4.08077 26.7082 4.08077 26.9581 4.3307L27.6693 5.04186C27.9192 5.29179 27.9192 5.69701 27.6693 5.94694L23.4803 10.1359C22.9803 10.636 23.5411 11.458 24.1891 11.1749L29.6176 8.80314C29.9416 8.66162 30.3189 8.80947 30.4603 9.13336L30.863 10.055C31.0045 10.3789 30.8566 10.7561 30.5328 10.8977L24.2774 13.6307C23.6419 13.9083 23.8402 14.8571 24.5336 14.8571H31.36C31.7134 14.8571 32 15.1437 32 15.4971V16.5029C32 16.8563 31.7134 17.1429 31.36 17.1429H24.5338C23.8402 17.1429 23.6421 18.0917 24.2774 18.3693L30.5328 21.1024C30.8566 21.2438 31.0045 21.6211 30.863 21.945L30.4603 22.8666C30.3189 23.1906 29.9416 23.3384 29.6176 23.1968L24.1891 20.8251C23.5411 20.5419 22.9803 21.364 23.4803 21.8642L27.6693 26.053C27.9192 26.303 27.9192 26.7082 27.6693 26.9581L26.9581 27.6693C26.7082 27.9192 26.303 27.9192 26.053 27.6693L21.3883 23.0045C20.8952 22.5115 20.0811 23.0504 20.3424 23.6968L22.8136 29.8134C22.9461 30.1411 22.7877 30.5141 22.46 30.6466L21.5275 31.0234C21.1997 31.1557 20.8267 30.9974 20.6942 30.6696L18.3763 24.9323C18.1128 24.28 17.1429 24.4686 17.1429 25.172V31.36C17.1429 31.7134 16.8563 32 16.5029 32H15.4971C15.1437 32 14.8571 31.7134 14.8571 31.36V25.172C14.8571 24.4686 13.8872 24.28 13.6237 24.9323L11.3057 30.6696C11.1733 30.9974 10.8003 31.1557 10.4725 31.0234L9.54005 30.6466C9.21232 30.5141 9.054 30.1411 9.1864 29.8134L11.6577 23.6968C11.9189 23.0504 11.1047 22.5115 10.6117 23.0045L5.94696 27.6693C5.69702 27.9192 5.29179 27.9192 5.04187 27.6693L4.33072 26.9581C4.08078 26.7082 4.08078 26.303 4.33072 26.053L8.51966 21.864C9.01973 21.364 8.45893 20.5419 7.81088 20.8251L2.38232 23.1968C2.05843 23.3384 1.68114 23.1906 1.53962 22.8666L1.13697 21.945C0.995458 21.6211 1.14331 21.2438 1.46721 21.1024L7.72251 18.3693C8.35798 18.0917 8.15976 17.1429 7.46627 17.1429H0.64C0.286538 17.1429 0 16.8563 0 16.5029V15.4971C0 15.1437 0.286538 14.8571 0.64 14.8571H7.4663C8.15978 14.8571 8.35802 13.9083 7.72254 13.6307L1.4672 10.8977C1.1433 10.7561 0.995453 10.3789 1.13697 10.055L1.53962 9.13336C1.68114 8.80947 2.05842 8.66162 2.38232 8.80314L7.81088 11.1749C8.45893 11.4581 9.01973 10.636 8.51966 10.1359L4.33072 5.94696C4.08078 5.69702 4.08078 5.29179 4.33072 5.04186L5.04186 4.33072C5.29179 4.08078 5.69702 4.08078 5.94696 4.33072L10.6117 8.99549C11.1047 9.48848 11.9188 8.94962 11.6577 8.30318L9.1864 2.18658C9.054 1.85885 9.21234 1.48584 9.54005 1.35343L10.4725 0.97668C10.8003 0.84427 11.1733 1.0026 11.3057 1.33033L13.6237 7.06773C13.8872 7.71995 14.8571 7.53142 14.8571 6.82798V0.64C14.8571 0.286538 15.1437 0 15.4971 0H16.5029ZM16 22.8571C19.787 22.8571 22.8571 19.787 22.8571 16C22.8571 12.2129 19.787 9.14286 16 9.14286C12.2129 9.14286 9.14286 12.2129 9.14286 16C9.14286 19.787 12.2129 22.8571 16 22.8571Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//          'I'  .B$.  '<`\n//          !$*. .$$.  *$;\n//     IM!   \\$f .$$. r$[   !*!\n//      !88!  *${,$$,[$n  !88!\n//  \"+\".  !88+[$$$$$$$$[<88!  .,+\"\n//  ,(*$8(;[$$$$$$$$$$$$$$?!\\*$*{,\n//     .^+n$$$$$$$$$$$$$$$$f<\".\n// <++++++?B$$$$$$$$$$$$$$B?++++++!\n// !++++++?B$$$$$$$$$$$$$$B?++++++<\n//     .,<t$$$$$$$$$$$$$$$$n+^.\n//  ,{*$*\\!?$$$$$$$$$$$$$$[;(8$M(,\n//  \"<,.  !88<?$$$$$$$$[+88!  .\"+\"\n//      !88!  n$[,$$,{$*  !88!\n//     !*!   [$t .$$. f$\\   !*;\n//          ;$*  .$$. .*$!\n//          `<'  .$B.  'I'\n\n// Shape 71 in figma\nexport const Shape17 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.1429 0.64C17.1429 0.286538 16.8563 0 16.5029 0H15.4971C15.1437 0 14.8571 0.286538 14.8571 0.64V6.82798C14.8571 7.53142 13.8872 7.71995 13.6237 7.06773L11.3057 1.33033C11.1733 1.0026 10.8003 0.84427 10.4725 0.97668L9.54005 1.35343C9.21234 1.48584 9.054 1.85885 9.1864 2.18658L11.6577 8.30318C11.9188 8.94962 11.1047 9.48848 10.6117 8.99549L5.94696 4.33072C5.69702 4.08078 5.29179 4.08078 5.04186 4.33072L4.33072 5.04186C4.08078 5.29179 4.08078 5.69702 4.33072 5.94696L8.51966 10.1359C9.01973 10.636 8.45893 11.4581 7.81088 11.1749L2.38232 8.80314C2.05842 8.66162 1.68114 8.80947 1.53962 9.13336L1.13697 10.055C0.995453 10.3789 1.1433 10.7561 1.4672 10.8977L7.72254 13.6307C8.35802 13.9083 8.15978 14.8571 7.4663 14.8571H0.64C0.286538 14.8571 0 15.1437 0 15.4971V16.5029C0 16.8563 0.286538 17.1429 0.64 17.1429H7.46627C8.15976 17.1429 8.35798 18.0917 7.72251 18.3693L1.46721 21.1024C1.14331 21.2438 0.995461 21.6211 1.13697 21.945L1.53963 22.8666C1.68114 23.1906 2.05843 23.3384 2.38232 23.1968L7.81088 20.8251C8.45893 20.5419 9.01973 21.364 8.51966 21.8642L4.33072 26.053C4.08078 26.303 4.08078 26.7082 4.33072 26.9581L5.04187 27.6693C5.29179 27.9192 5.69702 27.9192 5.94696 27.6693L10.6117 23.0045C11.1047 22.5115 11.9189 23.0504 11.6577 23.6968L9.1864 29.8134C9.054 30.1411 9.21232 30.5141 9.54005 30.6466L10.4725 31.0234C10.8003 31.1557 11.1733 30.9974 11.3057 30.6696L13.6237 24.9323C13.8872 24.28 14.8571 24.4686 14.8571 25.172V31.36C14.8571 31.7134 15.1437 32 15.4971 32H16.5029C16.8563 32 17.1429 31.7134 17.1429 31.36V25.172C17.1429 24.4686 18.1128 24.28 18.3763 24.9323L20.6942 30.6696C20.8267 30.9974 21.1997 31.1557 21.5275 31.0234L22.46 30.6466C22.7877 30.5141 22.9461 30.1411 22.8136 29.8134L20.3424 23.6968C20.0811 23.0504 20.8952 22.5115 21.3883 23.0045L26.053 27.6693C26.303 27.9192 26.7082 27.9192 26.9581 27.6693L27.6693 26.9581C27.9192 26.7082 27.9192 26.303 27.6693 26.053L23.4803 21.8642C22.9803 21.364 23.5411 20.5419 24.1891 20.8251L29.6176 23.1968C29.9416 23.3384 30.3189 23.1906 30.4603 22.8666L30.863 21.945C31.0045 21.6211 30.8566 21.2438 30.5328 21.1024L24.2774 18.3693C23.6421 18.0917 23.8402 17.1429 24.5338 17.1429H31.36C31.7134 17.1429 32 16.8563 32 16.5029V15.4971C32 15.1437 31.7134 14.8571 31.36 14.8571H24.5338C23.8402 14.8571 23.6419 13.9083 24.2774 13.6307L30.5328 10.8977C30.8566 10.7561 31.0045 10.3789 30.863 10.055L30.4603 9.13336C30.3189 8.80947 29.9416 8.66162 29.6176 8.80314L24.1891 11.1749C23.5411 11.458 22.9803 10.636 23.4803 10.1359L27.6693 5.94694C27.9192 5.69701 27.9192 5.29179 27.6693 5.04186L26.9581 4.3307C26.7082 4.08077 26.303 4.08077 26.053 4.3307L21.3883 8.99547C20.8952 9.48846 20.0811 8.9496 20.3424 8.30317L22.8136 2.18658C22.9461 1.85885 22.7877 1.48584 22.46 1.35343L21.5275 0.97668C21.1997 0.84427 20.8267 1.0026 20.6942 1.33033L18.3763 7.06773C18.1128 7.71995 17.1429 7.53142 17.1429 6.82798V0.64Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//          `!(nMB$$BMn(<^\n//       Ir$$$$$$$$$$$$$$$$rI\n//     <8$$$$$$$$$$$$$$$$$$$$8<\n//   ^8$$$$$$$$$$$$$$$$$$$$$$$$8^\n//  ,$$$$$$$$$$Bf+!!?(8$$$$$$$$$$\"\n// '$$$$$$$$$r^        `n$$$$$$$$B'\n// \\$$$$$$$$[            \\$$$$$$$$\\\n// B$$$$$$$$.             $$$$$$$$B\n// B$$$$$$$$             .$$$$$$$$B\n// \\$$$$$$$$\\            [$$$$$$$$\\\n// 'B$$$$$$$$n`        ^r$$$$$$$$$'\n//  \"$$$$$$$$$$8(?!!+tB$$$$$$$$$$,\n//   ^8$$$$$$$$$$$$$$$$$$$$$$$$8`\n//     <8$$$$$$$$$$$$$$$$$$$$8<\n//       Ir$$$$$$$$$$$$$$$$rI\n//          ^<(nMB$$BMn(!`\n\n// Shape 68 in figma\nexport const Shape18 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16 32C24.8365 32 32 24.8365 32 16C32 7.16344 24.8365 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8365 7.16344 32 16 32ZM16 23C19.8659 23 23 19.8659 23 16C23 12.134 19.8659 9 16 9C12.134 9 9 12.134 9 16C9 19.8659 12.134 23 16 23Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//    `[r8$$Mn+`      `[r8$$Mn+`\n//  ^M$$$$$$$$$$M^  ^M$$$$$$$$$$M^\n// ,$$$$$$$$$$$$$$,,$$$$$$$$$$$$$$,\n// M$$$$$$$$$$$$$$8M$$$$$$$$$$$$$$8\n// 8$$$$$$$$$$$$$$M8$$$$$$$$$$$$$$M\n// ,$$$$$$$$$$$$$$,,$$$$$$$$$$$$$$,\n//  ^M$$$$$$$$$$M^  ^M$$$$$$$$$$M^\n//    `+nM$$8r[`      `+nM$$8r[`\n//    `[r8$$Mn+`      `[r8$$Mn+`\n//  ^M$$$$$$$$$$M^  ^M$$$$$$$$$$M^\n// ,$$$$$$$$$$$$$$,,$$$$$$$$$$$$$$,\n// M$$$$$$$$$$$$$$8M$$$$$$$$$$$$$$8\n// 8$$$$$$$$$$$$$$M8$$$$$$$$$$$$$$M\n// ,$$$$$$$$$$$$$$,,$$$$$$$$$$$$$$,\n//  ^M$$$$$$$$$$M^  ^M$$$$$$$$$$M^\n//    `+nM$$8r[`      `+nM$$8r[`\n\n// Shape 67 in figma\nexport const Shape19 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8 16C12.4183 16 16 12.4183 16 8C16 12.4183 19.5818 16 24 16C19.5818 16 16 19.5818 16 24C16 19.5818 12.4183 16 8 16ZM8 16C3.58173 16 0 19.5818 0 24C0 28.4182 3.58173 32 8 32C12.4183 32 16 28.4182 16 24C16 28.4182 19.5818 32 24 32C28.4182 32 32 28.4182 32 24C32 19.5818 28.4182 16 24 16C28.4182 16 32 12.4183 32 8C32 3.58173 28.4182 0 24 0C19.5818 0 16 3.58173 16 8C16 3.58173 12.4183 0 8 0C3.58173 0 0 3.58173 0 8C0 12.4183 3.58173 16 8 16Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//               ;88;\n//              \"$$$$,\n//              n$$$$r\n//              $$$$$$\n//              $$$$$$\n//              r$$$$n\n//   .`\";!!!!;,`I$$$$I`\";!!!!;,`.\n// !*$$$$$$$$$$$$$$$$$$$$$$$$$$$$*!\n// !*$$$$$$$$$$$$$$$$$$$$$$$$$$$$*!\n//   .`,;!!!!;\"`I$$$$I`,;!!!!;\"`.\n//              n$$$$r\n//              $$$$$$\n//              $$$$$$\n//              r$$$$n\n//              ,$$$$\"\n//               ;88;\n\n// Shape 66 in figma\nexport const Shape20 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.608 12.0758L23.8965 6.78739C24.26 6.42397 24.8491 6.42397 25.2126 6.78739C25.576 7.15083 25.576 7.74006 25.2126 8.10349L19.9242 13.3919C21.1178 13.1237 22.5114 12.9697 24 12.9697C28.4182 12.9697 32 14.3264 32 16C32 17.6736 28.4182 19.0302 24 19.0302C22.5114 19.0302 21.1178 18.8763 19.9242 18.608L25.2126 23.8965C25.576 24.26 25.576 24.8491 25.2126 25.2126C24.8491 25.576 24.26 25.576 23.8965 25.2126L18.608 19.9242C18.8763 21.1178 19.0302 22.5115 19.0302 24C19.0302 28.4182 17.6736 32 16 32C14.3264 32 12.9697 28.4182 12.9697 24C12.9697 22.5114 13.1237 21.1178 13.3919 19.9242L8.10349 25.2126C7.74006 25.576 7.15083 25.576 6.78741 25.2126C6.42398 24.8491 6.42398 24.26 6.78741 23.8965L12.0758 18.608C10.8822 18.8763 9.48856 19.0302 8 19.0302C3.58173 19.0302 0 17.6736 0 16C0 14.3264 3.58173 12.9697 8 12.9697C9.48856 12.9697 10.8822 13.1237 12.0758 13.3919L6.78741 8.1035C6.42398 7.74008 6.42398 7.15085 6.78741 6.78741C7.15083 6.42398 7.74006 6.42398 8.10349 6.78741L13.3919 12.0759C13.1237 10.8822 12.9697 9.48858 12.9697 8C12.9697 3.58173 14.3264 0 16 0C17.6736 0 19.0302 3.58173 19.0302 8C19.0302 9.48856 18.8763 10.8822 18.608 12.0758Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//               ;88;\n//              \"$$$$,\n//              n$$$$r\n//       `f;    $$$$$$    ;\\^\n//        ;MM;  $$$$$$  ;MM;\n//          ;MM;n$$$$c;MM;\n//   .`\";!!!!In$$$$$$$$rI!!!!;,`.\n// !*$$$$$$$$$$$$$$$$$$$$$$$$$$$$*!\n// !*$$$$$$$$$$$$$$$$$$$$$$$$$$$$*!\n//   .`,;!!!!Ir$$$$$$$$nI!!!!;\"`.\n//          ;MM;c$$$$n;MM;\n//        ;MM;  $$$$$$  ;MM;\n//       ^\\;    $$$$$$    ;f`\n//              r$$$$n\n//              ,$$$$\"\n//               ;88;\n\n// Shape 65 in figma\nexport const Shape21 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.608 12.0758L23.8965 6.78739C24.26 6.42397 24.8491 6.42397 25.2126 6.78739C25.576 7.15083 25.576 7.74006 25.2126 8.10349L19.9242 13.3919C21.1178 13.1237 22.5114 12.9697 24 12.9697C28.4182 12.9697 32 14.3264 32 16C32 17.6736 28.4182 19.0302 24 19.0302C22.5114 19.0302 21.1178 18.8763 19.9242 18.608L25.2126 23.8965C25.576 24.26 25.576 24.8491 25.2126 25.2126C24.8491 25.576 24.26 25.576 23.8965 25.2126L18.608 19.9242C18.8763 21.1178 19.0302 22.5115 19.0302 24C19.0302 28.4182 17.6736 32 16 32C14.3264 32 12.9697 28.4182 12.9697 24C12.9697 22.5114 13.1237 21.1178 13.3919 19.9242L8.10349 25.2126C7.74006 25.576 7.15083 25.576 6.78741 25.2126C6.42398 24.8491 6.42398 24.26 6.78741 23.8965L12.0758 18.608C10.8822 18.8763 9.48856 19.0302 8 19.0302C3.58173 19.0302 0 17.6736 0 16C0 14.3264 3.58173 12.9697 8 12.9697C9.48856 12.9697 10.8822 13.1237 12.0758 13.3919L6.78741 8.1035C6.42398 7.74008 6.42398 7.15085 6.78741 6.78741C7.15083 6.42398 7.74006 6.42398 8.10349 6.78741L13.3919 12.0759C13.1237 10.8822 12.9697 9.48858 12.9697 8C12.9697 3.58173 14.3264 0 16 0C17.6736 0 19.0302 3.58173 19.0302 8C19.0302 9.48856 18.8763 10.8822 18.608 12.0758Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//               .c*.\n//               {$$[\n//     ^f+^      8$$8      \"[f^\n//     .c$$8?'   $$$$   '?8$$n\n//       <$$$${. n$$n  {$$$$<\n//        '(B$$8^I$$;`8$$B('\n//           ;f$$!*MI$$rI.\n// ,[rc8$$$8*r{[tMc**t[(r*8$$$8*r[\"\n// \"[r*8$$$8*r([t**cMt[{r*8$$$8cr[,\n//          .Ir$$IM*!$$t;\n//        '(B$$8`;$$I^8$$B('\n//       <$$$${  n$$n .{$$$$<\n//      n$$8?'   $$$$   '?8$$c.\n//     ^f[\"      8$$8      ^+f^\n//               [$${\n//               .*c.\n\n// Shape 63 in figma\nexport const Shape22 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16 16C16 16 18 10.6442 18 6.85714C18 3.07005 17.1046 0 16 0C14.8954 0 14 3.07005 14 6.85714C14 10.6442 16 16 16 16ZM16 16C16 16 18.373 21.2013 21.0507 23.8792C23.7286 26.5571 26.5326 28.0947 27.3138 27.3138C28.0947 26.5326 26.5571 23.7286 23.8792 21.0507C21.2013 18.373 16 16 16 16ZM16 16C16 16 21.3558 14 25.1429 14C28.9299 14 32 14.8954 32 16C32 17.1046 28.9299 18 25.1429 18C21.3558 18 16 16 16 16ZM16 16C16 16 10.7987 18.373 8.1208 21.0507C5.44293 23.7286 3.90523 26.5326 4.68629 27.3138C5.46734 28.0947 8.27136 26.5571 10.9492 23.8792C13.6271 21.2013 16 16 16 16ZM16 16C16.0045 16.0118 18 21.36 18 25.1429C18 28.9299 17.1046 32 16 32C14.8954 32 14 28.9299 14 25.1429C14 21.3558 16 16 16 16ZM16 16C16 16 10.6442 14 6.85714 14C3.07005 14 0 14.8954 0 16C0 17.1046 3.07005 18 6.85714 18C10.6442 18 16 16 16 16ZM16 16C16 16 21.2013 13.6271 23.8792 10.9492C26.5571 8.27134 28.0947 5.46733 27.3138 4.68629C26.5326 3.90523 23.7286 5.44293 21.0507 8.1208C18.373 10.7987 16 16 16 16ZM10.9492 8.1208C13.6271 10.7987 16 16 16 16C16 16 10.7987 13.6271 8.12082 10.9492C5.44293 8.27136 3.90525 5.46734 4.68629 4.68629C5.46734 3.90525 8.27136 5.44293 10.9492 8.1208Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n\n//                `^\n//                M*\n//               [$$[\n//              `$$$$`\n//              *$$$$*\n//             +$$$$$$?\n//            `$$$$$$$$`\n//            *$$$$$$$$*\n//          ,8$$$$$$$$$$M,\n//        `r$$$$$$$$$$$$$$r`\n//      .\\$$$$$$$$$$$$$$$$$$\\.\n//     !B$$$$$$$$$$$$$$$$$$$$B<\n//   I8$$$$$$Mr(+I,,I?(r*$$$$$$8;\n// '{\\[<;^'.              .'\",<[\\{'\n\n// Shape 59 in figma\nexport const Shape23 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M16 2L21.12 17.68L32 30L16 26.64L0 30L10.88 17.68L16 2Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//                ,,\n//               'BB`\n//               *$$*.\n//              f$$$$f\n//             +$$$$$$<\n//           .,$$$$$$$$;\n//      .`!{*$$$$$$$$$$$$*(;^\n// .`!\\*$$$$$$$$$$$$$$$$$$$$$$*(I^.\n// .^I(*$$$$$$$$$$$$$$$$$$$$$$*\\!`.\n//       ^;(*$$$$$$$$$$$$*{!`.\n//            ;$$$$$$$$,.\n//             <$$$$$$+\n//              f$$$$t\n//              .*$$*\n//               `BB'\n//                ,,\n\n// Shape 58 in figma\nexport const Shape24 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M16 0L20.5255 11.4745L32 16L20.5255 20.5255L16 32L11.4745 20.5255L0 16L11.4745 11.4745L16 0Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//       .\"                \"\n//        <t\"            ,t?\n//        ,$$8t+,````,<tB$$,\n// .`\"`'',n$$$$$$$$$$$$$$$$*^'''^^.\n//   `*$$$$$$$$$$$$$$$$$$$$$$$$c`\n//     \\$$$$$$B[^.  .^?B$$$$$$(\n//      *$$$$n.        .n$$$$*\n//      <$$$$'          '$$$$<\n//      <$$$$'          '$$$$<\n//      *$$$$n.        .n$$$$*\n//     ($$$$$$B?^.  .^[B$$$$$$\\\n//   `c$$$$$$$$$$$$$$$$$$$$$$$$*`\n// .^^'''^*$$$$$$$$$$$$$$$$n,''`\"`.\n//        ,$$Bf<,````,+f8$$,\n//        ?f,            \"f<\n//        \"                \".\n\n// Shape 57 in figma\nexport const Shape25 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 25.3448C7.38514 23.0107 8.98979 24.6152 6.6556 32C10.9685 24.6152 21.0315 24.6152 25.3445 32C23.0118 24.6152 24.6166 23.0107 32 25.3448C24.6166 21.032 24.6166 10.9696 32 6.65694C24.6166 8.98931 23.0118 7.38475 25.3445 0C21.0315 7.38475 10.9685 7.38475 6.6556 0C8.98979 7.38475 7.38514 8.98931 0 6.65694C7.38514 10.9696 7.38514 21.032 0 25.3448ZM16 21.92C19.2696 21.92 21.92 19.2696 21.92 16C21.92 12.7305 19.2696 10.08 16 10.08C12.7305 10.08 10.08 12.7305 10.08 16C10.08 19.2696 12.7305 21.92 16 21.92Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//           t$$$$$$$$$$t\n//           t$$$$$$$$$$t\n//           t$$$$$$$$$$t\n//           t$$$$$$$$$$t\n//           t$$$$$$$$$$t\n// **********B$$$$$$$$$$B**********\n// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n// **********B$$$$$$$$$$B**********\n//           t$$$$$$$$$$t\n//           t$$$$$$$$$$t\n//           t$$$$$$$$$$t\n//           t$$$$$$$$$$t\n//           t$$$$$$$$$$t\n\n// Shape 56 in figma\nexport const Shape26 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M21.7142 0H10.2857V10.2857H4.99558e-07L0 21.7142H10.2857V32H21.7142V21.7142H32V10.2857H21.7142V0Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//         *$$$$$$$$$$$$$$M\n//         ^B$$$$$$$$$$$$8,\n//          `8$$$$$$$$$$8`\n//           .*$$$$$$$$8'\n// M$n!`      .c$$$$$$n       `!r$*\n// $$$$$8(;     \\$$$$f    .,{8$$$$$\n// $$$$$$$$$n+`  ($$[  `<c$$$$$$$$$\n// $$$$$$$$$$$$8(````\\B$$$$$$$$$$$$\n// $$$$$$$$$$$$B\\````(8$$$$$$$$$$$$\n// $$$$$$$$$c<`  [$$(  `+n$$$$$$$$$\n// $$$$$8{,.    t$$$$\\     ;(8$$$$$\n// *$r!`       n$$$$$$c.      `!n$M\n//           '8$$$$$$$$*.\n//          `8$$$$$$$$$$8`\n//         ,8$$$$$$$$$$$$B^\n//         M$$$$$$$$$$$$$$*\n\n// Shape 55 in figma\nexport const Shape27 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4264)\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.1157 14.016C16.6264 14.8862 15.3736 14.8862 14.8843 14.016L8.07496 1.90741C7.59512 1.05416 8.21173 1.27616e-06 9.19064 9.07706e-07L22.8093 0C23.7883 -8.55795e-08 24.4048 1.05416 23.9249 1.90741L17.1157 14.016ZM14.016 17.1157C14.8861 16.6264 14.8861 15.3736 14.016 14.8843L1.9074 8.07496C1.05414 7.59514 -1.46207e-05 8.21173 -1.46635e-05 9.19064L-1.52588e-05 22.8093C-1.53016e-05 23.7883 1.05415 24.4048 1.9074 23.925L14.016 17.1157ZM17.1157 17.984C16.6264 17.1138 15.3736 17.1139 14.8843 17.984L8.07496 30.0926C7.59514 30.9459 8.21173 32 9.19064 32H22.8093C23.7883 32 24.4048 30.9458 23.9249 30.0926L17.1157 17.984ZM17.984 14.8843C17.1137 15.3736 17.1137 16.6264 17.984 17.1157L30.0926 23.925C30.9459 24.4048 32 23.7883 32 22.8093V9.19067C32 8.21176 30.9457 7.59515 30.0926 8.07499L17.984 14.8843Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4264\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//               `tt`\n//             `t$$$$t`\n//           `t$$$$$$$$t`\n//          !$$$$$$$$$$$$!\n//       ``  `f$$$$$$$$f`  ``\n//     `t$$t`  `f$$$$f`  `t$$t`\n//   `t$$$$$$t`  `ff`  `t$$$$$$t`\n// `t$$$$$$$$$$t`    `t$$$$$$$$$$t`\n// `f$$$$$$$$$$f`    `f$$$$$$$$$$f`\n//   `f$$$$$$f`  `tt`  `f$$$$$$f`\n//     `f$$f`  `t$$$$t`  `f$$f`\n//       ``  `t$$$$$$$$t`  ``\n//          !$$$$$$$$$$$$!\n//           `f$$$$$$$$f`\n//             `f$$$$f`\n//               `ff`\n\n// Shape 54 in figma\nexport const Shape28 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M24.9702 23.0298L17.9403 16L24.9702 8.97018L32 16L24.9702 23.0298ZM7.02982 23.0298L0 16L7.02982 8.97018L14.0596 16L7.02982 23.0298ZM16 32L8.97018 24.9702L16 17.9403L23.0298 24.9702L16 32ZM16 14.0596L8.97018 7.02982L16 0L23.0298 7.02982L16 14.0596Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//             c$$$$$$c\n//      .+M;   I$$$$$$;   ,M+.\n//    .+B$$$[   8$$$$8   [$$$B+.\n//   !B$$$$$$r. <$$$$<  r$$$$$$B!\n//    ^(8$$$$$*' B$$B.'8$$$$$B{,\n//       `+8$$$B,+$$+,B$$$*[`\n// 8Mr{+;\"'.'<n$$\\$$t$$c<' '^;+(rM8\n// $$$$$$$$$Bc\\n8+..+Bf\\cB$$$$$$$$$\n// $$$$$$$$$Bc\\f8+..+8n\\cB$$$$$$$$$\n// 8Mr(+;^' '<c$$f$$($$n<'.'\";+{rM8\n//       `[*$$$B,+$$+,B$$$8+`\n//    ,{B$$$$$8'.B$$B '*$$$$$8(^\n//   !B$$$$$$r  <$$$$< .r$$$$$$8I\n//    .+B$$$[   8$$$$8   [$$$8!\n//      .+M,   ;$$$$$$I   ;*!\n//             c$$$$$$c\n\n// Shape 49 in figma\nexport const Shape29 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M19.9838 0.786741L16.928 13.7597L23.9403 2.4256C24.1576 2.07458 24.6453 2.0179 24.9371 2.30978L29.6902 7.06283C29.9821 7.3547 29.9254 7.84245 29.5744 8.05963L18.2403 15.0721L31.2133 12.0162C31.615 11.9215 32 12.2264 32 12.6391V19.361C32 19.7738 31.615 20.0786 31.2133 19.9838L18.2403 16.928L29.5744 23.9405C29.9254 24.1576 29.9821 24.6453 29.6902 24.9373L24.9371 29.6902C24.6453 29.9821 24.1576 29.9254 23.9403 29.5744L16.928 18.2403L19.9838 31.2133C20.0786 31.615 19.7736 32 19.361 32H12.6391C12.2263 32 11.9215 31.615 12.0161 31.2133L15.072 18.2403L8.05962 29.5744C7.84245 29.9254 7.35469 29.9821 7.06282 29.6902L2.30978 24.9371C2.0179 24.6453 2.07458 24.1576 2.4256 23.9403L13.7596 16.928L0.786742 19.9838C0.38497 20.0786 0 19.7738 0 19.361V12.6391C3.11862e-07 12.2263 0.384968 11.9215 0.786742 12.0162L13.7597 15.072L2.4256 8.05965C2.07458 7.84246 2.0179 7.3547 2.30978 7.06283L7.06282 2.30979C7.35469 2.01792 7.84245 2.07459 8.05962 2.42562L15.072 13.7597L12.0161 0.786742C11.9215 0.38497 12.2263 6.23725e-07 12.6391 5.8764e-07L19.361 0C19.7738 0 20.0786 0.384968 19.9838 0.786741ZM16 17.8286C17.0099 17.8286 17.8286 17.0099 17.8286 16C17.8286 14.9901 17.0099 14.1714 16 14.1714C14.9901 14.1714 14.1714 14.9901 14.1714 16C14.1714 17.0099 14.9901 17.8286 16 17.8286Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//               <B8+\n//             ,8$$$$8,\n//            ($$$$$$$$(\n//           n$$$$$$$$$$c.\n//        .,n$$$$$$$$$$$$*^\n//     '<c$$$$B[,. ..^{B$$$$n<'\n//   Ic$$$$$$n.        .*$$$$$$n!\n// <B$$$$$$$$`          '$$$$$$$$8+\n// +8$$$$$$$$'          `$$$$$$$$B<\n//   !n$$$$$$*.        .n$$$$$$cI\n//     '<n$$$$B{^.. .,[B$$$$c<'\n//         ^*$$$$$$$$$$$$n,.\n//          .c$$$$$$$$$$n\n//            ($$$$$$$$(\n//             ,8$$$$8,\n//               +8B<\n\n// Shape 45 in figma\nexport const Shape30 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4288)\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.38528 23.6458C9.17515 23.1915 8.80909 22.8254 8.35477 22.6152C4.81869 20.9797 2.02138 18.6211 0.528224 17.2067C-0.176077 16.5395 -0.176073 15.461 0.528226 14.7938C2.02138 13.3794 4.81869 11.0208 8.35475 9.3853C8.80909 9.17515 9.17515 8.80909 9.38528 8.35477C11.0208 4.8187 13.3794 2.02138 14.7938 0.528224C15.461 -0.176076 16.5395 -0.176074 17.2067 0.528225C18.6211 2.02138 20.9797 4.8187 22.6152 8.35477C22.8254 8.80909 23.1915 9.17515 23.6458 9.38528C27.1819 11.0208 29.9792 13.3794 31.4723 14.7938C32.1766 15.461 32.1766 16.5395 31.4723 17.2067C29.9792 18.6211 27.1819 20.9797 23.6458 22.6152C23.1915 22.8254 22.8254 23.1915 22.6152 23.6458C20.9797 27.1819 18.6211 29.9792 17.2067 31.4723C16.5395 32.1766 15.461 32.1766 14.7938 31.4723C13.3794 29.9792 11.0208 27.1819 9.38528 23.6458ZM16.0003 21.8818C19.2485 21.8818 21.8818 19.2485 21.8818 16.0003C21.8818 12.752 19.2485 10.1188 16.0003 10.1188C12.752 10.1188 10.1188 12.752 10.1188 16.0003C10.1188 19.2485 12.752 21.8818 16.0003 21.8818Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4288\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//               `tt`\n//             `t$$$$t`\n//           `t$$$$$$$$t`\n//         `t$$$$$$$$$$$$t`\n//       `t$$$$$$$$$$$$$$$$t`\n//     `t$$$$$$$$$$$$$$$$$$$$t`\n//   `t$$$$$$$$$$$$$$$$$$$$$$$$t`\n// `t$$$$$$$$$$$$$$$$$$$$$$$$$$$$t`\n//               ^nn^\n//             `t$$$$t`\n//           `t$$$$$$$$t`\n//         `t$$$$$$$$$$$$t`\n//       `t$$$$$$$$$$$$$$$$t`\n//     `t$$$$$$$$$$$$$$$$$$$$t`\n//   `t$$$$$$$$$$$$$$$$$$$$$$$$t`\n// `t$$$$$$$$$$$$$$$$$$$$$$$$$$$$t`\n\n// Shape 44 in figma\nexport const Shape31 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M32 16.1074L16 0L0 16.1074H15.7867L0 32H32L16.2133 16.1074H32Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//           \"\\`      `\\\"\n//           ,$$8+''+8$$,\n//           ,$$$$$$$$$$,\n//           ,$$$$$$$$$$,\n//           ,$$$$$$$$$$,\n// ,(((((((((+^^^^^^^^^^+(((((((((,\n//  ^8$$$$$$$[          [$$$$$$$8^\n//    ($$$$$$[          [$$$$$$\\\n//    \\$$$$$$[          [$$$$$$(\n//  ^8$$$$$$$[          [$$$$$$$8^\n// ,(((((((((+^^^^^^^^^^+(((((((((,\n//           ,$$$$$$$$$$,\n//           ,$$$$$$$$$$,\n//           ,$$$$$$$$$$,\n//           ,$$8<''+8$$,\n//           \"\\`      `\\\"\n\n// Shape 43 in figma\nexport const Shape32 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16 3.97741L10.6667 0V10.6666H0L3.97741 16L4.66254e-07 21.3333H10.6667V10.6667H21.3333V0L16 3.97741ZM28.0226 16L32 10.6667H21.3333V21.3333H10.6667V32L16 28.0226L21.3333 32V21.3333H32L28.0226 16Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n// .[*8888888888*[.`\\8$$$$$$$$$$M{.\n// M$$$$$$$$$$$$$$*8$$$$$$$$$$$$$$n\n// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*\n// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*\n// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*\n// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*\n// 8$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$n\n// 'f8$$$$$$$$$$$$$$$$$$$$$$$$$$*[.\n// .[*$$$$$$$$$$$$$$$$$$$$$$$$$$8t'\n// n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$8\n// *$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n// *$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n// *$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n// *$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n// n$$$$$$$$$$$$$$8*$$$$$$$$$$$$$$M\n// .{M$$$$$$$$$$8\\`.[*8888888888*[.\n\n// Shape 40 in figma\nexport const Shape33 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4302)\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.94474 16.0675C1.33084 16.388 0.114281 17.812 0.114281 19.52L0.114281 28.48C0.114281 30.424 1.69024 32 3.63429 32H12.5943C14.3424 32 15.7929 30.7256 16.0675 29.0552C16.388 30.6691 17.812 31.8858 19.52 31.8858H28.48C30.424 31.8858 32 30.3098 32 28.3658V19.4058C32 17.6576 30.7256 16.207 29.0554 15.9325C30.6691 15.6119 31.8858 14.188 31.8858 12.48V3.52C31.8858 1.57596 30.3098 4.7663e-07 28.3658 3.91654e-07L19.4058 0C17.6576 -7.64136e-08 16.207 1.27434 15.9325 2.94474C15.612 1.33084 14.188 0.114285 12.48 0.114285H3.52C1.57596 0.114285 0 1.69024 0 3.63429V12.5943C0 14.3424 1.27434 15.7929 2.94474 16.0675Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4302\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//            .ItM$$M\\!.\n//       `I+[?B$$$$$$$$B???I^\n//     <8$$$$$$$$$$$$$$$$$$$$8!\n//    r$$$$$$$$$$$$$$$$$$$$$$$$\\\n//   '$$$$$$$$$$$$$$$$$$$$$$$$$$.\n//  .+$$$$$$$$$$$$$$$$$$$$$$$$$$+.\n// `8$$$$$$$$$$$$$$$$$$$$$$$$$$$$8`\n// M$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$M\n// M$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$M\n// `8$$$$$$$$$$$$$$$$$$$$$$$$$$$$8`\n//  .+$$$$$$$$$$$$$$$$$$$$$$$$$$+.\n//   '$$$$$$$$$$$$$$$$$$$$$$$$$$'\n//    \\$$$$$$$$$$$$$$$$$$$$$$$$r\n//     !8$$$$$$$$$$$$$$$$$$$$8!\n//       ^I???B$$$$$$$$8??+I`\n//            .!\\M$$MfI.\n\n// Shape 36 in figma\nexport const Shape34 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4313)\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.68629 4.68629C3.08253 6.29005 2.50333 8.5304 2.9487 10.594C1.17461 11.7382 0 13.7319 0 16C-2.7865e-07 18.268 1.17461 20.2618 2.9487 21.4061C2.50333 23.4696 3.08253 25.7099 4.68629 27.3138C6.29006 28.9174 8.5304 29.4966 10.594 29.0514C11.7382 30.8254 13.7319 32 16 32C18.268 32 20.2618 30.8254 21.4061 29.0514C23.4696 29.4966 25.7099 28.9174 27.3138 27.3138C28.9174 25.7099 29.4966 23.4696 29.0514 21.4061C30.8254 20.2618 32 18.268 32 16C32 13.7319 30.8254 11.7382 29.0514 10.594C29.4966 8.5304 28.9174 6.29006 27.3138 4.68629C25.7099 3.08253 23.4696 2.50333 21.4061 2.9487C20.2618 1.17461 18.268 0 16 0C13.7319 0 11.7382 1.17461 10.594 2.94869C8.5304 2.50333 6.29006 3.08253 4.68629 4.68629Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4313\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//            .ItM$$M\\!.\n//       `I+[?B$$$$$$$$B???I^\n//     <8$$$$$$$$$$$$$$$$$$$$8!\n//    r$$$$$$$$$$$$$$$$$$$$$$$$\\\n//   '$$$$$$$$$$$*nn*$$$$$$$$$$$.\n//  .+$$$$$$$$f`      ^f$$$$$$$$+.\n// `8$$$$$$$$,          \"$$$$$$$$8`\n// M$$$$$$$${            ($$$$$$$$M\n// M$$$$$$$${            ($$$$$$$$M\n// `8$$$$$$$B^          ,$$$$$$$$8`\n//  .+$$$$$$$$t^      `t$$$$$$$$+.\n//   '$$$$$$$$$$$*rn*$$$$$$$$$$$'\n//    \\$$$$$$$$$$$$$$$$$$$$$$$$r\n//     !8$$$$$$$$$$$$$$$$$$$$8!\n//       ^I???B$$$$$$$$8??+I`\n//            .!\\M$$MfI.\n\n// Shape 35 in figma\nexport const Shape35 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.9487 10.594C2.50333 8.5304 3.08253 6.29005 4.68629 4.68629C6.29006 3.08253 8.5304 2.50333 10.594 2.94869C11.7382 1.17461 13.7319 0 16 0C18.268 0 20.2618 1.17461 21.4061 2.9487C23.4696 2.50333 25.7099 3.08253 27.3138 4.68629C28.9174 6.29006 29.4966 8.5304 29.0514 10.594C30.8254 11.7382 32 13.7319 32 16C32 18.268 30.8254 20.2618 29.0514 21.4061C29.4966 23.4696 28.9174 25.7099 27.3138 27.3138C25.7099 28.9174 23.4696 29.4966 21.4061 29.0514C20.2618 30.8254 18.268 32 16 32C13.7319 32 11.7382 30.8254 10.594 29.0514C8.5304 29.4966 6.29006 28.9174 4.68629 27.3138C3.08253 25.7099 2.50333 23.4696 2.9487 21.4061C1.17461 20.2618 0 18.268 0 16C0 13.7319 1.17461 11.7382 2.9487 10.594ZM11.4329 20.5592C13.9433 23.0694 18.0134 23.0694 20.5238 20.5592C23.0342 18.0488 23.0342 13.9786 20.5238 11.4682C18.0134 8.95781 13.9433 8.95781 11.4329 11.4682C8.9225 13.9786 8.9225 18.0488 11.4329 20.5592Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//                ?!\n//               +$$+\n//      +,'     .$$$$.     `,<.\n//      [$$Bt,  \"$$$$,  ,\\B$$+\n//       ($$$$M,`$$$$`,M$$$$\\\n//        ,M$$$$\\*$$c[$$$$M,\n//      .'''I(8$$nBBn$$Bf;''..\n// .,(*$$$$$$$c*M$$$$8cMB$$$$$$*(;.\n// .;(*$$$$$$BM*8$$B$**c$$$$$$$*(,.\n//      ..''ItB$$n8Bc$$8(I'''.\n//        ,M$$$$[c$$*\\$$$$M,\n//       \\$$$$M,`$$$$`,M$$$$(\n//      +$$B\\,  ,$$$$\"  ,fB$$[\n//     .<,`     .$$$$.     ',+\n//               +$$+\n//                !?\n\n// Shape 34 in figma\nexport const Shape36 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4318)\">\n      <path d=\"M20.3573 17.6493C23.337 18.7773 27.3477 18.5717 29.9013 17.16L32 16L29.9013 14.84C27.3477 13.4284 23.3371 13.2228 20.3573 14.3507L18.1227 15.1965C18.1088 15.1515 18.092 15.108 18.0755 15.0643L20.2474 14.0851C23.152 12.7757 25.8424 9.79438 26.6501 6.99051L27.3138 4.68621L25.0094 5.34987C22.2056 6.15747 19.2243 8.848 17.9147 11.7526L16.9691 13.8503C16.9254 13.8291 16.8818 13.808 16.8366 13.7896L17.6493 11.6426C18.7771 8.66293 18.5715 4.65227 17.16 2.09861L16 0L14.84 2.09867C13.4284 4.65235 13.2228 8.66293 14.3507 11.6427L15.1633 13.7897C15.1181 13.8081 15.0745 13.8291 15.0308 13.8503L14.0851 11.7526C12.7757 8.84808 9.79438 6.15754 6.99051 5.34995L4.68621 4.68629L5.34987 6.99059C6.15747 9.79438 8.848 12.7757 11.7526 14.0852L13.9244 15.0643C13.908 15.1081 13.8911 15.1516 13.8773 15.1966L11.6426 14.3507C8.66293 13.2228 4.65227 13.4285 2.09861 14.84L0 16L2.09867 17.16C4.65235 18.5717 8.66293 18.7773 11.6427 17.6493L13.9818 16.764C14.0002 16.8043 14.0188 16.8448 14.0395 16.8838L11.7526 17.9149C8.84808 19.2243 6.15755 22.2056 5.34995 25.0094L4.68629 27.3138L6.99059 26.6501C9.79438 25.8426 12.7757 23.152 14.0852 20.2475L15.1465 17.8934C15.1857 17.9098 15.2264 17.9232 15.2668 17.9374L14.3507 20.3574C13.2228 23.3371 13.4285 27.3478 14.84 29.9014L16 32.0002L17.1602 29.9014C18.5717 27.3478 18.7773 23.3373 17.6494 20.3574L16.7333 17.9373C16.7736 17.9232 16.8144 17.9098 16.8536 17.8933L17.9149 20.2474C19.2243 23.152 22.2056 25.8424 25.0094 26.6501L27.3138 27.3138L26.6501 25.0094C25.8426 22.2056 23.152 19.2243 20.2475 17.9147L17.9605 16.8838C17.9813 16.8448 17.9998 16.8043 18.0182 16.7638L20.3573 17.6493Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4318\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//                +<\n//       .^      +$$+      `.\n//       .$$t;  .$$$$.  ;tB$'\n//        \\$$$8;\"$$$$,;8$$$t\n//         r$$$$*$$$$c$$$$n\n//  ;{\\ff\\[In$$$$$$$$$$$$t<?(ff\\[;\n//   ;*$$$$$$$$$$$$$$$$$$$$$$$$*!\n//     ';(*B$$$$$$$$$$$$$$B*\\!'\n//     '!\\*B$$$$$$$$$$$$$$B*(I'\n//   ;*$$$$$$$$$$$$$$$$$$$$$$$$M!\n//  ;[\\ff(?!r$$$$$$$$$$$$nI[\\ff\\{;\n//         r$$$$M$$$$M$$$$r.\n//        f$$$8I,$$$$,,8$$$f\n//       .$Bf;  .$$$$.  ;f$$.\n//       .`      <$$+      `.\n//                ![\n\n// Shape 33 in figma\nexport const Shape37 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M23.3874 16C25.7899 15.5248 28.1539 14.3506 29.5963 12.8075L31.2339 11.0557L28.8794 10.6009C26.8054 10.2003 24.2027 10.64 21.9797 11.6678C23.6442 9.8711 24.8666 7.53162 25.1264 5.43546L25.4216 3.0557L23.2494 4.07174C21.3362 4.9667 19.489 6.85216 18.2944 8.99037C18.585 6.55851 18.1989 3.94731 17.177 2.09867L16.017 0L14.8569 2.09867C13.835 3.94731 13.4489 6.55851 13.7394 8.99037C12.545 6.85216 10.6977 4.96662 8.78445 4.07174L6.61232 3.0557L6.9074 5.43546C7.16733 7.53162 8.38973 9.8711 10.0542 11.6678C7.83114 10.64 5.22836 10.2004 3.15445 10.6009L0.800003 11.0557L2.43751 12.8075C3.87989 14.3506 6.24388 15.5248 8.64655 16C6.24396 16.4752 3.87989 17.6493 2.43751 19.1925L0.800003 20.9443L3.15445 21.399C5.22836 21.7997 7.83108 21.36 10.0542 20.3322C8.38973 22.129 7.16733 24.4683 6.9074 26.5645L6.61232 28.9442L8.78437 27.9283C10.6977 27.0333 12.5449 25.1478 13.7393 23.0096C13.4488 25.4414 13.8349 28.0526 14.8568 29.9013L16.0168 32L17.1768 29.9013C18.1987 28.0526 18.5848 25.4414 18.2944 23.0096C19.4888 25.1478 21.336 27.0334 23.2493 27.9283L25.4213 28.9442L25.1262 26.5645C24.8662 24.4683 23.6438 22.129 21.9795 20.3322C24.2026 21.36 26.8053 21.7995 28.8792 21.399L31.2336 20.9443L29.5962 19.1925C28.1539 17.6494 25.7899 16.4752 23.3874 16Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//                +<\n//       .^      +$$+      `.\n//       .$$t;  .$$$$.  ;tB$'\n//        \\$$$8;\"$$$$,;8$$$t\n//         r$$$$*$$$$c$$$$n\n//  ;{\\ff\\[In$$$$$8M$$$$$t<?(ff\\[;\n//   ;*$$$$$$$$r`    ^n$$$$$$$$*!\n//     ';(*B$$*        8$$B*\\!'\n//     '!\\*B$$*        M$$B*(I'\n//   ;*$$$$$$$$r`    `n$$$$$$$$M!\n//  ;[\\ff(?!r$$$$$*M$$$$$nI[\\ff\\{;\n//         r$$$$M$$$$M$$$$r.\n//        f$$$8I,$$$$,,8$$$f\n//       .$Bf;  .$$$$.  ;f$$.\n//       .`      <$$+      `.\n//                ![\n\n// Shape 32 in figma\nexport const Shape38 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M29.5963 12.8075C28.1539 14.3506 25.7899 15.5248 23.3874 16C25.7899 16.4752 28.1539 17.6494 29.5962 19.1925L31.2336 20.9443L28.8792 21.399C26.8053 21.7995 24.2026 21.36 21.9795 20.3322C23.6438 22.129 24.8662 24.4683 25.1262 26.5645L25.4213 28.9442L23.2493 27.9283C21.336 27.0334 19.4888 25.1478 18.2944 23.0096C18.5848 25.4414 18.1987 28.0526 17.1768 29.9013L16.0168 32L14.8568 29.9013C13.8349 28.0526 13.4488 25.4414 13.7393 23.0096C12.5449 25.1478 10.6977 27.0333 8.78437 27.9283L6.61232 28.9442L6.90739 26.5645C7.16733 24.4683 8.38973 22.129 10.0542 20.3322C7.83107 21.36 5.22835 21.7997 3.15445 21.399L0.799999 20.9443L2.4375 19.1925C3.87989 17.6493 6.24395 16.4752 8.64654 16C6.24387 15.5248 3.87989 14.3506 2.4375 12.8075L0.799999 11.0557L3.15445 10.6009C5.22835 10.2004 7.83115 10.64 10.0542 11.6678C8.38973 9.8711 7.16733 7.53162 6.90739 5.43546L6.61232 3.0557L8.78445 4.07174C10.6977 4.96662 12.545 6.85216 13.7394 8.99037C13.4489 6.55851 13.835 3.94731 14.8568 2.09867L16.017 0L17.177 2.09867C18.1989 3.94731 18.585 6.55851 18.2944 8.99037C19.489 6.85216 21.3362 4.9667 23.2494 4.07174L25.4216 3.0557L25.1264 5.43546C24.8666 7.53162 23.6442 9.8711 21.9797 11.6678C24.2027 10.64 26.8054 10.2003 28.8794 10.6009L31.2339 11.0557L29.5963 12.8075ZM13.0007 18.9914C14.6452 20.6358 17.3115 20.6358 18.956 18.9914C20.6005 17.3469 20.6005 14.6805 18.956 13.036C17.3115 11.3915 14.6452 11.3915 13.0007 13.036C11.3562 14.6805 11.3562 17.3469 13.0007 18.9914Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//                ..\n//                II\n//               .8B.\n//              .*$$*.\n//             ^8$$$$8^\n//           `t$$$$$$$$t`\n//        .Ir$$$$$$$$$$$$rI.\n//   '`I[*$$$$$$$$$$$$$$$$$$*[;^..\n//  ..^;[*$$$$$$$$$$$$$$$$$$*[I`'\n//        .Ir$$$$$$$$$$$$rI.\n//           `f$$$$$$$$f`\n//             ^8$$$$8^\n//              .*$$*.\n//               .B8.\n//                II\n//                ..\n\n// Shape 29 in figma\nexport const Shape39 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M16 0C16.5432 8.60154 23.3984 15.4568 32 16C23.3984 16.5432 16.5432 23.3984 16 32C15.4568 23.3984 8.60154 16.5432 0 16C8.60154 15.4568 15.4568 8.60154 16 0Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//                .\n//                {\\\n//      .      .;*$$*;       .\n//       fn\\(\\*$$$$$$$$*\\(\\nt\n//       ,$$$$$$$$$$$$$$$$$$,\n//       ?$$$$$$$$$$$$$$$$$$?\n//      !$$$$$$$$$$$$$$$$$$$$!\n//   `!*$$$$$$$$$$$$$$$$$$$$$$c!'.\n//  .'!c$$$$$$$$$$$$$$$$$$$$$$*!`\n//      !$$$$$$$$$$$$$$$$$$$$!\n//       ?$$$$$$$$$$$$$$$$$$?\n//       ,$$$$$$$$$$$$$$$$$$,\n//       fn\\(\\*$$$$$$$$*\\(\\nt\n//      .       ;*$$c;.      .\n//                \\{\n//                 .\n\n// Shape 23 in figma\nexport const Shape40 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M16 0C16.0022 5.90288 23.1381 8.85867 27.3138 4.68629C23.1413 8.86186 26.0971 15.9977 32 16C26.0971 16.0022 23.1413 23.1381 27.3138 27.3138C23.1381 23.1413 16.0022 26.0971 16 32C15.9977 26.0971 8.86186 23.1413 4.68629 27.3138C8.85867 23.1381 5.90288 16.0022 0 16C5.90288 15.9977 8.85867 8.86186 4.68629 4.68629C8.86186 8.85867 15.9977 5.90288 16 0Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//   ,\\*B$B*r+,.      .,[t*B$B*(;\n// '8$$$$$$$$$$$n!..Ir$$$$$$$$$$$M'\n// c$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$c\n// B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B\n// [$$$$$$$$$$$$$$$$$$$$$$$$$$$$$${\n// .*$$$$$$$$$$$$$$$$$$$$$$$$$$$$*\n//  .r$$$$$$$$$$$$$$$$$$$$$$$$$$n.\n//    <$$$$$$$$$$$$$$$$$$$$$$$$<\n//    <$$$$$$$$$$$$$$$$$$$$$$$$<\n//  .n$$$$$$$$$$$$$$$$$$$$$$$$$$r.\n//  *$$$$$$$$$$$$$$$$$$$$$$$$$$$$*.\n// {$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$[\n// B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B\n// c$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$c\n// 'M$$$$$$$$$$$rI..!n$$$$$$$$$$$8'\n//   ;(*B$B*f[,.      .,+r*B$B*\\,\n\n// Shape 22 in figma\nexport const Shape41 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n  <g clipPath=\"url(#clip0_1_4344)\">\n    <path d=\"M16 27.7981C3.89832 37.911 -5.91099 28.1018 4.20195 16C-5.91099 3.89831 3.89832 -5.911 16 4.20194C28.0994 -5.911 37.9111 3.89831 27.7981 16C37.9111 28.0925 28.0994 37.911 16 27.7981Z\" fill=\"currentColor\"/>\n  </g>\n  <defs>\n    <clipPath id=\"clip0_1_4344\">\n      <rect width=\"32\" height=\"32\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n  </svg>\n)\n\n//          ,<\\n8B$$BMc(+^\n//        ;8$$$$$$$$$$$$$$8;\n//        B$$$$$$$$$$$$$$$$$\n//    ,!!^!B$$$$$$$$$$$$$$$;,I!,\n//  ,8$$$$$8$$$$$$$$$$$$$$8B$$$$8,\n// `$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$`\n// t$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$t\n// B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B\n// B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B\n// f$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$f\n// `$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$`\n//  ,8$$$$B8$$$$$$$$$$$$$$8$$$$$8,\n//    ,!I,;$$$$$$$$$$$$$$$B!^!!,\n//        $$$$$$$$$$$$$$$$$B\n//        ;8$$$$$$$$$$$$$$8;\n//          ^+(cMB$$B8n\\<\"\n\n// Shape 21 in figma\nexport const Shape42 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4346)\">\n      <path d=\"M22.3995 22.399C35.2002 35.2003 -3.20018 35.2003 9.60053 22.399C-3.20018 35.2003 -3.20018 -3.19989 9.60053 9.59958C-3.20018 -3.19989 35.2002 -3.19989 22.3995 9.59958C35.2002 -3.19989 35.2002 35.2003 22.3995 22.399Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4346\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n// \"*B$M\\+`                `!t*$Bn,\n// B$$$$$$$8<.          '<8$$$$$$$B\n// [$$$$$$$$$$t'      `\\$$$$$$$$$$[\n//  \\$$$$$$$$$$${.  .($$$$$$$$$$$f\n//   !B$$$$$$$$$$8;I8$$$$$$$$$$B!\n//    '\\$$$$$$$$$$$$$$$$$$$$$$f.\n//      `($$$$$$$$$$$$$$$$$B('\n//        .!M$$$$$$$$$$$$*!.\n//        .!*$$$$$$$$$$$$M!.\n//      '(B$$$$$$$$$$$$$$$$$(`\n//    .t$$$$$$$$$$$$$$$$$$$$$$\\'\n//   !B$$$$$$$$$$8I;8$$$$$$$$$$B!\n//  t$$$$$$$$$$$(.  .{$$$$$$$$$$$\\\n// ?$$$$$$$$$$\\`      'f$$$$$$$$$$[\n// B$$$$$$$8<'          .<8$$$$$$$B\n// ,nB$*f!`                `+fM$B*\"\n\n// Shape 20 in figma\nexport const Shape43 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4349)\">\n      <path d=\"M16.0031 22.191C2.33034 40.7617 -8.75465 29.6768 9.81254 15.9994C-8.76317 2.32419 2.32182 -8.75648 16.0031 9.80993C29.6757 -8.76287 40.7607 2.32419 22.1935 15.9994C40.7522 29.6768 29.6672 40.7617 16.0031 22.191Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4349\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//                ;\n//               ,$\n//              '8$\n//             .8$$\n//             *$$$;'\n//            n$$$$$$8t+^\n//           ($$$$$$$$$$$$*{;'\n//          [$$$$$$$$$$$$$$$$$8n+^.\n// .^+n8$$$$$$$$$$$$$$$$$[\n//      ';{*$$$$$$$$$$$${\n//           ^+\\8$$$$$$n\n//               ';$$$*\n//                 $$8.\n//                 $8'\n//                 $,\n//                 ;\n\n// Shape 19 in figma\nexport const Shape44 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M15.9992 32V23.035L0 15.9992H8.96501L15.9992 0V8.96501L32 15.9992H23.035L15.9992 32Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//           ,<t*8$\n//        `\\B$$$$$$f\\{?I\"'\n//      .t$$$$$$$$$$$$$$$$8(;.\n//     '8$$$$$$$$$$$$$$$$$$$$$t`\n//    '8$$$$$$$$$$$$$$$$$$$$$$$$(\n//    n$$$$$$$$$$$$$$$$$$$$$$$$$$*\n//   `$$$$$$$$$$$$$$$$$$$$$$$$$$$$[\n//   I$$$$$$$$$$$$$$$$$$$$$$$$$$$$8\n// 8$$$$$$$$$$$$$$$$$$$$$$$$$$$$I\n// [$$$$$$$$$$$$$$$$$$$$$$$$$$$$`\n//  *$$$$$$$$$$$$$$$$$$$$$$$$$$n\n//   ($$$$$$$$$$$$$$$$$$$$$$$$8'\n//    `f$$$$$$$$$$$$$$$$$$$$$8'\n//      .;(8$$$$$$$$$$$$$$$$f.\n//          '\"I?{\\f$$$$$$B\\`\n//                 $8*f<,\n\n// Shape 18 in figma\nexport const Shape45 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M15.999 32V29.5102C7.84933 29.5102 0 24.1491 0 16H2.48792C2.48792 7.85085 7.84933 0 15.999 0V2.48979C24.1486 2.48979 32 7.85085 32 16H29.5122C29.5122 24.1491 24.1486 32 15.999 32Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//   `'      .!\\*8$$B*(!.      '`\n//  ;$$8t;  'B$$$$$$$$$$B'  ,tB$$;\n//   \\$$$$B(IB$$$$$$$$$$$I(B$$$$(\n//    IB$$$$$B$$$$$$$$$$$$$$$$B!\n//    '\"n$$$$$$$$$$$$$$$$$$$$r,.\n//  <B$$$$$$$$$$$$$$$$$$$$$$BB$$B+\n// +$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$?\n// B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$8\n// 8$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B\n// ?$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$+\n//  +B$$BB$$$$$$$$$$$$$$$$$$$$$$B<\n//    .,r$$$$$$$$$$$$$$$$$$$$n\"'\n//    !B$$$$$$$$$$$$$$$$B$$$$$BI\n//   ($$$$B(I$$$$$$$$$$$BI(B$$$$\\\n//  ;$$Bf,  'B$$$$$$$$$$B'  ;f8$$;\n//   `'      .!(*B$$8*\\!.      '`\n\n// Shape 17 in figma\nexport const Shape46 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4355)\">\n      <path d=\"M21.6885 25.7391C26.5637 34.0871 5.43828 34.0871 10.3135 25.7391C1.28246 34.0871 -2.08696 30.7138 6.26102 21.6885C-2.08696 26.5637 -2.08696 5.43827 6.26102 10.3135C-2.08696 1.28245 1.28628 -2.08697 10.3135 6.26101C5.43828 -2.08697 26.5637 -2.08697 21.6885 6.26101C30.7195 -2.08697 34.0871 1.28627 25.7391 10.3135C34.0871 5.43827 34.0871 26.5637 25.7391 21.6885C34.0871 30.7176 30.7195 34.0871 21.6885 25.7391Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4355\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//  .'         `(*$$*(`         ..\n//  .88+`     I$$$$$$$$;     '?88'\n//   .\\$$t^   c$$$$$$$$c   ^r$$f\n//     `n$$M; +$$$$$$$$? ;M$$n`\n//       ;M$$*\"*$$$$$$n,M$$M;\n//   .^;,,`;n$$M$$$$$$c$$n,`\";,\".\n// 't$$$$$$$nc$$$$$$$$$$M*$$$$$$$t'\n// *$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$c\n// c$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*\n// 'f$$$$$$$*M$$$$$$$$$$nn$$$$$$$f'\n//   .\",;\"`,n$$n$$$$$$M$$n;`,,;^.\n//       ;M$$*,n$$$$$$*\"*$$M;\n//     `n$$M; ?$$$$$$$$+ ;M$$n`\n//    t$$r^   c$$$$$$$$c   ^f$$\\.\n//  '88?'     ;$$$$$$$$I     `+88.\n//  ..         `(*$B*(`         '.\n\n// Shape 16 in figma\nexport const Shape47 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4358)\">\n      <path d=\"M18.8769 20.9254C27.5077 35.6915 4.50407 35.6915 13.123 20.9254C-0.0245654 35.6915 -3.69182 32.0257 11.0753 18.8776C-3.69182 27.5088 -3.69182 4.50425 11.0753 13.1236C-3.69182 -0.0245658 -0.0245654 -3.69196 13.123 11.0758C4.49223 -3.69196 27.4958 -3.69196 18.8769 11.0758C32.0245 -3.69196 35.6918 -0.0245658 20.9246 13.1236C35.6918 4.49241 35.6918 27.4969 20.9246 18.8776C35.6918 32.0257 32.0195 35.6915 18.8769 20.9254Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4358\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//       .\"                \"\n//        <t\"            ,t?\n//        ,$$8t+,````,<tB$$,\n// .`\"`'',n$$$$$$$$$$$$$$$$*^'''^^.\n//   `*$$$$$$$$$$$$$$$$$$$$$$$$c`\n//     \\$$$$$$$$$$$$$$$$$$$$$$(\n//      *$$$$$$$$$$$$$$$$$$$$*\n//      <$$$$$$$$$$$$$$$$$$$$<\n//      <$$$$$$$$$$$$$$$$$$$$<\n//      *$$$$$$$$$$$$$$$$$$$$*\n//     ($$$$$$$$$$$$$$$$$$$$$$\\\n//   `c$$$$$$$$$$$$$$$$$$$$$$$$*`\n// .^^'''^*$$$$$$$$$$$$$$$$n,''`\"`.\n//        ,$$Bf<,````,+f8$$,\n//        ?f,            \"f<\n//        \"                \".\n\n// Shape 15 in figma\nexport const Shape48 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M25.3445 32C21.0315 24.6152 10.9685 24.6152 6.6556 32C8.98979 24.6152 7.38514 23.0107 0 25.3448C7.38514 21.032 7.38514 10.9696 0 6.65694C7.38514 8.98931 8.98979 7.38475 6.6556 0C10.9685 7.38475 21.0315 7.38475 25.3445 0C23.0118 7.38475 24.6166 8.98931 32 6.65694C24.6166 10.9696 24.6166 21.032 32 25.3448C24.6166 23.0107 23.0118 24.6152 25.3445 32Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//      `*B\\,.          .,\\B*`\n//      i$$$$$8f[+!!+[t*$$$$$I\n//  ''`<8$$$$$$$$$$$$$$$$$$$$B!^''\n// c$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$c\n// '*$$$$$$$$$$$$$$$$$$$$$$$$$$$$*'\n//  .*$$$$$$$$$$$$$$$$$$$$$$$$$$8.\n//   ,$$$$$$$$$$$$$$$$$$$$$$$$$$,\n//    $$$$$$$$$$$$$$$$$$$$$$$$$$\n//    $$$$$$$$$$$$$$$$$$$$$$$$$$\n//   ,$$$$$$$$$$$$$$$$$$$$$$$$$$,\n//  .8$$$$$$$$$$$$$$$$$$$$$$$$$$*.\n// 'M$$$$$$$$$$$$$$$$$$$$$$$$$$$$*'\n// c$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$n\n//  ''^!B$$$$$$$$$$$$$$$$$$$$8<`''\n//      I$$$$$*f[+!!+[f8$$$$$!\n//      `cB\\,.          .,\\B*`\n\n// Shape 14 in figma\nexport const Shape49 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M26.435 30.7114C26.499 31.421 24.7251 32.3256 24.167 31.8826C19.3613 28.0686 12.6428 28.0677 7.83602 31.8795C7.27769 32.3222 5.50172 31.4162 5.56548 30.7066C5.85866 27.4435 4.55641 26.1413 1.29337 26.4344C0.583622 26.4982 -0.322398 24.7221 0.120393 24.1638C3.93218 19.3573 3.93113 12.6396 0.117262 7.83424C-0.325691 7.27613 0.578874 5.50203 1.28853 5.56594C4.55513 5.8601 5.85882 4.55799 5.56548 1.29337C5.5017 0.583632 7.27769 -0.322397 7.83602 0.120377C12.6428 3.93224 19.3613 3.9312 24.167 0.117247C24.7251 -0.325686 26.499 0.57888 26.435 1.28853C26.1406 4.55661 27.444 5.86018 30.7114 5.56595C31.421 5.50205 32.3256 7.276 31.8827 7.83415C28.0698 12.6396 28.0686 19.3574 31.8797 24.1638C32.3224 24.7222 31.4163 26.4982 30.7066 26.4344C27.4427 26.1413 26.1408 27.445 26.435 30.7114Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//         ;t8$Bn!\n//       .n$$$$$$$8;\n//       n$$$$$$$$$$8+,,,,`'.\n//      \"$$$$$$$$$$$$$$$$$$$$Bn[^\n//      {$$$$$$$$$$$$$$$$$$$$$$$$M`\n//      t$$$$$$$$$$$$$$$$$$$$$$$$$8\n//      M$$$$$$$$$$$$$$$$$$$$$$$$$r\n//    ;8$$$$$$$$$$$$$$$$$$$$$$$$8!\n//  !8$$$$$$$$$$$$$$$$$$$$$$$$8;\n// r$$$$$$$$$$$$$$$$$$$$$$$$$M\n// 8$$$$$$$$$$$$$$$$$$$$$$$$$t\n// `M$$$$$$$$$$$$$$$$$$$$$$$${\n//   ^[nB$$$$$$$$$$$$$$$$$$$$\"\n//       .'`,,,,+8$$$$$$$$$$r\n//                ;8$$$$$$$n.\n//                  !nB$8f;\n\n// Shape 13 in figma\nexport const Shape50 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M20.3424 32C15.9991 32 15.9991 26.7877 11.6558 26.7877C6.65677 26.7877 0 25.3418 0 20.3413C0 15.9982 5.21085 15.9982 5.21085 11.6551C5.21085 6.65822 6.65677 0 11.6576 0C16.001 0 16.001 5.21238 20.3442 5.21238C25.3414 5.21238 32 6.65822 32 11.6588C32 16.0019 26.7874 16.0019 26.7874 20.345C26.7854 25.351 25.3414 32 20.3424 32Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//           (B$r`\n//          \\$$$$$\"\n//          $$$$$$B`\n//         .$$$$$$$8`\n//         .$$$$$$$$$\\<!+++++<!,^\n//          $$$$$$$$$$$$$$$$$$$$$${\n//         `$$$$$$$$$$$$$$$$$$$$$$r\n//      `It$$$$$$$$$$$$$$$$$$$Br+`\n//  `+rB$$$$$$$$$$$$$$$$$$$f;`\n// r$$$$$$$$$$$$$$$$$$$$$$`\n// {$$$$$$$$$$$$$$$$$$$$$$\n//   ^,!<++++<!<\\$$$$$$$$$.\n//               `8$$$$$$$.\n//                `B$$$$$$\n//                 \"$$$$$\\\n//                  `r$B(\n\n// Shape 12 in figma\nexport const Shape51 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path d=\"M19.735 32C16 32 16 23.035 12.2649 23.035C7.96595 23.035 0 24.0328 0 19.7341C0 15.9992 8.96387 15.9992 8.96387 12.2643C8.96387 7.96714 7.96595 0 12.2649 0C16 0 16 8.96501 19.735 8.96501C24.0341 8.96501 32 7.96714 32 12.2643C32 15.9992 23.0346 15.9992 23.0346 19.7341C23.0346 24.0328 24.0341 32 19.735 32Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//              .r\\*(\n//              n$B$$\\\n//             ;$$$$$$^\n//   '++!,^.   r$$$$$$?   '^;<+<.\n//  't8$$$$$8(;r$$$$$$[ItB$$$$$M\\.\n//   ;B$$$$$$$$$$$$$$$$$$$$$$$$8,\n//    .+B$$$$$$$$$$$$$$$$$$$$8!\n//       ;(M$$$$$$$$$$$$$$*(,\n//       It8$$$$$$$$$$$$$$M(,\n//    .+B$$$$$$$$$$$$$$$$$$$$8!\n//   !8$$$$$$$$B$$$$$$$$$$$$$$$8,\n//  `fM$$$$$Bf,n$$$$$$[!r8$$$$$cf.\n//   '++<;`.   r$$$$$$?   '\";<++.\n//             I$$$$$$^\n//              *$B$$t\n//              .f\\*f\n\n// Shape 11 in figma\nexport const Shape52 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4369)\">\n      <path d=\"M15.9283 3.02539C15.9283 -5.62006 21.3306 6.63515 19.1734 10.3785C21.3344 6.63515 34.6509 5.18629 27.1622 9.50997C34.6509 5.18629 26.7386 16.0003 22.4166 16.0003C26.7386 16.0003 34.6509 26.8085 27.1622 22.4906C34.6509 26.8142 21.3344 25.3654 19.1734 21.6221C21.3344 25.3654 15.9283 37.6206 15.9283 28.9752C15.9283 37.6206 10.5242 25.3654 12.6832 21.6221C10.5223 25.3654 -2.79428 26.8142 4.69437 22.4906C-2.79428 26.8142 5.11815 16.0003 9.44183 16.0003C5.11815 16.0003 -2.79428 5.19202 4.69437 9.50997C-2.79428 5.18629 10.5223 6.63515 12.6832 10.3785C10.5242 6.63133 15.9283 -5.62006 15.9283 3.02539Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4369\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//              (* .8+\n//             `$$I?$$.\n//             ,$$(n$$`\n//    \\*r+^    \"$$*B$$'   .,[rM{\n//  `\"',f$$$t;  B$*$$M  Ir$$$\\^'^`\n//  ^M$$nt**$$8!{$$$$!+B$$Mc\\*$$n`\n//    `[8$$$M$$$8B$$$8$$$B$$$*?'\n//       ',+\\cM$$$$$$$B8n\\<,.\n//       .,+\\c8$$$$$$$$Mc(+,.\n//    `[M$$$$$$$B8$$88$$$8$$$M+`\n//  ^*$$cfcM$$8![$$$$I+8$$*c(c$$n`\n//  `^`,r$$$r, .B$*$$8  In$$$t\"'\"'\n//    \\Mf[,.   ^$$cB$$'   .,[nM[\n//             ,$$\\c$$`\n//             '$$;<$$.\n//              (c .8?\n\n// Shape 10 in figma\nexport const Shape53 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4372)\">\n      <path d=\"M15.9424 10.9571C15.9424 -10.4684 22.5602 4.53765 17.2034 13.8164C22.5602 4.53765 38.8654 2.76538 20.3096 13.479C38.8654 2.76538 29.1797 15.9991 18.4643 15.9991C29.1762 15.9991 38.8654 29.233 20.3096 18.521C38.8654 29.233 22.5602 27.4606 17.2034 18.1819C22.5602 27.4606 15.9424 42.4683 15.9424 21.0411C15.9424 42.4683 9.33334 27.4606 14.6814 18.1819C9.32638 27.4606 -6.97886 29.233 11.5769 18.521C-6.97886 29.233 2.70689 15.9991 13.4222 15.9991C2.70862 15.9991 -6.97886 2.76538 11.5769 13.479C-6.97886 2.76538 9.32638 4.53765 14.6814 13.8164C9.32638 4.53765 15.9424 -10.4684 15.9424 10.9571Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4372\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n// \"*B$M\\+`                `!tM$Bn,\n// B$$$$$$$8<.          '<8$$$$$$$B\n// [$$$$$$$$$$t'      `\\$$$$$$$$$$[\n//  \\$$$$$$$$$$${.  .($$$$$$$$$$$f\n//   !B$$$$$$$$$$8;I8$$$$$$$$$$B!\n//    '\\$$$$$$$$$$$$$$$$$$$$$$f.\n//      `($$$$$8I.  .I8$$$$B('\n//        .!M$$.      .$$*!.\n//        .!*$$.      .$$M!.\n//      '(B$$$$8I.  .I8$$$$$(`\n//    .t$$$$$$$$$$$$$$$$$$$$$$\\'\n//   !B$$$$$$$$$$8I;8$$$$$$$$$$B!\n//  t$$$$$$$$$$$(.  .{$$$$$$$$$$$\\\n// ?$$$$$$$$$$\\`      'f$$$$$$$$$$[\n// B$$$$$$$8<'          .<8$$$$$$$B\n// ,nB$Mf!`                `+fM$B*\"\n\n// Shape 8 in figma\nexport const Shape54 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4378)\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.81251 15.9994C-8.75469 29.6768 2.33031 40.7617 16.003 22.191C29.6672 40.7617 40.7522 29.6768 22.1934 15.9994C40.7606 2.32418 29.6757 -8.76287 16.003 9.80993C2.32179 -8.75648 -8.76322 2.32418 9.81251 15.9994ZM16 20C18.2091 20 20 18.2091 20 16C20 13.7908 18.2091 12 16 12C13.7909 12 12 13.7908 12 16C12 18.2091 13.7909 20 16 20Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4378\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//         ;t8$Bn!\n//       .n$$$$$$$8;\n//       n$$$$$$$$$$8+,,,,`'.\n//      \"$$$$$$$$$$$$$$$$$$$$Bn[^\n//      {$$$$$$$$$$$$$$$$$$$$$$$$M`\n//      t$$$$$B[^.  .^?B$$$$$$$$$$8\n//      M$$$$n.        .n$$$$$$$$$r\n//    ;8$$$$$'          '$$$$$$$8!\n//  !8$$$$$$$'          '$$$$$8;\n// r$$$$$$$$$n.        .n$$$$M\n// 8$$$$$$$$$$B?^.  .^[B$$$$$t\n// `M$$$$$$$$$$$$$$$$$$$$$$$${\n//   ^[nB$$$$$$$$$$$$$$$$$$$$\"\n//       .'`,,,,+8$$$$$$$$$$r\n//                ;8$$$$$$$n.\n//                  !nB$8f;\n\n// Shape 7 in figma\nexport const Shape55 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.9991 29.3938C17.085 30.697 18.1707 32 20.3424 32C25.3414 32 26.7854 25.351 26.7874 20.345C26.7874 18.1734 28.0904 17.0877 29.3936 16.0019C30.6968 14.9161 32 13.8303 32 11.6588C32 6.65822 25.3414 5.21238 20.3442 5.21238C18.1726 5.21238 17.0867 3.9093 16.001 2.60619C14.9151 1.3031 13.8293 0 11.6576 0C6.65677 0 5.21085 6.65822 5.21085 11.6551C5.21085 13.8266 3.90814 14.9124 2.60542 15.9982C1.30271 17.084 0 18.1698 0 20.3413C0 25.3418 6.65677 26.7877 11.6558 26.7877C13.8274 26.7877 14.9133 28.0907 15.9991 29.3938ZM16 21.92C19.2696 21.92 21.92 19.2696 21.92 16C21.92 12.7305 19.2696 10.08 16 10.08C12.7305 10.08 10.08 12.7305 10.08 16C10.08 19.2696 12.7305 21.92 16 21.92Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n//   ,\\*B$B*r+,.      .,[t*B$B*(;\n// '8$$$$$$$$$$$n!..Ir$$$$$$$$$$$M'\n// c$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$c\n// B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B\n// [$$$$$$$$$$$$$$$$$$$$$$$$$$$$$${\n// .*$$$$$$$$$B[^.  .^?B$$$$$$$$$*\n//  .r$$$$$$$n.        .n$$$$$$$n.\n//    <$$$$$$'          '$$$$$$<\n//    <$$$$$$'          '$$$$$$<\n//  .n$$$$$$$n.        .n$$$$$$$r.\n//  *$$$$$$$$$B?^.  .^[B$$$$$$$$$*.\n// {$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$[\n// B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B\n// c$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$c\n// 'M$$$$$$$$$$$rI..!n$$$$$$$$$$$8'\n//   ;(*B$B*f[,.      .,+r*B$B*\\,\n\n// Shape 6 in figma\nexport const Shape56 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4383)\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.20195 16C-5.91099 28.1018 3.89832 37.911 16 27.7981C28.0994 37.911 37.9111 28.0925 27.7981 16C37.9111 3.89831 28.0994 -5.911 16 4.20194C3.89832 -5.911 -5.91099 3.89831 4.20195 16ZM16 21.92C19.2696 21.92 21.92 19.2696 21.92 16C21.92 12.7305 19.2696 10.08 16 10.08C12.7305 10.08 10.08 12.7305 10.08 16C10.08 19.2696 12.7305 21.92 16 21.92Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4383\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n//  .'         `(*$$*(`         ..\n//  .88+`     I$$$$$$$$;     '?88'\n//   .\\$$t^   c$$$$$$$$c   ^r$$f\n//     `n$$M; +$$$$$$$$? ;M$$n`\n//       ;M$$*\"*$$$$$$n,M$$M;\n//   .^;,,`;n$$M$$$$$$c$$n,`\";,\".\n// 't$$$$$$$nc$8I.  .I8$M*$$$$$$$t'\n// *$$$$$$$$$$$.      .$$$$$$$$$$$c\n// c$$$$$$$$$$$.      .$$$$$$$$$$$*\n// 'f$$$$$$$*M$8I.  .I8$nn$$$$$$$f'\n//   .\",;\"`,n$$n$$$$$$M$$n;`,,;^.\n//       ;M$$*,n$$$$$$*\"*$$M;\n//     `n$$M; ?$$$$$$$$+ ;M$$n`\n//    t$$r^   c$$$$$$$$c   ^f$$\\.\n//  '88?'     ;$$$$$$$$I     `+88.\n//  ..         `(*$B*(`         '.\n\n// Shape 5 in figma\nexport const Shape57 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4386)\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.123 20.9254C4.50408 35.6915 27.5077 35.6915 18.8769 20.9254C32.0195 35.6915 35.6918 32.0257 20.9246 18.8777C35.6918 27.4969 35.6918 4.49241 20.9246 13.1236C35.6918 -0.0245627 32.0245 -3.69196 18.8769 11.0758C27.4958 -3.69196 4.49224 -3.69196 13.123 11.0758C-0.0245566 -3.69196 -3.69181 -0.0245627 11.0753 13.1236C-3.69181 4.50425 -3.69181 27.5088 11.0753 18.8777C-3.69181 32.0257 -0.0245566 35.6915 13.123 20.9254ZM16 20C18.2091 20 20 18.2091 20 16C20 13.7908 18.2091 12 16 12C13.7908 12 12 13.7908 12 16C12 18.2091 13.7908 20 16 20Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4386\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n// *$$$$$$$$Mn[^      '!t*888888888\n// *$$$$$$$$$$$$8,  `n$$$$$$$$$$$$$\n// *$$$$$$$$$$$$$$!,$$$$$$$$$$$$$$$\n// *$$$$$$$$$$$$$$BM$$$$$$$$$$$$$$$\n// n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$M\n// `B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$;\n//  'n$$$$$$$$$$$$$$$$$$$$$$$$$$8,\n//    `+nM$$$$$$$$$$$$$$$$$$B*[,\n//    ,[*B$$$$$$$$$$$$$$$$$$Mn+`\n//  ,8$$$$$$$$$$$$$$$$$$$$$$$$$$n'\n// ;$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B`\n// M$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$n\n// $$$$$$$$$$$$$$$MB$$$$$$$$$$$$$$*\n// $$$$$$$$$$$$$$$,!$$$$$$$$$$$$$$*\n// $$$$$$$$$$$$$n`  ,8$$$$$$$$$$$$*\n// 888888888*f!'      ^[nM$$$$$$$$*\n\n// Shape 4 in figma\nexport const Shape58 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.11429 0H0.114286V8C0.114286 12.0739 3.15946 15.4366 7.09776 15.936C3.10424 16.3843 6.7524e-07 19.7725 3.49691e-07 23.8858L0 31.8858H8C12.0739 31.8858 15.4366 28.8405 15.936 24.9022C16.3843 28.8958 19.7725 32 23.8858 32H31.8858V24C31.8858 19.9261 28.8405 16.5634 24.9022 16.064C28.8958 15.6157 32 12.2275 32 8.11429V0.114286L24 0.114285C19.9261 0.114285 16.5634 3.15946 16.064 7.09776C15.6157 3.10424 12.2275 0 8.11429 0Z\" fill=\"currentColor\"/>\n  </svg>\n)\n\n// cBMc(+^                  `I[tcMM\n// ?$$$$$$$n!            ,\\B$$$$$$f\n// .B$$$$$$$$B+.       !8$$$$$$$$$`\n//  `B$$$$$$$$$8,    `M$$$$$$$$$$,\n//   '*$$$$$$$$$$!  ,$$$$$$$$$$8,\n//     !8$$$$$$$$$`.B$$$$$$$$B+\n//       ,f$$$$$$$c{$$$$$$$cI.\n//          ^I{r*B$B$B*\\+,.\n//         .,+\\*B$B$B*r{I^\n//      .Ic$$$$$$${c$$$$$$$t,\n//     +B$$$$$$$$B.`$$$$$$$$$8!\n//   ,8$$$$$$$$$$,  !$$$$$$$$$$*'\n//  ,$$$$$$$$$$M`    ,8$$$$$$$$$B`\n// `$$$$$$$$$8!       .+B$$$$$$$$B.\n// t$$$$$$B\\,            !n$$$$$$$?\n// MMcf[I`                  ^+(cMBc\n\n// Shape 3 in figma\nexport const Shape59 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4392)\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.0619 14.6965C15.3986 6.4696 8.51199 0 0.114279 0C0.114279 8.35878 6.52404 15.2205 14.6965 15.938C6.46959 16.6013 -7.26232e-06 23.488 -7.62939e-06 31.8858C8.35878 31.8858 15.2205 25.476 15.938 17.3035C16.6013 25.5304 23.488 32 31.8858 32C31.8858 23.6413 25.476 16.7795 17.3035 16.0619C25.5304 15.3987 32 8.512 32 0.114286C23.6413 0.114285 16.7795 6.52405 16.0619 14.6965ZM15.9996 16.0003C15.9998 16.0003 16.0002 16.0005 16.0003 16.0005L16.0005 15.9996C16.0002 15.9996 15.9999 15.9996 15.9996 15.9996C15.9996 15.9999 15.9996 16.0002 15.9996 16.0003Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4392\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\n// B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B\n// \\$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\\n// 'B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$'\n//  ,$$$$$$$$$$$$$$$$$$$$$$$$$$$$,\n//   ^8$$$$$$$$$$$$$$$$$$$$$$$$8`\n//     <8$$$$$$$$$$$$$$$$$$$$8!\n//       ;r$$$$$$$$$$$$$$$$rI\n//          ^<(nMB$$BMn(!`\n//          `!(nMB$$BMn(<^\n//       Ir$$$$$$$$$$$$$$$$r;\n//     <8$$$$$$$$$$$$$$$$$$$$8!\n//   ^8$$$$$$$$$$$$$$$$$$$$$$$$8^\n//  ,$$$$$$$$$$$$$$$$$$$$$$$$$$$$\"\n// '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B'\n// \\$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\\n// B$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$B\n\n// Shape 2 in figma\nexport const Shape60 = ({...props}: ShapeProps) => (\n  <svg {...defaultProps} {...props}>\n    <g clipPath=\"url(#clip0_1_4395)\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.9961 16C7.16135 15.9979 -6.85699e-06 8.83526 -7.62939e-06 2.79754e-06L32 0C32 8.83526 24.8387 15.9979 16.0038 16C24.8387 16.0021 32 23.1648 32 32H-6.23063e-06C-6.23063e-06 23.1648 7.16135 16.0021 15.9961 16Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1_4395\">\n        <rect width=\"32\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n","import * as React from \"react\"\nimport {ShapeProps} from \"./shapes\";\n\nconst defaultProps = {\n    viewBox: \"0 0 48 48\",\n    fill: \"none\"\n}\n\nexport const Face1 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_3_2)\">\n            <path fill=\"currentColor\"\n                d=\"M22 -0.1875L20.625 2L18.625 1.375C18.625 1.375 16.0234 4.39063 15.625 5.1875C15.2266 5.1875 13.375 5 13.375 5C13.375 5 12.3906 7.58594 12.1875 8.1875H11C11 8.1875 8.20312 11.9844 8.99999 15.1875L8.18749 14.8125C8.18749 14.8125 7.60937 20.2109 11.8125 25.8125L10.375 29L12.8125 31.375H13.375C13.375 31.5781 14.4219 35.6016 14.625 36C14.8281 36.3984 18.1875 40 18.1875 40H30.1875C30.1875 40 32.3906 34.4219 33.1875 31.625L34 32L36.8125 28.1875L35.375 26.625L37.375 23.375C37.1719 23.375 38.375 16.3984 38.375 14C38.375 10.3984 35.625 7.1875 35.625 7.1875L35 7.375C34.3984 6.57813 31 3 31 3L30.375 4.1875C28.9766 2.58594 26.625 0.8125 26.625 0.8125L24.625 1.8125L22 -0.1875ZM22.625 4.375L24 5.625L26 4.625C29 6.02344 30.625 10 30.625 10L31.375 8.375C32.7734 9.57813 33.1875 11.625 33.1875 11.625L34.375 11C34.7734 11.6016 35.1875 12.6016 35.1875 14L34.625 20.1875L33.8125 19.375L33.375 17.375L32.625 18.625L30.8125 16L29.8125 17.8125C29.8125 17.8125 27.5859 14.6016 27.1875 14L26.625 15.375L23.375 13L19.375 16.375L18 15.375L14.8125 19.625L14 18.375C13.3984 19.375 13 20.625 13 20.625C13 20.625 10.9844 16.7969 12.1875 13C12.3906 12 12.7969 11.3984 13 11H14.375C14.375 11 14.9766 8.98438 15.375 8.1875C15.5781 8.1875 17.1875 8.375 17.1875 8.375C17.1875 8.375 18.625 6.20313 19.625 5L21.8125 6L22.625 4.375ZM21.1875 21.8125C21.1875 21.8125 22.1719 24.625 20.375 25.625C20.375 25.625 19.5781 26.5781 19.375 27.375C19.375 27.375 20 27.6016 20 28C20 28.2031 19.7734 28.375 19.375 28.375C18.5781 28.375 19.1875 26.5859 19.1875 26.1875C18.3906 26.7891 17.7891 26.7734 16.1875 27.375L16.375 25.625L14.1875 23C14.1875 23 16.1875 23.7969 16.1875 24C16.1875 24 18.8125 23.4219 19.8125 23.625C20.6094 23.8281 21.1875 21.8125 21.1875 21.8125ZM32.8125 22.1875C33.0156 22.5859 32.3984 23.7891 32 24.1875C30.2031 24.7891 30 27 30 27C30 27 26.8125 26.2266 25.8125 25.625C25.2109 25.2266 24.625 23.9766 24.625 23.375C24.625 23.375 25.7734 24.2031 26.375 24C26.7734 23.7969 30.1875 22.8125 30.1875 22.8125C30.1875 22.8125 30.9844 23.375 31.1875 23.375C31.5859 22.9766 32.8125 22.3906 32.8125 22.1875ZM29.1875 30.625L30.1875 31.8125L29.625 33.1875L28.375 35.1875L26.8125 35.375L26.1875 37.1875H26V35.625H24.625L24.1875 37.1875H24L23.375 35.625L21.8125 35.375L21.625 36.8125H21V35.1875L20 35L19.8125 36.625H19.375L19 34.625L18 34.1875L16.8125 33.6875L16.625 33.625L16 31L16.8125 30.8125V31.625L17.375 32L18.1875 30.8125L18 32.375L19.625 33L20 31.625H20.1875V33.625L22 33.8125L22.375 31.375H22.8125V32.625H25V31.375H25.625L26 33.375H27.625L27.8125 31.625L28.375 33L29 32.8125L29.1875 30.625ZM29.1875 41.625L25.1875 43.625C25.1875 43.625 24.7891 43 24.1875 43C23.7891 43 23.1875 43.6094 23.1875 43.8125C22.7891 43.8125 19.7891 41.6094 18.1875 41.8125C17.9844 43.4141 18.2031 45.3906 19 46.1875C19.6016 46.1875 23.1875 44.375 23.1875 44.375C23.1875 44.375 23.5781 45 24.375 45C25.1719 45 25.1719 44.5859 25.375 44.1875C28.375 45.7891 29.8125 46 29.8125 46C29.8125 46 30.9844 43.2266 29.1875 41.625Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_3_2\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face2 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\" d=\"M21.625 0V9.6L19.25 4.8C13.3125 6 9.75 10.5563 9.75 24C9.75 32.6438 7.84815 38.4 5 40.8C5 40.8 15.9287 48 24 48C32.3125 48 43 40.8 43 40.8C40.625 38.8781 38.25 32.4 38.25 24C38.25 10.0781 34.6875 6 28.75 4.8L26.375 9.6V0H21.625ZM13.0898 18.45L21.625 21.15C18.3037 27.15 13.0898 22.2938 13.0898 18.45ZM34.9102 18.45C34.9102 22.2938 29.6963 27.15 26.375 21.15L34.9102 18.45Z\"/>\n    </svg>\n)\n\n\nexport const Face3 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_3_6)\">\n            <path fill=\"currentColor\" d=\"M24 0C14.1563 0 7.2 7.92187 7.2 19.2H4.8V7.2H0V19.2C0 21.8438 2.15625 24 4.8 24H7.425C8.625 34.8 13.4438 48 24 48C34.5563 48 39.375 34.8 40.575 24H43.2C45.8438 24 48 21.8438 48 19.2V7.2H43.2V19.2H40.8C40.8 7.92187 33.8438 0 24 0ZM12.225 16.8L21.6 19.2V22.35L13.65 25.425L12.45 24.225C12.2063 22.5469 11.9813 17.5219 12.225 16.8ZM35.775 16.8C36.0188 17.5219 35.7938 22.5281 35.55 24.45L34.35 25.65L26.4 22.35V19.2L35.775 16.8ZM24.225 26.625L34.575 30.75C32.6531 37.4719 29.2781 43.2 24 43.2C18.7219 43.2 15.3281 37.4719 13.65 30.75L24.225 26.625ZM19.2 33.6V36H28.8V33.6H19.2Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_3_6\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face4 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M17.2503 0C16.6537 0.000116736 16.0815 0.240989 15.6596 0.669643L8.90994 7.52679C8.488 7.95538 8.2509 8.53669 8.25079 9.14286V17.7455L6.2382 21.8348C6.10585 22.1033 6.02686 22.3957 6.00575 22.6952C5.98464 22.9947 6.02181 23.2955 6.11515 23.5804L8.3211 30.3036L10.5446 41.5893C10.6023 41.8839 10.7166 42.1641 10.881 42.4138C11.0454 42.6636 11.2566 42.8779 11.5026 43.0446L18.2522 47.6161C18.6218 47.8664 19.056 48 19.5002 48H24H28.4998C28.944 48 29.3782 47.8664 29.7478 47.6161L36.4974 43.0446C36.7434 42.8779 36.9546 42.6636 37.119 42.4138C37.2834 42.1641 37.3977 41.8839 37.4554 41.5893L39.6789 30.3036L41.8848 23.5804C41.9782 23.2955 42.0154 22.9947 41.9943 22.6952C41.9731 22.3957 41.8942 22.1033 41.7618 21.8348L39.7492 17.7455V9.14286C39.7491 8.53669 39.512 7.95538 39.0901 7.52679L32.3404 0.669643C31.9185 0.240989 31.3463 0.000116857 30.7497 0H17.2503ZM16.4286 6.35268L19.6628 14.5625C19.8296 14.9865 20.1176 15.35 20.4896 15.6062C20.8616 15.8624 21.3007 15.9996 21.7501 16H26.2499C26.6993 15.9996 27.1384 15.8624 27.5104 15.6062C27.8824 15.35 28.1704 14.9865 28.3372 14.5625L31.5714 6.35268L35.2494 10.0893V18.2857C35.2494 18.6406 35.3306 18.9906 35.4867 19.308L37.3192 23.0313L35.3637 28.9911C35.3346 29.0818 35.3111 29.1742 35.2934 29.2679L33.2281 39.7679L30.5827 41.558L27.5902 39.308C27.2026 39.0156 26.7327 38.8575 26.2499 38.8571H21.7501C21.2673 38.8575 20.7974 39.0156 20.4098 39.308L17.4173 41.558L14.7719 39.7679L12.7066 29.2679C12.6889 29.1742 12.6654 29.0818 12.6363 28.9911L10.6808 23.0313L12.5133 19.308C12.6694 18.9906 12.7506 18.6406 12.7506 18.2857V10.0893L16.4286 6.35268ZM13.2955 20.6384L12.2057 25.0759L21.2052 27.3616L22.295 22.9241L13.2955 20.6384ZM34.7045 20.6384L25.705 22.9241L26.7948 27.3616L35.7943 25.0759L34.7045 20.6384Z\"/>\n    </svg>\n)\n\n\nexport const Face5 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M24 0C24 0 22.5713 5.52187 19.25 7.2C17.3481 8.15625 16.875 2.4 16.875 2.4C16.875 2.4 12.5981 5.27813 12.125 12C12.125 13.4438 7.84815 11.0438 7.375 7.2C7.375 7.2 6.21533 12.9563 8.11719 18C7.64404 19.6781 7.375 21.6 7.375 22.8C5.94629 24 5 26.1563 5 28.8C5 31.6781 7.5791 34.35 10.1953 35.55C12.5703 44.1938 20.4375 48 24 48C27.5625 48 35.4297 44.1938 37.8047 35.55C40.4209 34.35 43 31.6781 43 28.8C43 26.4 42.2764 24.2438 40.8477 22.8C41.0889 19.6781 40.4023 17.55 39.2148 16.35C40.4023 12.9938 40.625 9.6 40.625 9.6C40.625 9.6 35.6338 12.2438 35.875 9.6C36.3481 4.8 33.5 2.4 33.5 2.4C33.5 2.4 29.6963 10.5563 28.75 7.2C27.5625 3.12187 24 0 24 0ZM19.25 12C19.4912 16.8 24 19.2 24 19.2C24 19.2 24.2412 14.8781 26.375 14.4C30.1787 18.7219 28.75 21.6 28.75 21.6C28.75 21.6 31.8394 20.4 33.5 14.4C34.6875 15.6 34.9287 20.6438 33.5 24C34.4463 23.5219 35.3833 22.7719 36.0977 22.05V23.775L35.875 25.425L37.2852 26.175C37.9995 26.4188 38.25 27.8438 38.25 28.8C38.25 29.5219 36.6172 30.9563 35.4297 31.2L33.7227 31.425L33.5 33.15C32.0713 40.1063 26.1338 43.2 24 43.2C22.3394 43.2 15.9287 40.8281 14.5 33.15L14.2773 31.425L12.5703 31.2C11.3828 30.9563 9.75 29.5219 9.75 28.8C9.75 27.8438 10.0005 26.4188 10.7148 26.175L12.125 25.425V22.8C12.8394 23.2781 13.5537 23.5219 14.5 24C13.0713 22.0781 13.5537 18.7219 14.5 16.8C15.2144 19.9219 19.25 21.6 19.25 21.6C19.25 21.6 17.1162 16.3219 19.25 12ZM32.5352 24.75L26.375 26.4C26.375 26.4 28.0356 30.2719 31.125 28.35C32.5537 27.3938 32.5352 24.75 32.5352 24.75ZM15.2422 24.975C15.2422 24.975 15.4463 27.8531 16.875 28.575C20.1963 30.0188 21.625 26.625 21.625 26.625L15.2422 24.975Z\"/>\n    </svg>\n)\n\n\nexport const Face6 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\" d=\"M24 0C13.3181 0 7 7.44375 7 19.2C7 30.9563 12.8248 48 24 48C35.1752 48 41 30.9563 41 19.2C41 7.44375 34.6819 0 24 0ZM25.6981 22.3219C28.3733 25.6781 36.8733 14.4 31.2857 7.2C37.6038 8.4 40.7533 26.8781 31.2857 31.2C31.2857 31.2 24.7305 26.6438 25.6981 22.3219ZM16.7143 7.2C11.1267 14.4 19.6267 25.6781 22.3019 22.3219C23.2695 26.6438 16.7143 31.2 16.7143 31.2C7.24665 26.8781 10.3962 8.4 16.7143 7.2ZM24 43.2C18.4124 43.2 11.8571 31.2 11.8571 31.2C11.8571 31.2 14.7695 32.8781 24 33.6C33.4676 32.8781 36.1429 31.2 36.1429 31.2C36.1429 31.2 29.1038 43.2 24 43.2Z\"/>\n    </svg>\n)\n\n\nexport const Face7 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M44.8511 4.48502C44.5529 4.30284 37.3809 0 24 0C10.6191 0 3.44711 4.30284 3.14889 4.48502L2 5.18977V24.9996C2 30.1774 8.38489 44.5889 23.4671 47.8849L24 48L24.5329 47.8849C39.6151 44.5889 46 30.175 46 24.9972V5.18977L44.8511 4.48502ZM13 5.99281C14.3567 5.80583 15.7036 5.96884 16.96 6.28286C17.9476 6.54654 18.8544 6.88694 19.798 7.32801C20.0229 7.39513 20.2233 7.49101 20.4164 7.61566C20.4922 7.65641 20.5607 7.67559 20.6364 7.71874L20.6144 7.7475C21.1742 8.18378 21.5556 8.831 21.5556 9.58849C21.5556 10.9117 20.4604 11.9856 19.1111 11.9856C18.5342 11.9856 18.0258 11.7603 17.6078 11.4319L17.5833 11.4606C17.554 11.4223 17.5002 11.3791 17.466 11.3384C17.4098 11.2881 17.3609 11.2329 17.3096 11.1754C16.8109 10.6241 16.1558 10.0416 15.508 9.5813C14.7209 9.03476 13.88 8.60088 13 8.38993C11.1911 8.00399 8.87867 8.62006 6.88889 9.58849C8.45333 7.9992 10.3062 6.47703 13 5.99281ZM21.5556 16.7799C20.1524 18.2277 17.95 19.177 15.4444 19.177C12.9389 19.177 10.7364 18.2277 9.33333 16.7799C10.7364 15.332 12.9389 14.3827 15.4444 14.3827C17.95 14.3827 20.1524 15.332 21.5556 16.7799ZM26.4444 43.1482L24 45.5453L21.5556 43.1482V38.354H26.4444V43.1482ZM36.2956 27.96L34.9707 29.8178C34.7482 30.1342 34.5258 30.4195 34.2789 30.7335C33.9636 31.1099 33.6116 31.4646 33.2131 31.7691C31.6462 33.0252 29.4658 33.6053 27.3709 33.2984C26.3222 33.1522 25.3078 32.7759 24.3911 32.2365C24.2493 32.1502 24.1296 32.0328 23.9951 31.9369C23.8607 32.0304 23.7433 32.1502 23.6016 32.2341C22.6873 32.7735 21.6729 33.1522 20.6242 33.2936C18.5318 33.6029 16.3538 33.018 14.7869 31.7643C14.3884 31.4598 14.0389 31.1051 13.7236 30.7287C13.4742 30.4147 13.2542 30.1294 13.0318 29.813L11.7069 27.9576C10.8709 26.6728 10.0251 25.3975 9.33333 23.9712C10.7878 24.6496 12.0882 25.479 13.396 26.2988L15.288 27.5981L16.2071 28.2597C16.432 28.4083 16.6716 28.5234 16.9062 28.6312C17.8644 29.0388 18.8813 29.0843 19.7711 28.8326C20.2136 28.7008 20.6364 28.521 20.9958 28.2549C21.1767 28.1254 21.3527 27.9912 21.5091 27.833L22.2693 27.0707L23.9951 25.34L25.7258 27.0707L26.486 27.8306C26.6424 27.9864 26.8184 28.1231 27.0018 28.2501C27.3611 28.5162 27.7816 28.7008 28.2264 28.8278C29.1162 29.0819 30.1307 29.0292 31.0864 28.6264C31.3211 28.521 31.5582 28.4035 31.7856 28.2549L32.7047 27.5933L34.5991 26.294C35.9093 25.4766 37.2098 24.6472 38.6667 23.9712C37.9773 25.3999 37.1316 26.6752 36.2956 27.96ZM32.5556 19.177C30.05 19.177 27.8476 18.2277 26.4444 16.7799C27.8476 15.332 30.05 14.3827 32.5556 14.3827C35.0611 14.3827 37.2636 15.332 38.6667 16.7799C37.2636 18.2277 35.0611 19.177 32.5556 19.177ZM35 8.38993C34.12 8.60088 33.2791 9.03476 32.492 9.5837C31.8442 10.0416 31.1891 10.6264 30.6904 11.1778C30.6391 11.2353 30.5902 11.2881 30.534 11.3408C30.4998 11.3815 30.4484 11.4223 30.4167 11.463L30.3947 11.4343C29.9742 11.7603 29.4658 11.9856 28.8889 11.9856C27.5396 11.9856 26.4444 10.9117 26.4444 9.58849C26.4444 8.831 26.8258 8.18378 27.3856 7.74511L27.3636 7.71634C27.4393 7.67319 27.5078 7.65402 27.5836 7.61326C27.7767 7.48861 27.9771 7.39273 28.202 7.32561C29.1431 6.88454 30.05 6.54415 31.04 6.28046C32.2964 5.96884 33.6433 5.80583 35 5.99281C37.6938 6.47703 39.5467 7.9992 41.1111 9.58849C39.1213 8.62006 36.8089 8.00399 35 8.38993Z\"/>\n    </svg>\n)\n\n\nexport const Face8 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M24 0C18.8418 0 14.0454 1.75313 10.5664 5.1C7.56982 7.97813 5.55664 12 5.07422 16.8H5V24H5.29688C5.82568 28.4719 7.0874 33.2344 9.23047 37.425C12.1621 43.1625 17.1162 48 24 48C30.8838 48 35.8379 43.1625 38.7695 37.425C40.9126 33.2344 42.1743 28.4719 42.7031 24H43V16.8H42.9258C42.4434 12 40.4302 7.97813 37.4336 5.1C33.9546 1.75313 29.1582 0 24 0ZM19.25 5.475V12H28.75V5.475C30.856 6.09375 32.6836 7.125 34.168 8.55C36.2368 10.5375 37.6562 13.275 38.1016 16.8H35.875V24H37.8789C37.3501 27.825 36.2554 31.8938 34.5391 35.25C32.0713 40.0688 28.75 43.2 24 43.2C19.25 43.2 15.9287 40.0688 13.4609 35.25C11.7446 31.8938 10.6499 27.825 10.1211 24H12.125V16.8H9.89844C10.3438 13.275 11.7632 10.5375 13.832 8.55C15.3164 7.125 17.144 6.09375 19.25 5.475ZM18.0625 19.2C16.0957 19.2 14.5 20.8125 14.5 22.8C14.5 24.7875 16.0957 26.4 18.0625 26.4C20.0293 26.4 21.625 24.7875 21.625 22.8C21.625 20.8125 20.0293 19.2 18.0625 19.2ZM29.9375 19.2C27.9707 19.2 26.375 20.8125 26.375 22.8C26.375 24.7875 27.9707 26.4 29.9375 26.4C31.9043 26.4 33.5 24.7875 33.5 22.8C33.5 20.8125 31.9043 19.2 29.9375 19.2ZM24 28.8C22.5713 28.8 21.625 29.7563 21.625 31.2H26.375C26.375 29.7563 25.4287 28.8 24 28.8ZM20.4375 33.6C19.7788 33.6 19.25 34.1344 19.25 34.8C19.25 35.4656 19.7788 36 20.4375 36C21.0962 36 21.625 35.4656 21.625 34.8C21.625 34.1344 21.0962 33.6 20.4375 33.6ZM27.5625 33.6C26.9038 33.6 26.375 34.1344 26.375 34.8C26.375 35.4656 26.9038 36 27.5625 36C28.2212 36 28.75 35.4656 28.75 34.8C28.75 34.1344 28.2212 33.6 27.5625 33.6ZM20.4375 38.4C19.7788 38.4 19.25 38.9344 19.25 39.6C19.25 40.2656 19.7788 40.8 20.4375 40.8C21.0962 40.8 21.625 40.2656 21.625 39.6C21.625 38.9344 21.0962 38.4 20.4375 38.4ZM27.5625 38.4C26.9038 38.4 26.375 38.9344 26.375 39.6C26.375 40.2656 26.9038 40.8 27.5625 40.8C28.2212 40.8 28.75 40.2656 28.75 39.6C28.75 38.9344 28.2212 38.4 27.5625 38.4Z\"/>\n    </svg>\n)\n\n\nexport const Face9 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M24 0.0040508C9.5816 -0.239677 2 10.5594 2 20.4023C2 27.6017 11.7778 36.2447 14.2222 40.8006C15.6927 43.4441 16.6667 48 24 48C31.3333 48 32.5556 43.2004 33.7778 40.8006C36.2222 36.001 46 27.6017 46 20.4023C46 10.5594 38.6667 0.247781 24 0.0040508ZM9.33333 19.9242C9.33333 18.2463 10.8038 16.8026 12.513 16.8026C17.6406 16.8026 21.8038 20.8804 21.8038 25.9237C21.8038 27.6017 20.3333 29.0454 18.6241 29.0454C13.487 28.8016 9.33333 24.7238 9.33333 19.9242ZM22.2908 35.5229C22.0425 36.001 21.3073 36.2447 20.5816 36.001C20.0851 35.7573 19.8464 35.0448 20.0851 34.323C20.3333 33.8449 22.2908 31.4451 23.026 31.6795C23.513 31.9232 22.5295 34.8011 22.2908 35.5229ZM27.4184 36.001C26.9314 36.2447 26.1962 36.001 25.7092 35.5229C25.4705 35.0448 24.487 31.9232 24.974 31.6795C25.4705 31.4451 27.4184 33.8449 27.9149 34.323C28.4019 34.8011 28.1536 35.5229 27.4184 36.001ZM29.6241 28.8016C27.9149 28.8016 26.4444 27.358 26.4444 25.68C26.4444 20.6461 30.5981 16.5589 35.7352 16.5589C37.4444 16.5589 38.9149 18.0025 38.9149 19.6805C38.6667 24.7238 34.513 28.8016 29.6241 28.8016Z\"/>\n    </svg>\n)\n\n\nexport const Face10 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M12.4747 3C11.2 3 10.1656 4.03747 10.1656 5.31579V12.9009C7.2579 12.203 4.46075 11.2916 1.85812 10.1419L0 14.3845C2.52151 15.4984 5.18075 16.4053 7.91957 17.1345C7.41491 17.2522 6.93168 17.4105 6.48088 17.6365C5.40887 18.1741 4.54028 19.1233 4.12666 20.1604C3.2994 22.2345 3.88376 24.1649 4.55962 25.8594C5.82372 29.0288 7.89807 31.636 8.18115 31.9881L12.7453 41.1472L12.7768 41.2015C13.6329 42.7043 14.9421 43.9938 16.466 45.0596C17.99 46.1255 19.7009 47 21.7112 47H26.3294C28.3393 47 30.0459 46.1253 31.57 45.0596C33.0942 43.9939 34.4074 42.7049 35.2637 41.2015L35.2953 41.1472L39.8594 31.9881C40.1425 31.636 42.2169 29.0288 43.481 25.8594C44.1568 24.1649 44.7412 22.2345 43.9139 20.1604C43.5003 19.1233 42.6317 18.1741 41.5597 17.6365C41.2119 17.4621 40.8433 17.3336 40.4638 17.2249C43.0668 16.554 45.5978 15.7324 48 14.7282L46.2231 10.4539C43.6073 11.5474 40.7961 12.4116 37.875 13.0683V5.31579C37.875 4.03747 36.8405 3 35.5659 3H12.4747ZM10.1656 17.6817C19.1538 19.7027 28.8948 19.7299 37.875 17.831V21.5263C38.7891 21.5263 39.3033 21.6839 39.4941 21.7796C39.6849 21.8753 39.6101 21.8306 39.6294 21.8791C39.6681 21.9761 39.6752 22.9404 39.1965 24.1406C38.2391 26.5411 36.071 29.3421 36.071 29.3421L35.9177 29.5366L32.8148 35.7603C32.3828 34.7458 31.6643 33.849 30.6861 33.0374C29.1186 31.737 26.8332 30.7895 24.0203 30.7895C21.2074 30.7895 18.922 31.737 17.3545 33.0374C16.3763 33.849 15.6578 34.7458 15.2258 35.7603L12.1229 29.5366L11.9696 29.3421C11.9696 29.3421 9.80154 26.5411 8.84412 24.1406C8.36541 22.9404 8.37249 21.9761 8.41116 21.8791C8.43049 21.8306 8.35567 21.8752 8.54646 21.7796C8.73726 21.6839 9.25153 21.5263 10.1656 21.5263V17.6817ZM14.8109 19.2105C13.5201 19.2105 12.4747 20.3886 12.4747 21.8429V23.5255C12.4747 24.9798 13.5201 26.1579 14.8109 26.1579H15.5505C18.6309 26.1579 21.7112 24.2259 21.7112 21.8429C21.7112 20.3886 20.668 19.2105 19.3795 19.2105H14.8109ZM28.5889 19.2105C27.3397 19.2105 26.3294 20.3886 26.3294 21.8429C26.3294 24.2259 29.3106 26.1579 32.2916 26.1579H33.0178C34.267 26.1579 35.2773 24.9798 35.2773 23.5255V21.8429C35.2773 20.3886 34.267 19.2105 33.0178 19.2105H28.5889ZM24.0203 35.4211C25.8256 35.4211 27.0039 35.9908 27.7456 36.6061C28.4872 37.2214 28.6385 38.0539 28.6385 37.7368V40.0526H19.402V37.7368C19.402 38.0539 19.5534 37.2214 20.295 36.6061C21.0367 35.9908 22.2149 35.4211 24.0203 35.4211Z\"/>\n    </svg>\n)\n\n\nexport const Face11 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_3_22)\">\n            <path fill=\"currentColor\"\n                d=\"M6.01251 0C4.0264 0 2.41502 1.6125 2.41502 3.6C2.41502 3.69375 2.40565 3.80625 2.41502 3.9C0.944165 5.775 0.147845 8.2125 0.0166849 10.725C-0.0769988 12.5344 0.204055 14.4938 1.36575 16.125C2.28386 17.4188 3.73597 18.3938 5.48788 18.9C5.03819 20.5313 4.81335 22.2281 4.81335 24C4.81335 29.6156 7.93305 35.3531 11.6336 39C12.3362 40.3406 13.1513 41.5594 14.1069 42.675C16.7394 45.75 20.1964 48 24 48C27.8036 48 31.2606 45.75 33.8931 42.675C34.8768 41.5219 35.7293 40.2469 36.4413 38.85C40.0951 35.1938 43.1866 29.5594 43.1866 24C43.1866 22.2281 42.9618 20.5313 42.5121 18.9C44.264 18.3938 45.7161 17.4188 46.6342 16.125C47.7959 14.4938 48.077 12.5344 47.9833 10.725C47.8522 8.2125 47.0558 5.775 45.585 3.9C45.5943 3.80625 45.585 3.69375 45.585 3.6C45.585 1.6125 43.9736 0 41.9875 0C40.0014 0 38.39 1.6125 38.39 3.6C38.39 5.54063 39.917 7.125 41.8376 7.2C42.5027 8.25 43.1211 9.675 43.1866 10.95C43.2429 11.9625 43.0274 12.8344 42.662 13.35C42.306 13.8563 41.8376 14.2219 40.5635 14.4C37.247 8.67187 31.1107 4.8 24 4.8C16.8893 4.8 10.753 8.67187 7.43652 14.4C6.16241 14.2219 5.69399 13.8563 5.33798 13.35C4.97261 12.8344 4.75714 11.9625 4.81335 10.95C4.87893 9.675 5.49725 8.25 6.16241 7.2C8.08295 7.125 9.61001 5.54063 9.61001 3.6C9.61001 1.6125 7.99863 0 6.01251 0ZM24 9.6C32.085 9.6 38.39 15.9094 38.39 24C38.39 24.9188 38.1651 25.9406 37.8654 27C37.5749 25.8 37.1721 24.6563 36.6662 23.625C36.1228 22.5281 35.4858 21.5156 34.6426 20.7C33.7994 19.8844 32.6377 19.2 31.195 19.2H31.0451C28.2627 19.3875 26.4639 21.2625 25.3491 22.5C24.7963 23.1188 24.356 23.6156 24.0749 23.85C23.9063 23.9906 23.9813 23.925 24 23.925C23.7939 23.7375 23.391 23.2219 22.8758 22.575C21.8452 21.2813 19.9528 19.3688 16.9549 19.2H16.805C15.3623 19.2 14.2006 19.8844 13.3574 20.7C12.5142 21.5156 11.8772 22.5281 11.3338 23.625C10.8279 24.6563 10.4251 25.8 10.1346 27C9.83485 25.9406 9.61001 24.9188 9.61001 24C9.61001 15.9094 15.915 9.6 24 9.6ZM16.805 24.075C17.948 24.1875 18.3414 24.5906 19.1284 25.575C19.5406 26.1 19.9809 26.775 20.7023 27.45C21.4237 28.125 22.6509 28.8 24 28.8C25.3584 28.8 26.492 28.1531 27.2228 27.525C27.9535 26.8969 28.45 26.2781 28.9466 25.725C29.9021 24.6656 30.5017 24.1594 31.2699 24.075C31.2512 24.075 31.2137 24.0938 31.2699 24.15C31.551 24.4219 31.9632 24.9938 32.3192 25.725C33.0406 27.1875 33.5933 29.3438 33.5933 31.2C33.5933 34.0781 32.2068 37.2 30.2207 39.525C28.2346 41.85 25.7144 43.2 24 43.2C22.2856 43.2 19.7654 41.85 17.7793 39.525C15.7932 37.2 14.4067 34.0781 14.4067 31.2C14.4067 29.3438 14.9594 27.1875 15.6808 25.725C16.0368 24.9938 16.449 24.4219 16.7301 24.15C16.8987 23.9906 16.8144 24.075 16.805 24.075ZM19.2033 28.8C17.8824 28.8 16.805 29.8781 16.805 31.2C16.805 32.5219 17.8824 33.6 19.2033 33.6C20.5243 33.6 21.6017 32.5219 21.6017 31.2C21.6017 29.8781 20.5243 28.8 19.2033 28.8ZM28.7967 28.8C27.4757 28.8 26.3983 29.8781 26.3983 31.2C26.3983 32.5219 27.4757 33.6 28.7967 33.6C30.1176 33.6 31.195 32.5219 31.195 31.2C31.195 29.8781 30.1176 28.8 28.7967 28.8Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_3_22\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face12 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M24 0C15.1962 0 2 4.8 2 24V43.2H13.2292C16.4089 46.3219 20.3333 47.7563 24 48C27.6667 48 31.5911 46.3219 34.7708 43.2H46V24C45.7517 5.27813 32.8038 0 24 0ZM15.9028 7.65C17.612 8.60625 20.8203 9.6 24 9.6C27.1797 9.6 30.3689 8.67187 32.3264 7.95L32.5556 8.175C35 10.8188 36.4514 14.8781 36.4514 19.2C36.4514 19.6781 36.2222 22.8 36.2222 22.8H38.6667C39.6406 22.8 41.1111 24.4781 41.1111 26.4C41.1111 27.3563 39.6788 28.5563 38.2083 28.8L36.4514 29.025L36.2222 30.75C34.7517 38.6719 28.8889 42.9563 24 43.2C19.1111 42.9563 13.487 38.6719 11.7778 30.75L11.5486 29.025L9.79167 28.8C8.32118 28.5563 6.88889 27.3563 6.88889 26.4C6.88889 24.7219 7.8533 23.0438 9.5625 22.8L12.0069 22.575C12.0069 22.575 11.7778 19.4438 11.7778 19.2C11.7778 14.6438 12.9809 10.5938 15.6736 7.95L15.9028 7.65ZM29.5 21.675C28.0868 21.8438 26.6736 22.8 26.6736 22.8C26.6736 22.8 27.638 25.4531 29.3472 26.175C31.0564 26.8969 33.5486 25.2 33.5486 25.2C33.5486 25.2 32.5842 22.5469 30.875 21.825C30.4453 21.6469 29.9679 21.6188 29.5 21.675ZM17.8889 21.75C17.6406 21.7594 17.3733 21.7688 17.125 21.825C15.1675 22.3031 14.4514 25.2 14.4514 25.2C14.4514 25.2 16.6953 26.6531 18.6528 26.175C20.6102 25.6969 21.3264 22.8 21.3264 22.8C21.3264 22.8 19.6172 21.7031 17.8889 21.75ZM19.875 26.4C19.875 28.3219 18.1372 31.2 16.6667 31.2V33.6C18.8628 33.6 21.5556 29.7563 21.5556 26.4H19.875ZM26.4444 26.4C26.4444 29.7563 29.1372 33.6 31.3333 33.6V31.2C30.1111 31.2 28.125 28.3219 28.125 26.4H26.4444ZM19.1111 36V38.4H28.8889V36H19.1111Z\"/>\n    </svg>\n)\n\n\nexport const Face13 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M29.958 22.7193C29.5181 21.4124 28.8581 19.8851 27.9782 18.7964C26.4383 16.6167 24.4585 14.8735 22.2586 14.2189C22.6986 13.7847 24.8984 13.0909 27.0983 13.0909C32.2679 13.0909 34.9495 15.0545 36.1594 16.3484L36.9975 17.4545C36.9975 8.72727 30.398 0 17.199 0C6.19983 0 4 6.54545 4 6.54545L4.08579 6.552C4.0594 6.56509 4 6.59127 4 6.59127C4 6.59127 10.5995 10.9505 10.5995 17.4873C10.5995 17.4873 4 21.8465 4 28.3833C4 41.4589 12.7993 41.4589 12.7993 41.4589H14.9992C21.3787 47.5636 30.398 48 30.398 48V39.2815C42.2771 38.1927 46.6768 26.8582 47.9967 17.4873C48.2167 17.4895 37.4375 20.5396 29.958 22.7193ZM18.2989 18.36C19.8388 17.2713 22.4786 18.5782 24.4585 21.4102C26.4383 24.0262 26.6583 27.0764 25.1184 28.1673C24.4189 28.6625 23.4883 28.6407 22.5006 28.2284C22.6436 28.1782 22.7866 28.1236 22.9142 28.0451C24.1571 27.2684 24.0845 25.3156 22.7514 23.6836C21.4183 22.0516 19.3306 21.36 18.0877 22.1367C17.9294 22.2349 17.8546 22.3985 17.7402 22.5316C17.1352 20.6967 17.2386 19.1105 18.2989 18.36ZM29.2981 35.3585C23.7985 35.7949 23.7985 33.8335 23.7985 33.8335L19.3988 33.6153C19.3988 36.4495 22.2586 38.6269 25.9983 39.2815C25.9983 40.8065 25.9983 42.1156 25.9983 42.1156C22.4786 41.8975 19.3988 39.2815 17.199 37.104C14.1192 38.1927 8.83964 36.0153 10.5995 30.5651C11.4794 28.1673 13.2393 27.0785 14.7792 26.6422C14.9992 26.8604 15.2192 27.2967 15.4391 27.5149C17.639 30.7833 20.9387 32.7447 24.0185 32.7447C25.3384 32.7447 26.6583 32.3084 27.7582 31.656C28.8581 30.7833 29.7381 29.9127 30.178 28.6058C34.5777 27.0807 40.5172 25.1193 42.2771 24.2465C38.5374 33.3971 33.2578 35.1425 29.2981 35.3585Z\"/>\n    </svg>\n)\n\n\nexport const Face14 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\" d=\"M22 0V4.55469C21.2066 5.01591 20.5874 5.7313 20.2617 6.60156C15.4694 8.17594 12 12.6857 12 18V19.1211C9.62494 20.5137 8 23.0667 8 26C8 28.9333 9.62494 31.4863 12 32.8789V44H16V42C16 39.8 17.8 38 20 38H28C30.2 38 32 39.8 32 42V44H36V32.8789C38.3751 31.4863 40 28.9333 40 26C40 23.0667 38.3751 20.5137 36 19.1211V18C36 12.6857 32.5306 8.17594 27.7383 6.60156C27.4126 5.7313 26.7934 5.01591 26 4.55469V0H22ZM16 22H32C34.2333 22 36 23.7667 36 26C36 28.2333 34.2333 30 32 30H16C13.7667 30 12 28.2333 12 26C12 23.7667 13.7667 22 16 22ZM16 24V28H20V24H16ZM28 24V28H32V24H28Z\"/>\n    </svg>\n)\n\n\nexport const Face15 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_3_30)\">\n            <path fill=\"currentColor\"\n                d=\"M24 0L22.8 0.668731C22.3219 0.910218 13.9219 5.88855 9.6 12.7802V7.57895C9.6 3.5387 6.47813 0.44582 2.4 0.44582V5.20124C3.84375 5.20124 4.8 6.14861 4.8 7.57895V8.02477C4.07813 7.78328 3.12187 7.57895 2.4 7.57895V12.3344C3.6 12.3344 4.78125 13.7926 5.025 14.2663C5.26875 15.9288 5.79375 17.3313 6.75 18.2786C6.99375 18.5201 7.18125 18.7245 7.425 18.7245C7.18125 19.4396 7.2 21.6037 7.2 21.8452C7.2 34.9226 5.27813 42.0557 0 48H48C42.7219 42.0557 40.8 34.9226 40.8 21.8452C40.8 21.6037 40.8188 19.4396 40.575 18.7245C40.8188 18.483 41.0063 18.5201 41.25 18.2786C42.2063 17.3313 42.7313 15.9288 42.975 14.2663C43.2188 13.7926 44.4 12.3344 45.6 12.3344V7.57895C44.8781 7.57895 43.9219 7.78328 43.2 8.02477V7.57895C43.2 6.14861 44.1563 5.20124 45.6 5.20124V0.44582C41.5219 0.44582 38.4 3.5387 38.4 7.57895V12.7802C34.0781 5.64706 25.6781 0.910218 25.2 0.668731L24 0ZM24 5.64706C27.8438 8.02477 34.8188 13.7647 35.775 19.4675H12.225C13.1813 13.7647 20.1563 8.02477 24 5.64706ZM12.225 24.2229H36C35.0438 33.9752 30.9563 43.2446 24 43.2446C17.2781 43.2446 12.9469 33.9752 12.225 24.2229ZM15.15 26.6006C15.15 26.6006 15.3563 29.452 16.8 30.1672C20.1563 31.5975 21.6 28.2353 21.6 28.2353L15.15 26.6006ZM32.625 26.6006L26.4 28.2353C26.4 28.2353 28.0781 32.0712 31.2 30.1672C32.6438 29.2198 32.625 26.6006 32.625 26.6006Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_3_30\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face16 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M24 0C18.6241 0 13.4583 1.94035 9.79167 5.8022C6.37327 9.41915 4.44444 14.2229 4.44444 19.2904V20.27C2 22.2009 2 25.3375 2 26.2983C2 29.4349 4.4158 32.044 7.34722 33.0047C9.79167 42.405 17.6406 48 24 48C30.3594 48 38.2083 42.405 40.6528 33.0047C43.5842 32.2794 46 29.6609 46 26.5243C46 25.3187 46 22.427 43.5556 20.4961V19.5165C43.5556 14.449 41.6267 9.64521 38.2083 6.02826C34.5417 1.93093 29.3759 0 24 0ZM16.6667 12.0565C25.2222 22.9074 32.8038 9.39089 38.6667 23.1334C38.6667 23.1334 41.5981 23.8681 41.1111 26.5243C40.6241 29.8964 36.6806 29.1617 36.6806 29.1617L36.2222 30.8948C34.513 39.0895 27.9149 43.4035 24 43.4035C20.0851 43.4035 13.487 39.0895 11.7778 30.8948L11.5486 29.1617C11.5486 29.1617 7.11806 29.416 7.11806 26.5243C7.11806 23.3878 9.5625 23.1334 9.5625 23.1334L11.7778 24.113C11.7778 19.0455 13.7352 13.2622 16.6667 12.0565ZM17.8889 21.7017C15.8646 21.7017 14.2222 23.3218 14.2222 25.3187C14.2222 27.3155 15.8646 28.9356 17.8889 28.9356C19.9132 28.9356 21.5556 27.3155 21.5556 25.3187C21.5556 23.3218 19.9132 21.7017 17.8889 21.7017ZM30.1111 21.7017C28.0868 21.7017 26.4444 23.3218 26.4444 25.3187C26.4444 27.3155 28.0868 28.9356 30.1111 28.9356C32.1354 28.9356 33.7778 27.3155 33.7778 25.3187C33.7778 23.3218 32.1354 21.7017 30.1111 21.7017Z\"/>\n    </svg>\n)\n\n\nexport const Face17 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M24 0C14.7092 0 8.34028 6.01875 7.11806 15.375L5.66667 14.625L2 12.975V24C2 28.8 4.4158 31.95 7.34722 33.15C9.79167 42.75 17.4019 47.7563 24 48C30.5981 47.7563 38.2083 42.75 40.6528 33.15C43.5842 31.95 46 28.8 46 24V12.975L42.5625 14.625L41.1111 15.375C39.6406 6.01875 33.2908 0 24 0ZM14.4514 9.6H33.7778C35.487 12.2438 36.4514 15.8438 36.4514 19.2V21.6H38.8958C39.3828 21.6 39.6311 21.5813 41.3403 20.625C41.092 21.825 41.1111 23.0438 41.1111 24C41.1111 27.3563 39.6788 28.5563 38.2083 28.8L36.4514 29.025L36.2222 30.75C34.513 38.6719 28.8889 42.9563 24 43.2C19.1111 42.9563 13.2483 38.6719 11.7778 30.75L11.5486 29.025L9.79167 28.8C8.32118 28.5563 6.88889 27.3563 6.88889 24V20.625C8.59809 21.5813 8.84635 21.6 9.33333 21.6H11.7778V19.2C11.7778 15.8438 12.4939 12.2438 14.4514 9.6ZM14.2222 14.4C14.2222 14.4 15.4444 19.2 21.5556 19.2V16.8C16.9149 16.8 14.2222 14.4 14.2222 14.4ZM33.7778 14.4C33.7778 14.4 31.0851 16.8 26.4444 16.8V19.2C32.5556 19.2 33.7778 14.4 33.7778 14.4ZM17.8889 21.6C15.8646 21.6 14.2222 23.2125 14.2222 25.2C14.2222 27.1875 15.8646 28.8 17.8889 28.8C19.9132 28.8 21.5556 27.1875 21.5556 25.2C21.5556 23.2125 19.9132 21.6 17.8889 21.6ZM30.1111 21.6C28.0868 21.6 26.4444 23.2125 26.4444 25.2C26.4444 27.1875 28.0868 28.8 30.1111 28.8C32.1354 28.8 33.7778 27.1875 33.7778 25.2C33.7778 23.2125 32.1354 21.6 30.1111 21.6Z\"/>\n    </svg>\n)\n\n\nexport const Face18 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_3_36)\">\n            <path fill=\"currentColor\"\n                d=\"M24.0387 0C16.1586 0 10.4421 4.8 8.29719 12C3.5225 20.6438 0.88337 26.6531 0.165302 30.975C-0.310303 34.8188 0.146652 40.0781 2.77646 43.2C4.2126 44.8781 6.15231 45.6 8.29719 45.6H8.52101C11.1508 45.6 13.5661 43.9313 15.2354 41.775C17.1472 43.4531 19.2641 44.8969 21.6514 45.375V48H26.4261V45.375C29.0559 44.8969 30.9303 43.6969 32.8421 41.775C34.5114 43.9313 36.9267 45.6 39.5565 45.6C41.7014 45.6 43.3427 44.8781 44.7788 43.2C48.1173 39.8438 48.1546 33.6188 47.9122 30.975C47.6697 26.8969 45.0213 20.6719 40.0041 12.75C38.0924 5.07187 32.152 0 24.0387 0ZM24.0387 4.8C31.2008 4.8 35.9755 10.3031 35.9755 18.225C35.9755 26.3813 32.8701 37.95 26.4261 40.35V36H21.6514V40.35C15.2074 37.95 12.102 26.3813 12.102 18.225C12.102 10.3031 16.8767 4.8 24.0387 4.8ZM14.4894 16.8C14.4894 16.8 15.683 21.6 21.6514 21.6V19.2C17.1192 19.2 14.4894 16.8 14.4894 16.8ZM33.5881 16.8C33.5881 16.8 30.9583 19.2 26.4261 19.2V21.6C32.3944 21.6 33.5881 16.8 33.5881 16.8ZM7.77496 23.25C8.25057 28.05 9.69603 33.3281 12.3258 37.65C11.1322 39.5719 9.47221 40.8 8.52101 40.8C7.80294 40.8 7.05689 40.5469 6.58129 39.825C5.14515 38.3813 4.46439 34.7813 4.93999 31.425C5.18246 29.5031 6.10568 26.85 7.77496 23.25ZM40.5263 23.25C42.1956 26.6063 43.1375 29.5031 43.1375 31.425C43.38 35.2688 42.6899 38.6063 41.4962 40.05C41.0206 40.5281 40.5077 40.8 39.5565 40.8C38.6053 40.8 36.9267 39.5719 35.9755 37.65C38.3628 33.3281 39.8083 28.05 40.5263 23.25ZM19.2641 24C17.8279 24 16.8767 24.9563 16.8767 26.4C16.8767 27.8438 17.8279 28.8 19.2641 28.8C20.7002 28.8 21.6514 27.8438 21.6514 26.4C21.6514 24.9563 20.7002 24 19.2641 24ZM28.8134 24C27.3773 24 26.4261 24.9563 26.4261 26.4C26.4261 27.8438 27.3773 28.8 28.8134 28.8C30.2496 28.8 31.2008 27.8438 31.2008 26.4C31.2008 24.9563 30.2496 24 28.8134 24ZM21.6514 31.2C16.4011 31.2 16.8767 36 16.8767 36C16.8767 36 17.5948 33.6 21.6514 33.6V31.2ZM26.4261 31.2V33.6C30.4827 33.6 31.2008 36 31.2008 36C31.2008 36 31.6764 31.2 26.4261 31.2Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_3_36\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face19 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M23.5165 0C16.5851 0 9.65379 4.57143 9.65379 13.7143V14.5179C6.93373 15.809 5.03291 18.5404 5.03291 21.7143C5.03291 23.952 5.97669 25.974 7.48324 27.4286H7.34335C7.03719 27.4243 6.73322 27.4802 6.44911 27.5932C6.165 27.7061 5.90641 27.8738 5.68837 28.0865C5.47034 28.2992 5.2972 28.5526 5.17903 28.832C5.06085 29.1115 5 29.4114 5 29.7143C5 30.0172 5.06085 30.3171 5.17903 30.5965C5.2972 30.876 5.47034 31.1294 5.68837 31.3421C5.90641 31.5548 6.165 31.7224 6.44911 31.8354C6.73322 31.9483 7.03719 32.0043 7.34335 32H9.79368C8.28714 33.4546 7.34335 35.4765 7.34335 37.7143V41.1429H9.88845C10.4737 44.9861 13.6972 48 17.7403 48H21.206H37.3791V34.2857C38.6499 34.2857 39.8054 33.7832 40.6372 32.9375C41.4921 32.1146 42 30.9714 42 29.7143C42 28.4571 41.4921 27.3139 40.6372 26.4911C39.8054 25.6454 38.6499 25.1429 37.3791 25.1429V13.7143C37.3791 4.57143 30.4478 0 23.5165 0ZM13.1195 16C13.5604 16 13.9881 16.0582 14.401 16.1518C14.4965 16.1731 14.5872 16.2062 14.6808 16.2321C14.9956 16.3206 15.2975 16.4338 15.5878 16.5714C15.6819 16.6157 15.7764 16.6562 15.8676 16.7054C15.8904 16.7177 15.9082 16.7374 15.9308 16.75C14.8377 18.1946 14.2747 19.9509 14.2747 21.7143C14.2747 23.4809 14.8381 25.2415 15.9353 26.6875C15.1016 27.1509 14.15 27.4286 13.1195 27.4286C9.91526 27.4286 7.34335 24.8842 7.34335 21.7143C7.34335 21.5047 7.38459 21.3063 7.40653 21.1027C7.52725 21.6025 7.81467 22.0474 8.2224 22.3657C8.63013 22.684 9.13439 22.8572 9.65379 22.8571C10.2666 22.8571 10.8542 22.6163 11.2875 22.1877C11.7208 21.759 11.9642 21.1776 11.9642 20.5714C11.9642 19.9652 11.7208 19.3838 11.2875 18.9552C10.8542 18.5265 10.2666 18.2857 9.65379 18.2857C9.10273 18.2856 8.56978 18.4804 8.1511 18.8348C8.55945 18.1436 9.09853 17.5453 9.75307 17.0804C9.87944 16.99 10.015 16.9108 10.1502 16.8304C10.3071 16.7372 10.4668 16.6498 10.633 16.5714C10.7746 16.5046 10.9181 16.4397 11.0662 16.3839C11.2576 16.3123 11.4567 16.2569 11.6574 16.2054C11.7936 16.1699 11.9283 16.1284 12.068 16.1027C12.4095 16.0411 12.7592 16 13.1195 16ZM22.3612 16C25.5496 16 28.1373 18.56 28.1373 21.7143C28.1373 24.8686 25.5496 27.4286 22.3612 27.4286C20.4667 27.4286 18.8031 26.5371 17.7403 25.1429C17.7242 25.1641 17.7026 25.1799 17.6862 25.2009C16.9776 24.2071 16.5851 22.9754 16.5851 21.7143C16.5851 20.4588 16.9747 19.2327 17.6772 18.2411C17.696 18.2654 17.722 18.2834 17.7403 18.308C18.78 16.9137 20.4667 16 22.3612 16ZM21.206 18.2857C20.5932 18.2857 20.0056 18.5265 19.5723 18.9552C19.139 19.3838 18.8956 19.9652 18.8956 20.5714C18.8956 21.1776 19.139 21.759 19.5723 22.1877C20.0056 22.6163 20.5932 22.8571 21.206 22.8571C21.8188 22.8571 22.4064 22.6163 22.8397 22.1877C23.273 21.759 23.5165 21.1776 23.5165 20.5714C23.5165 19.9652 23.273 19.3838 22.8397 18.9552C22.4064 18.5265 21.8188 18.2857 21.206 18.2857ZM15.4299 32H16.5851H21.206C24.4102 32 26.9821 34.5444 26.9821 37.7143V40C26.9821 43.1699 24.4102 45.7143 21.206 45.7143H17.7403C14.989 45.7143 13.0336 43.68 12.4426 41.1429H21.206V38.8571H9.65379V37.7143C9.65379 34.5444 12.2257 32 15.4299 32Z\"/>\n    </svg>\n)\n\n\nexport const Face20 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_3_40)\">\n            <path fill=\"currentColor\"\n                d=\"M17.3784 0C10.4558 0 4.60031 4.608 2.71271 10.9091H45.2873C43.3997 4.608 37.542 0 30.6216 0H24.0598H23.9402H17.3784ZM2.06764 15.2727V25.304C0.753099 26.5214 0 28.3042 0 30.294C0 32.1595 0.7707 33.9519 2.06337 35.1563L4.31043 37.3977V37.4105L20.0441 29.3097C22.4632 28.0704 25.4173 28.0769 27.8277 29.3097L43.6255 37.4574L45.8768 35.2074C47.2242 33.9528 48 32.1595 48 30.294C48 28.3042 47.2469 26.5214 45.9324 25.304V15.2727H2.06764ZM8.62941 19.6364H21.7529L13.6832 25.6875C12.4889 26.5842 10.7679 26.0467 10.2955 24.6307L8.62941 19.6364ZM26.1274 19.6364H39.251L37.5849 24.6307C37.1125 26.0445 35.3915 26.582 34.1972 25.6875L26.1274 19.6364ZM23.9402 32.7358C23.2889 32.7358 22.6383 32.8885 22.0477 33.1918L5.68174 41.6122L6.13457 42.3537C8.81395 47.0402 11.9187 48 15.7508 48H17.3784C20.2306 48 22.6609 46.176 23.5643 43.6364H24.3161C25.2195 46.176 27.654 48 30.5062 48H32.1296C35.9595 48 39.0608 47.0411 41.7074 42.4091L42.1858 41.625L25.8241 33.1875C25.2401 32.8864 24.5914 32.7358 23.9402 32.7358Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_3_40\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face21 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_3_42)\">\n            <path fill=\"currentColor\"\n                d=\"M3 0C1.344 0 0 1.344 0 3C0 4.656 1.344 6 3 6C3.352 6 3.686 5.92841 4 5.81641V14L5.92188 15.9219C7.94187 14.2219 10.6 12.62 14 11.5V8L5.52734 4.60547C5.82334 4.13947 6 3.592 6 3C6 1.344 4.656 0 3 0ZM45 0C43.344 0 42 1.344 42 3C42 3.592 42.1767 4.13947 42.4727 4.60547L34 8V11.5C37.4 12.62 40.0581 14.2219 42.0781 15.9219L44 14V5.81641C44.314 5.92841 44.648 6 45 6C46.656 6 48 4.656 48 3C48 1.344 46.656 0 45 0ZM24 14C23.64 14 23.2814 13.9995 22.9414 14.0195C22.5814 14.0195 22.2384 14.0381 21.8984 14.0781C18.7984 14.2581 16.18 14.9017 14 15.7617C11.9 16.6017 10.2003 17.6392 8.82031 18.6992C7.76031 19.5192 6.91828 20.3802 6.23828 21.1602C6.19828 21.1802 6.17969 21.2183 6.17969 21.2383C4.09969 23.9983 3 27.1609 3 30.4609C3 35.7609 5.84031 40.4997 10.3203 43.6797C13.6003 46.3397 18.46 48 24 48C29.54 48 34.3997 46.3397 37.6797 43.6797C42.1597 40.4997 45 35.7609 45 30.4609C45 27.2209 43.9609 24.0984 41.9609 21.3984C41.9609 21.3984 41.9614 21.3794 41.9414 21.3594C41.2414 20.5194 40.3197 19.5992 39.1797 18.6992C37.7997 17.6392 36.1 16.6017 34 15.7617C31.58 14.8017 28.6381 14.1395 25.0781 14.0195C24.7181 13.9995 24.36 14 24 14ZM24 17.5C26.24 17.5 28 19.04 28 21C28 22.96 26.24 24.5 24 24.5C21.76 24.5 20 22.96 20 21C20 19.04 21.76 17.5 24 17.5ZM15.5781 28.6602L23.9414 33.6016L32.8984 28.8984C36.1184 30.5384 38 32.9409 38 35.4609C38 40.0809 31.58 44 24 44C16.42 44 10 40.0809 10 35.4609C10 32.8409 12.1181 30.3002 15.5781 28.6602ZM16 32C14.5 32 13.3398 33.32 13.3398 35C13.3398 36.68 14.5 38 16 38C17.5 38 18.6602 36.68 18.6602 35C18.6602 33.32 17.5 32 16 32ZM32 32C30.5 32 29.3398 33.32 29.3398 35C29.3398 36.68 30.5 38 32 38C33.5 38 34.6602 36.68 34.6602 35C34.6602 33.32 33.5 32 32 32ZM24 36.6602C23.4749 36.6655 22.974 36.809 22.6056 37.0597C22.2371 37.3104 22.0305 37.6482 22.0305 38C22.0305 38.3518 22.2371 38.6896 22.6056 38.9403C22.974 39.191 23.4749 39.3345 24 39.3398C24.5251 39.3345 25.026 39.191 25.3944 38.9403C25.7629 38.6896 25.9695 38.3518 25.9695 38C25.9695 37.6482 25.7629 37.3104 25.3944 37.0597C25.026 36.809 24.5251 36.6655 24 36.6602V36.6602Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_3_42\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face22 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M4.95 5C4.95 5 3.675 7.17831 3.675 10.8824C3.675 13.3456 4.2375 14.7059 4.65 15.3676C1.7625 18.318 0 22.2886 0 27.4265C0 40.5882 8.46563 45 24 45C39.5344 45 48 40.5882 48 27.4265C48 22.1048 46.3313 18.1158 43.575 15.2206C44.2594 13.2077 45.0469 9.40257 43.125 5C37.3969 5 32.5688 9.32904 32.4 9.48529C29.7281 8.90625 26.9063 8.60294 24 8.60294C21.0281 8.60294 18.1031 8.97059 15.375 9.63235C11.5406 5.89154 6.92813 5 4.95 5ZM31.725 23.8235C33.1688 23.8051 34.5281 23.9522 35.7 24.3382C38.8313 25.3768 40.8 28.4007 40.8 31.7647C40.7906 41.0938 35.9906 42.6471 23.7 42.6471C14.5594 42.6471 7.125 40.9651 7.125 32.0588C7.125 28.6581 8.925 26.7096 10.2 25.5147C13.0031 22.886 17.4188 24.1912 23.7 24.1912C26.55 24.1912 29.3156 23.8511 31.725 23.8235ZM14.4 28.5294C13.0781 28.5294 12 30.1103 12 32.0588C12 34.0074 13.0781 35.5882 14.4 35.5882C15.7219 35.5882 16.8 34.0074 16.8 32.0588C16.8 30.1103 15.7219 28.5294 14.4 28.5294ZM33.6 28.5294C32.2781 28.5294 31.2 30.1103 31.2 32.0588C31.2 34.0074 32.2781 35.5882 33.6 35.5882C34.9219 35.5882 36 34.0074 36 32.0588C36 30.1103 34.9219 28.5294 33.6 28.5294Z\"/>\n    </svg>\n)\n\n\nexport const Face23 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M14 0C13.7156 0 13.4311 0.106875 13.2144 0.319602C12.7811 0.745057 12.7811 1.43676 13.2144 1.86222L16.1267 4.72159C12.8202 7.10382 10.6667 10.9369 10.6667 15.2727H37.3333C37.3333 10.9369 35.1798 7.10382 31.8733 4.72159L34.7856 1.86222C35.2189 1.43458 35.2189 0.747239 34.7856 0.319602C34.3523 -0.105852 33.6477 -0.105852 33.2144 0.319602L29.9201 3.55398C28.1347 2.68268 26.1293 2.18182 24 2.18182C21.8707 2.18182 19.8653 2.68268 18.0799 3.55398L14.7856 0.319602C14.5689 0.106875 14.2844 0 14 0ZM17.3333 8.72727H19.5556V10.9091H17.3333V8.72727ZM28.4444 8.72727H30.6667V10.9091H28.4444V8.72727ZM6.22222 17.4545C4.99556 17.4545 4 18.432 4 19.6364V32.7273C4 33.9316 4.99556 34.9091 6.22222 34.9091C7.44889 34.9091 8.44444 33.9316 8.44444 32.7273V19.6364C8.44444 18.432 7.44889 17.4545 6.22222 17.4545ZM10.6667 17.4545V34.9091C10.6667 36.1135 11.6622 37.0909 12.8889 37.0909H15.1111V44.7273C15.1111 46.5338 16.6044 48 18.4444 48C20.2844 48 21.7778 46.5338 21.7778 44.7273V37.0909H26.2222V44.7273C26.2222 46.5338 27.7156 48 29.5556 48C31.3956 48 32.8889 46.5338 32.8889 44.7273V37.0909H35.1111C36.3378 37.0909 37.3333 36.1135 37.3333 34.9091V17.4545H10.6667ZM41.7778 17.4545C40.5511 17.4545 39.5556 18.432 39.5556 19.6364V32.7273C39.5556 33.9316 40.5511 34.9091 41.7778 34.9091C43.0044 34.9091 44 33.9316 44 32.7273V19.6364C44 18.432 43.0044 17.4545 41.7778 17.4545Z\"/>\n    </svg>\n)\n\n\nexport const Face24 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_3_48)\">\n            <path fill=\"currentColor\" d=\"M24 0C10.7719 0 0 10.7719 0 24C0 37.2281 10.7719 48 24 48H48L39.6 42.225C44.7281 37.8188 48 31.2656 48 24C48 10.7719 37.2281 0 24 0ZM24 4.8C34.6313 4.8 43.2 13.3688 43.2 24C43.2 34.6313 34.6313 43.2 24 43.2C13.3688 43.2 4.8 34.6313 4.8 24C4.8 13.3688 13.3688 4.8 24 4.8ZM15.6 14.4C13.6125 14.4 12 16.0125 12 18C12 19.9875 13.6125 21.6 15.6 21.6C17.5875 21.6 19.2 19.9875 19.2 18C19.2 16.0125 17.5875 14.4 15.6 14.4ZM32.4 14.4C30.4125 14.4 28.8 16.0125 28.8 18C28.8 19.9875 30.4125 21.6 32.4 21.6C34.3875 21.6 36 19.9875 36 18C36 16.0125 34.3875 14.4 32.4 14.4ZM12.3 26.4C13.3313 31.8656 18.0844 36 23.85 36C29.6156 36 34.4438 31.8656 35.475 26.4H12.3Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_3_48\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face25 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_3_50)\">\n            <path fill=\"currentColor\"\n                d=\"M2.4 0C1.78125 0 1.17187 0.234374 0.703126 0.703126C-0.234374 1.64063 -0.234374 3.15937 0.703126 4.0875L2.60625 6L0.703126 7.9125C-0.234374 8.84063 -0.234374 10.3594 0.703126 11.2969C1.64063 12.2344 3.15937 12.2344 4.0875 11.2969L5.25 10.1344L7.1625 12.375C5.6625 15.1125 4.8 18.2625 4.8 21.6C4.8 24.8344 5.625 28.0219 7.2 30.8625V33.6C7.2 34.8375 7.54687 35.9813 8.1 37.0031L0 45.6C4.8 44.8031 9.36563 43.1156 13.5188 40.7156C13.8094 40.7438 14.1 40.8 14.4 40.8C14.4 44.7656 17.6344 48 21.6 48H26.4C30.3656 48 33.6 44.7656 33.6 40.8C33.9 40.8 34.1906 40.7438 34.4813 40.7156C38.6344 43.1156 43.2 44.8031 48 45.6L39.9 37.0031C40.4531 35.9813 40.8 34.8375 40.8 33.6V32.3344C42.8906 34.275 45.6 36 45.6 36V33.45C45.6 30.3 48 29.4188 48 26.4C48 20.25 43.0969 16.9219 42.5063 16.5469C42.1031 15.0844 41.55 13.6781 40.8375 12.375L42.75 10.1344L43.9125 11.2969C44.8406 12.2344 46.3594 12.2344 47.2969 11.2969C48.2344 10.3594 48.2344 8.84063 47.2969 7.9125L45.3844 6L47.2969 4.0875C48.2344 3.15937 48.2344 1.64063 47.2969 0.703126C46.3594 -0.234374 44.8406 -0.234374 43.9125 0.703126L42 2.60625L40.1719 0.778126C39.2344 -0.159374 37.7156 -0.159374 36.7781 0.778126C35.8406 1.71563 35.8406 3.24375 36.7781 4.17187L37.9125 5.30625L36.375 6.94687C33.0375 4.11563 28.7156 2.4 24 2.4C19.2844 2.4 14.9625 4.11563 11.625 6.94687L10.0875 5.30625L11.2219 4.17187C12.1594 3.24375 12.1594 1.71563 11.2219 0.778126C10.2844 -0.159374 8.76563 -0.159374 7.82813 0.778126L6 2.60625L4.0875 0.703126C3.62813 0.234374 3.00937 0 2.4 0ZM24 7.2C29.25 7.2 33.8438 10.0313 36.3563 14.2406C33.5531 13.1063 29.4469 12 24 12C18.5531 12 14.4469 13.1063 11.6438 14.2406C14.1563 10.0313 18.75 7.2 24 7.2ZM9.6 21.6H38.4C38.4 24.1875 37.6875 26.7375 36.3375 28.9875L36 29.55V33.6C36 34.9219 34.9219 36 33.6 36H28.8V40.8C28.8 42.1219 27.7219 43.2 26.4 43.2H21.6C20.2781 43.2 19.2 42.1219 19.2 40.8V36H14.4C13.0781 36 12 34.9219 12 33.6V29.55L11.6625 28.9875C10.3125 26.7375 9.6 24.1875 9.6 21.6ZM18 24C16.0125 24 14.4 25.6125 14.4 27.6C14.4 29.5875 16.0125 31.2 18 31.2C19.9875 31.2 21.6 29.5875 21.6 27.6C21.6 25.6125 19.9875 24 18 24ZM30 24C28.0125 24 26.4 25.6125 26.4 27.6C26.4 29.5875 28.0125 31.2 30 31.2C31.9875 31.2 33.6 29.5875 33.6 27.6C33.6 25.6125 31.9875 24 30 24ZM21.6 33.6V38.4H26.4V33.6H21.6Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_3_50\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face26 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\" d=\"M46 28.6488C40.6756 28.6488 36.3158 30.5858 36.3158 35.9055C30.9914 35.9055 24.2105 30.5858 24.2105 23.811C24.2105 21.1465 25.4211 19.4551 26.6316 18.9732C25.1752 18.9732 23 15.5906 24.2105 9.29764C25.6669 14.863 28.5703 16.5543 31.4737 16.5543C38.9827 16.5543 46 10.0252 46 2.04094C46 2.04094 35.5876 -2.55118 21.7895 2.04094C19.3684 2.7685 15.2545 4.70551 12.3512 9.54331C6.29852 10.5071 0 15.3449 0 21.3921C2.90337 24.7748 8.2278 27.9213 11.6229 28.6488C14.7722 35.6598 22.0354 41.2252 36.3158 40.7433C36.3158 44.8535 40.6756 48 46 48C46 42.6803 45.0354 38.3244 43.5789 38.3244C45.0354 38.3244 46 35.4236 46 28.6488ZM33.8947 2.04094C35.3512 2.04094 36.3158 3.00472 36.3158 4.45984C36.3158 5.91496 35.3512 6.87874 33.8947 6.87874C32.4383 6.87874 31.4737 5.91496 31.4737 4.45984C31.4737 3.00472 32.4383 2.04094 33.8947 2.04094Z\"/>\n    </svg>\n)\n\n\nexport const Face27 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M12.7074 6.00484C11.6212 6.04424 10.5216 6.32825 9.45597 6.9653C6.6436 8.64846 4.86549 11.2428 4.45313 14.2648C4.18254 16.2447 4.52195 18.2656 5.39915 20.1237C2.27252 23.3107 0 26.5235 0 28.9338C0 35.8855 18.4582 44 24 44C29.5418 44 48 35.8855 48 28.9338C48 26.5235 45.7275 23.3107 42.6009 20.1237C43.4763 18.2671 43.8129 16.2429 43.5426 14.2648C43.1303 11.2428 41.3521 8.65283 38.5398 6.96967C34.3978 4.49245 29.7548 7.34721 27.4219 9.18747C26.0545 8.59494 24.8649 8.23574 24 8.23574C23.1362 8.23574 21.9475 8.592 20.5824 9.18311C18.8506 7.81511 15.8491 5.89086 12.7074 6.00484ZM13.0227 10.4754C14.6722 10.4754 16.6145 11.6782 17.9105 12.7019C16.9723 14.4924 14.6822 17.7041 9.87784 19.1414C8.97893 17.8136 8.57997 16.3108 8.77415 14.8891C9.00324 13.2261 10.0009 11.8215 11.6591 10.829C12.0715 10.5809 12.534 10.4754 13.0227 10.4754ZM34.8281 10.4841C35.3714 10.4587 35.8871 10.5536 36.3409 10.8246C37.9991 11.8171 38.9989 13.2217 39.2259 14.8848C39.42 16.3064 39.0253 17.8093 38.1264 19.137C33.3242 17.7042 31.0385 14.5079 30.0938 12.7063C31.321 11.7457 33.1983 10.5602 34.8281 10.4841ZM13.0909 12.7063C12.5123 12.7063 11.9573 12.9418 11.5481 13.361C11.139 13.7802 10.9091 14.3487 10.9091 14.9415C10.9091 15.5344 11.139 16.1029 11.5481 16.5221C11.9573 16.9413 12.5123 17.1768 13.0909 17.1768C13.6696 17.1768 14.2245 16.9413 14.6337 16.5221C15.0429 16.1029 15.2727 15.5344 15.2727 14.9415C15.2727 14.3487 15.0429 13.7802 14.6337 13.361C14.2245 12.9418 13.6696 12.7063 13.0909 12.7063ZM34.9091 12.7063C34.3304 12.7063 33.7755 12.9418 33.3663 13.361C32.9571 13.7802 32.7273 14.3487 32.7273 14.9415C32.7273 15.5344 32.9571 16.1029 33.3663 16.5221C33.7755 16.9413 34.3304 17.1768 34.9091 17.1768C35.4877 17.1768 36.0427 16.9413 36.4519 16.5221C36.861 16.1029 37.0909 15.5344 37.0909 14.9415C37.0909 14.3487 36.861 13.7802 36.4519 13.361C36.0427 12.9418 35.4877 12.7063 34.9091 12.7063ZM10.125 24.3978C10.1905 24.4648 17.4982 30.5884 24 30.5884C30.5236 30.5884 37.8095 24.4648 37.875 24.3978L40.6705 27.838C40.3214 28.1286 32.0945 35.0589 24 35.0589C15.9055 35.0589 7.67864 28.1286 7.32955 27.838L10.125 24.3978Z\"/>\n    </svg>\n)\n\n\nexport const Face28 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\" d=\"M24 8C10.7969 8 0 15.2031 0 24C0 32.7969 10.7969 40 24 40C37.2031 40 48 32.7969 48 24C48 15.2031 37.2031 8 24 8ZM24 12C35 12 44 17.2031 44 24C44 30.7969 35 36 24 36C13 36 4 30.7969 4 24C4 17.2031 13 12 24 12ZM20 16C15 16 8 20.2031 8 24C8 27.7969 12.7969 31 16 32C14 28.7969 19.2031 26.6016 20 30C21.6016 28.6016 23.6016 29.7969 24 32C24.3984 29.7969 26.3984 28.6016 28 30C28.7969 26.6016 34 28.7969 32 32C35.2031 31 40 27.7969 40 24C40 20.2031 33 16 28 16C29.6016 16.3984 30 18 30 20C30 21 29.2031 22 28 22C27 22 26 21.6016 26 20V18L24 20L22 18V20C22 21.6016 21 22 20 22C18.7969 22 18 21 18 20C18 18 18.3984 16.3984 20 16Z\"/>\n    </svg>\n)\n\n\nexport const Face29 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_3_58)\">\n            <path fill=\"currentColor\" d=\"M24 0C14.4 0 0 7.2 0 43.2H11.3484C14.7326 46.1779 19.1557 48 24 48C28.8443 48 33.2674 46.1779 36.6516 43.2H48C48 7.2 33.6 0 24 0ZM14.4 21.6H33.6C36.252 21.6 38.4 23.748 38.4 26.4V28.8C38.4 36.7814 31.9814 43.2 24 43.2C16.0187 43.2 9.6 36.7814 9.6 28.8V26.4C9.6 23.748 11.748 21.6 14.4 21.6Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_3_58\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face30 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\"\n            d=\"M21.5322 0C20.3535 0 19.1749 0.956251 19.1749 2.4V3.225C13.6039 5.14687 9.3221 10.3875 7.90403 16.875L7.38837 16.8C5.9703 16.8 5.03106 17.7563 5.03106 19.2V26.4C5.03106 27.8438 5.9703 28.8 7.38837 28.8H8.12503L5.03106 45.15C4.79165 46.5938 5.9703 48 7.38837 48H12.103C13.2816 48 14.2209 47.25 14.4603 46.05C14.4603 46.05 14.5339 45.6188 14.5339 45.6H33.4661C33.4661 45.6188 33.5397 46.05 33.5397 46.05C33.7791 47.25 34.7184 48 35.897 48H40.6116C42.0297 48 43.2083 46.5938 42.9689 45.15L39.654 28.8H40.3906C41.8087 28.8 42.7479 27.8438 42.7479 26.4V19.2C42.7479 17.7563 41.8087 16.8 40.3906 16.8L39.875 16.875C38.4569 10.3875 34.1751 5.14687 28.6041 3.225V2.4C28.6041 1.2 27.6649 0 26.2468 0H21.5322ZM19.1749 8.4V16.35C19.1749 17.7938 17.7937 18.9938 16.3756 18.75L12.4713 17.925C13.3921 13.5469 15.9428 10.1156 19.1749 8.4ZM28.6041 8.4C31.8362 10.1156 34.3869 13.5469 35.3077 17.925L31.4034 18.75C29.9853 18.9938 28.6041 18.0281 28.6041 16.35V8.4ZM12.103 21.6H35.676V24H28.6041V26.4H19.1749V24H12.103V21.6ZM18.9539 31.2H28.8251C30.0038 31.2 30.943 31.95 31.1824 33.15C31.606 35.5688 32.0388 37.8563 32.5821 40.8H15.4179C15.9612 37.8563 16.394 35.5688 16.8176 33.15C16.8176 31.95 17.7752 31.2 18.9539 31.2Z\"/>\n    </svg>\n)\n\n\nexport const Face31 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_4_63)\">\n            <path fill=\"currentColor\"\n                d=\"M28.6386 0C26.3118 0 24.1066 0.525 22.1349 1.425C19.0606 1.77187 14.3698 1.90313 9.94991 3.75C5.53004 5.59687 1.35313 9.525 0.157057 16.35V16.425C-0.272781 19.2938 0.157057 22.2469 1.7269 24.675C3.21265 26.9625 5.87578 28.6125 9.12761 28.8C9.83778 30.8813 10.7909 32.7375 12.1178 33.6C12.6785 33.9469 13.398 34.1719 14.1362 34.35C14.9117 36.5719 15.8275 38.5781 16.9021 40.275C19.9857 45.1688 24.2374 48 28.6386 48C34.9086 48 40.4965 42.3 42.7672 32.775C43.7577 32.3625 44.7669 32.0438 45.6079 31.275C46.8693 30.1313 48 28.4813 48 26.4C48 25.3406 48 24.0563 47.4767 22.725C47.1777 21.975 46.2713 21.4875 45.6079 20.85V19.275C45.6079 19.2469 45.6079 19.2281 45.6079 19.2C45.7293 14.4375 44.4678 9.7125 41.6459 6.075C38.8052 2.41875 34.3106 0 28.6386 0ZM28.6386 4.8C33.021 4.8 35.8991 6.4125 37.9081 9C39.9172 11.5875 40.9263 15.2719 40.8236 19.125V23.175L42.2439 23.775C42.8139 24.0281 42.8513 24.1688 42.9914 24.525C43.1316 24.8813 43.2157 25.5375 43.2157 26.4C43.2157 26.7188 42.9821 27.2156 42.3934 27.75C41.8047 28.2844 40.917 28.7344 40.3003 28.875L38.8052 29.175L38.5062 30.75C36.7307 39.675 32.1427 43.2 28.6386 43.2C26.3399 43.2 23.4151 41.5781 20.9388 37.65C20.3688 36.75 19.8642 35.7 19.369 34.575C21.3406 34.3875 23.1721 34.0125 24.3028 33.6C26.6949 32.8781 28.8628 30.7313 28.8628 26.175C28.8628 20.8969 27.1622 18.2438 22.1349 16.8C20.3688 16.3313 18.5747 15.9188 16.9021 15.525C17.4534 13.1156 18.5093 10.8469 19.967 9.075C22.1536 6.42187 25.0877 4.8 28.6386 4.8ZM15.3322 7.2C13.8371 9.3375 12.7812 11.775 12.1925 14.4H12.1178C9.72565 14.4 7.3335 16.5563 7.3335 19.2C7.3335 19.2 7.51104 21.1781 7.93154 23.7C6.913 23.4 6.19349 22.9031 5.6889 22.125C4.94135 20.9719 4.67037 19.1531 4.94135 17.25C4.94135 17.2219 4.94135 17.2031 4.94135 17.175C5.90382 11.8219 8.4081 9.6375 11.744 8.25C12.8653 7.78125 14.0801 7.4625 15.3322 7.2ZM22.8825 21.6C24.798 21.6 26.4707 23.2781 26.4707 25.2C26.4707 27.1219 24.798 28.8 22.8825 28.8C20.9669 28.8 19.2942 27.1219 19.2942 25.2C19.2942 23.2781 20.9669 21.6 22.8825 21.6ZM34.8432 21.6C32.8622 21.6 31.255 23.2125 31.255 25.2C31.255 27.1875 32.8622 28.8 34.8432 28.8C36.8242 28.8 38.4314 27.1875 38.4314 25.2C38.4314 23.2125 36.8242 21.6 34.8432 21.6Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_4_63\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face32 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <g clipPath=\"url(#clip0_4_67)\">\n            <path fill=\"currentColor\"\n                d=\"M16.8 0V7.2H14.4V11.6391C14.2472 11.7315 14.0794 11.8153 13.9313 11.9109C12.9129 9.16962 10.2911 7.2 7.2 7.2C3.2304 7.2 0 10.4304 0 14.4C0 18.3696 3.2304 21.6 7.2 21.6C7.27393 21.6 7.34222 21.5788 7.41563 21.5766C7.31803 22.1899 7.231 22.8063 7.20938 23.4516C5.69738 24.8028 4.8 26.748 4.8 28.8C4.8 33.216 7.7016 35.6572 9.6 36.7828V39.6C9.6 44.388 15.7896 48 24 48C32.2104 48 38.4 44.388 38.4 39.6V36.7781C40.2984 35.6549 43.2 33.216 43.2 28.8C43.2 26.748 42.3026 24.8052 40.7906 23.4516C40.769 22.8076 40.6816 22.1887 40.5844 21.5766C40.6578 21.5788 40.7261 21.6 40.8 21.6C44.7696 21.6 48 18.3696 48 14.4C48 10.4304 44.7696 7.2 40.8 7.2C37.7089 7.2 35.0871 9.16962 34.0688 11.9109C33.9206 11.8153 33.7528 11.7315 33.6 11.6391V7.2H31.2V0H16.8ZM7.2 12C8.5248 12 9.6 13.0752 9.6 14.4C9.6 15.7248 8.5248 16.8 7.2 16.8C5.8752 16.8 4.8 15.7248 4.8 14.4C4.8 13.0752 5.8752 12 7.2 12ZM40.8 12C42.1248 12 43.2 13.0752 43.2 14.4C43.2 15.7248 42.1248 16.8 40.8 16.8C39.4752 16.8 38.4 15.7248 38.4 14.4C38.4 13.0752 39.4752 12 40.8 12ZM14.4 16.8C19.2 16.8 21.6 19.2 21.6 19.2H14.4V16.8ZM33.6 16.8V19.2H26.4C26.4 19.2 28.8 16.8 33.6 16.8ZM18.7406 21.8906C19.6166 21.9554 20.5734 22.144 21.5766 22.5328C21.5814 22.624 21.6 22.7088 21.6 22.8C21.6 23.4072 21.4351 23.9672 21.1687 24.4687C21.9656 24.176 22.9392 24 24 24C25.0608 24 26.0345 24.1759 26.8313 24.4687C26.5649 23.9672 26.4 23.4072 26.4 22.8C26.4 22.7088 26.4209 22.624 26.4281 22.5328C27.4313 22.144 28.3881 21.9554 29.2641 21.8906C28.9905 22.109 28.8047 22.4326 28.8047 22.8094C28.8047 23.467 29.333 24 29.9906 24C30.6482 24 31.1813 23.467 31.1813 22.8094C31.1813 22.435 31.0025 22.1137 30.7313 21.8953C32.3873 22.0177 33.4879 22.4897 33.5719 22.5281C33.5791 22.6217 33.6 22.7064 33.6 22.8C33.6 24.7872 31.9872 26.4 30 26.4C29.5584 26.4 29.1443 26.3096 28.7531 26.1656C28.7699 26.2448 28.8 26.3184 28.8 26.4C28.8 27.7248 26.652 28.8 24 28.8C21.348 28.8 19.2 27.7248 19.2 26.4C19.2 26.3184 19.2301 26.2448 19.2469 26.1656C18.8557 26.3096 18.4416 26.4 18 26.4C16.0128 26.4 14.4 24.7872 14.4 22.8C14.4 22.7064 14.4209 22.6193 14.4281 22.5281C14.5121 22.4897 15.6128 22.0224 17.2688 21.9C17 22.1184 16.8188 22.4397 16.8188 22.8141C16.8212 23.4693 17.3518 24 18.0094 24C18.667 24 19.2 23.467 19.2 22.8094C19.2 22.4326 19.0142 22.109 18.7406 21.8906ZM14.4 36H33.6C33.6 36 33.5616 38.9634 31.2 40.2234V38.4H28.8V40.8H26.4V38.4H21.6V40.8H19.2V38.4H16.8V40.2234C14.4384 38.9634 14.4 36 14.4 36Z\"/>\n        </g>\n        <defs>\n            <clipPath id=\"clip0_4_67\">\n                <rect\n                    width=\"48\"\n                    height=\"48\"/>\n            </clipPath>\n        </defs>\n    </svg>\n)\n\n\nexport const Face33 = ({...props}: ShapeProps) => (\n    <svg {...defaultProps} {...props}>\"\n        <path fill=\"currentColor\" d=\"M24 0C13.3181 0 7 7.44375 7 19.2C7 30.9563 12.8248 48 24 48C35.1752 48 41 30.9563 41 19.2C41 7.44375 34.6819 0 24 0ZM14.2857 31.2C9.42857 24 9.91239 17.7563 11.8571 12C13.5552 19.4438 21.5714 24 21.5714 24L14.2857 31.2ZM26.4286 24C26.4286 24 34.4448 19.4438 36.1429 12C38.0876 17.7563 38.5714 24 33.7143 31.2L26.4286 24Z\"/>\n    </svg>\n)\n\n","import * as React from 'react';\nimport { ComponentType } from 'react'\nimport { styled } from 'goober'\nimport * as shapes from './shapes'\nimport * as faces from './faces'\nimport { ShapeProps } from './shapes'\n\nexport type ShapeNames = keyof typeof shapes\ninterface ShapeList {\n\t[key: string]: ComponentType<ShapeProps>\n}\n\nexport interface Props {\n  name: ShapeNames\n  size?: number\n  color: string\n}\n\nexport const ShapeWrapper = styled('span')<Props>`\n  display: inline-flex;\n  align-items: center;\n  vertical-align: middle;\n\n  color: #${p => p.color || 'currentColor'};\n`\n\nexport const shapeList = Object.keys(shapes)\n\nexport default function Shape(props: Props){\n  const { name, size = 24 } = props\n  const isFaces = name.startsWith('Face')\n\n  const Tag = isFaces ? (faces as ShapeList)[name] : (shapes as ShapeList)[name]\n\n  if(!Tag) {\n    // shape doen't exists\n    return null\n  }\n\n  return (\n    <ShapeWrapper {...props} role=\"img\">\n      <Tag\n        width={size}\n      />\n    </ShapeWrapper>\n  )\n}\n","import * as React from 'react';\nimport randiman from './lib/random'\nimport { BACKGROUND_COLORS, SHAPE_COLORS } from './lib/colors'\nimport Shape, { ShapeNames } from './shape/Shape'\nimport { styled, setup } from 'goober'\n\n// initialize goober\nsetup(React.createElement, undefined, undefined, (props: any) => {\n  for (let prop in props) {\n      if (prop[0] === '$') {\n          delete props[prop];\n      }\n  }\n});\n\nconst DEFAULTS = {\n  style: \"character\",\n  type: \"default\",\n  size: 32,\n  shadow: false,\n  border: false,\n  borderSize: 2,\n  borderColor: \"#fff\"\n}\n\ninterface WrapperProps {\n  size: number\n  color: string\n\n  $shadow?: boolean\n\n  $border?: boolean\n  $borderSize?: number\n  $borderColor?: string\n  $radius?: number\n}\n\nconst Wrapper = styled('div')<WrapperProps>`\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  border-radius: ${p => p.$radius || p.size}px;\n  background-color: #${p => p.color};\n\n  ${ p => p.$border &&\n  `border: ${p.$borderSize}px solid ${p.$borderColor};`\n  }\n\n  box-sizing: border-box;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n\n  &:hover {\n    z-index: 3;\n  }\n\n  ${p => p.$shadow && `\n    box-shadow: \n      0px 3px 8px rgba(18, 18, 18, 0.04),  \n      0px 1px 1px rgba(18, 18, 18, 0.02);\n  `}\n`\n\n// implement size\nconst Text = styled('p')<{ color: string, size: number }>`\n  /* Reset */\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  box-sizing: border-box;\n  font-family: -apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", Roboto, sans-serif;\n  font-size: ${p => Math.round(p.size / 100 * 37)}px;\n  color: #${p => p.color};\n  line-height: 0;\n  text-transform: uppercase;\n  font-weight: 500;\n`\n\ntype Style = 'character' | 'shape'\ntype Type = 'default' | 'face'\ninterface Params\n{\n  displayValue?: string\n  // this should be unique to user, it can be email, user id, or full name\n  value: string\n  size?: number\n  shadow?: boolean\n  style?: Style\n\n  // toggle border\n  border?: boolean\n  borderSize?: number\n  borderColor?: string\n  radius?: number\n  type?: Type\n}\n\nexport default function Avvvatars(params: Params)\n{\n  const {\n    style = DEFAULTS.style,\n    displayValue,\n    value,\n    radius,\n    type = DEFAULTS.type,\n    size = DEFAULTS.size,\n    shadow = DEFAULTS.shadow,\n    border = DEFAULTS.border,\n    borderSize = DEFAULTS.borderSize,\n    borderColor = DEFAULTS.borderColor\n  } = params\n\n  // get first two letters\n  const name = String(displayValue || value).substring(0, 2);\n\n  const shapeType = type === 'default' ? 'Shape' : 'Face'\n  const isFace = shapeType === 'Face'\n\n  // generate unique random for given value\n  // there is 20 colors in array so generate between 0 and 19\n  const key = randiman({ value, min: 0, max: BACKGROUND_COLORS.length - 1 });\n\n  // there is 60 shapes so generate between 1 and 60\n  const shapeKey = isFace ? randiman({ value, min: 1, max: 33 }) : randiman({ value, min: 1, max: 60 })\n\n  return (\n    <Wrapper\n      size={size}\n      color={BACKGROUND_COLORS[key].replace('#', '')}\n      $shadow={shadow}\n      $border={border}\n      $borderSize={borderSize}\n      $borderColor={borderColor}\n      $radius={radius}\n    >\n      {style === 'character' ?\n        <Text\n          color={SHAPE_COLORS[key].replace('#', '')}\n          size={size}\n        >\n          {name}\n        </Text>\n        :\n        <Shape\n          name={`${shapeType}${shapeKey}` as ShapeNames}\n          color={SHAPE_COLORS[key].replace('#', '')}\n          size={Math.round((size) / 100 * 50)}\n        />\n      }\n    </Wrapper>\n  )\n}\n"],"names":["MersenneTwister","seed","undefined","Math","floor","random","pow","N","M","MATRIX_A","UPPER_MASK","LOWER_MASK","mt","Array","mti","init_genrand","prototype","s","init_by_array","init_key","key_length","i","j","k","genrand_int32","y","mag01","kk","genrand_int31","genrand_real1","genrand_real3","genrand_res53","a","b","AleaGen","Date","n","c","s0","mash","s1","s2","data","String","length","charCodeAt","h","next","t","copy","f","minMax","opts","min","max","randomNumber","value","prepareSeed","seedOutput","mersenne","TAILWIND_COLORS","slate","gray","zinc","neutral","stone","red","orange","amber","yellow","lime","green","emerald","teal","cyan","sky","blue","indigo","violet","purple","fuchsia","pink","rose","MATERIAL_COLORS","A100","A200","A400","A700","deepPurple","lightBlue","lightGreen","deepOrange","brown","blueGrey","grey","BACKGROUND_COLORS","SHAPE_COLORS","defaultProps","viewBox","fill","Shape1","props","React","d","Shape2","Shape3","clipPath","id","width","height","Shape4","Shape5","Shape6","Shape7","fillRule","clipRule","Shape8","Shape9","Shape10","Shape11","Shape12","Shape13","Shape14","Shape15","Shape16","Shape17","Shape18","Shape19","Shape20","Shape21","Shape22","Shape23","Shape24","Shape25","Shape26","Shape27","Shape28","Shape29","Shape30","Shape31","Shape32","Shape33","Shape34","Shape35","Shape36","Shape37","Shape38","Shape39","Shape40","Shape41","Shape42","Shape43","Shape44","Shape45","Shape46","Shape47","Shape48","Shape49","Shape50","Shape51","Shape52","Shape53","Shape54","Shape55","Shape56","Shape57","Shape58","Shape59","Shape60","Face1","Face2","Face3","Face4","Face5","Face6","Face7","Face8","Face9","Face10","Face11","Face12","Face13","Face14","Face15","Face16","Face17","Face18","Face19","Face20","Face21","Face22","Face23","Face24","Face25","Face26","Face27","Face28","Face29","Face30","Face31","Face32","Face33","ShapeWrapper","styled","p","color","Shape","name","size","isFaces","startsWith","Tag","faces","shapes","role","setup","prop","DEFAULTS","style","type","shadow","border","borderSize","borderColor","Wrapper","$radius","$border","$borderSize","$borderColor","$shadow","Text","round","Avvvatars","params","displayValue","radius","substring","shapeType","isFace","key","randiman","shapeKey","replace"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAsCC,IAAtC;EACtB,IAAIA,IAAI,KAAKC,SAAb,EAAwB;IAEpBD,IAAI,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcF,IAAI,CAACG,GAAL,CAAS,EAAT,EAAY,EAAZ,CAAzB,CAAP;;;EAGJ,KAAKC,CAAL,GAAS,GAAT;EACA,KAAKC,CAAL,GAAS,GAAT;EACA,KAAKC,QAAL,GAAgB,UAAhB;EACA,KAAKC,UAAL,GAAkB,UAAlB;EACA,KAAKC,UAAL,GAAkB,UAAlB;EAEA,KAAKC,EAAL,GAAU,IAAIC,KAAJ,CAAU,KAAKN,CAAf,CAAV;EACA,KAAKO,GAAL,GAAW,KAAKP,CAAL,GAAS,CAApB;EAEA,KAAKQ,YAAL,CAAkBd,IAAlB;AACuD,CAhBzD;;AAmBAD,eAAe,CAACgB,SAAhB,CAA0BD,YAA1B,GAAyC,UAAUE,CAAV;EACvC,KAAKL,EAAL,CAAQ,CAAR,IAAaK,CAAC,KAAK,CAAnB;;EACA,KAAK,KAAKH,GAAL,GAAW,CAAhB,EAAmB,KAAKA,GAAL,GAAW,KAAKP,CAAnC,EAAsC,KAAKO,GAAL,EAAtC,EAAkD;IAC9CG,CAAC,GAAG,KAAKL,EAAL,CAAQ,KAAKE,GAAL,GAAW,CAAnB,IAAyB,KAAKF,EAAL,CAAQ,KAAKE,GAAL,GAAW,CAAnB,MAA0B,EAAvD;IACA,KAAKF,EAAL,CAAQ,KAAKE,GAAb,IAAqB,CAAE,CAAC,CAACG,CAAC,GAAG,UAAL,MAAqB,EAAtB,IAA4B,UAA7B,IAA4C,EAA7C,IAAmD,CAACA,CAAC,GAAG,UAAL,IAAmB,UAAvE,GAAqF,KAAKH,GAA9G;IAKA,KAAKF,EAAL,CAAQ,KAAKE,GAAb,OAAuB,CAAvB;;AAGL,CAZD;;AAkBAd,eAAe,CAACgB,SAAhB,CAA0BE,aAA1B,GAA0C,UAAUC,QAAV,EAAyBC,UAAzB;EACxC,IAAIC,CAAC,GAAG,CAAR;MAAWC,CAAC,GAAG,CAAf;MAAkBC,CAAlB;MAAqBN,CAArB;EACA,KAAKF,YAAL,CAAkB,QAAlB;EACAQ,CAAC,GAAI,KAAKhB,CAAL,GAASa,UAAT,GAAsB,KAAKb,CAA3B,GAA+Ba,UAApC;;EACA,OAAOG,CAAP,EAAUA,CAAC,EAAX,EAAe;IACXN,CAAC,GAAG,KAAKL,EAAL,CAAQS,CAAC,GAAG,CAAZ,IAAkB,KAAKT,EAAL,CAAQS,CAAC,GAAG,CAAZ,MAAmB,EAAzC;IACA,KAAKT,EAAL,CAAQS,CAAR,IAAa,CAAC,KAAKT,EAAL,CAAQS,CAAR,IAAc,CAAE,CAAC,CAACJ,CAAC,GAAG,UAAL,MAAqB,EAAtB,IAA4B,OAA7B,IAAyC,EAA1C,IAAiD,CAACA,CAAC,GAAG,UAAL,IAAmB,OAAnF,IAAgGE,QAAQ,CAACG,CAAD,CAAxG,GAA8GA,CAA3H;IACA,KAAKV,EAAL,CAAQS,CAAR,OAAgB,CAAhB;IACAA,CAAC;IACDC,CAAC;;IACD,IAAID,CAAC,IAAI,KAAKd,CAAd,EAAiB;MAAE,KAAKK,EAAL,CAAQ,CAAR,IAAa,KAAKA,EAAL,CAAQ,KAAKL,CAAL,GAAS,CAAjB,CAAb;MAAkCc,CAAC,GAAG,CAAJ;;;IACrD,IAAIC,CAAC,IAAIF,UAAT,EAAqB;MAAEE,CAAC,GAAG,CAAJ;;;;EAE3B,KAAKC,CAAC,GAAG,KAAKhB,CAAL,GAAS,CAAlB,EAAqBgB,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;IACzBN,CAAC,GAAG,KAAKL,EAAL,CAAQS,CAAC,GAAG,CAAZ,IAAkB,KAAKT,EAAL,CAAQS,CAAC,GAAG,CAAZ,MAAmB,EAAzC;IACA,KAAKT,EAAL,CAAQS,CAAR,IAAa,CAAC,KAAKT,EAAL,CAAQS,CAAR,IAAc,CAAE,CAAC,CAACJ,CAAC,GAAG,UAAL,MAAqB,EAAtB,IAA4B,UAA7B,IAA4C,EAA7C,IAAmD,CAACA,CAAC,GAAG,UAAL,IAAmB,UAArF,IAAoGI,CAAjH;IACA,KAAKT,EAAL,CAAQS,CAAR,OAAgB,CAAhB;IACAA,CAAC;;IACD,IAAIA,CAAC,IAAI,KAAKd,CAAd,EAAiB;MAAE,KAAKK,EAAL,CAAQ,CAAR,IAAa,KAAKA,EAAL,CAAQ,KAAKL,CAAL,GAAS,CAAjB,CAAb;MAAkCc,CAAC,GAAG,CAAJ;;;;EAGzD,KAAKT,EAAL,CAAQ,CAAR,IAAa,UAAb;AACD,CAtBD;;AAyBAZ,eAAe,CAACgB,SAAhB,CAA0BQ,aAA1B,GAA0C;EACxC,IAAIC,CAAJ;EACA,IAAIC,KAAK,GAAG,IAAIb,KAAJ,CAAU,GAAV,EAAe,KAAKJ,QAApB,CAAZ;;EAGA,IAAI,KAAKK,GAAL,IAAY,KAAKP,CAArB,EAAwB;IACtB,IAAIoB,EAAJ;;IAEA,IAAI,KAAKb,GAAL,KAAa,KAAKP,CAAL,GAAS,CAA1B,EAA6B;MACzB,KAAKQ,YAAL,CAAkB,IAAlB;;;IAEJ,KAAKY,EAAE,GAAG,CAAV,EAAaA,EAAE,GAAG,KAAKpB,CAAL,GAAS,KAAKC,CAAhC,EAAmCmB,EAAE,EAArC,EAAyC;MACrCF,CAAC,GAAI,KAAKb,EAAL,CAAQe,EAAR,IAAY,KAAKjB,UAAlB,GAA+B,KAAKE,EAAL,CAAQe,EAAE,GAAG,CAAb,IAAgB,KAAKhB,UAAxD;MACA,KAAKC,EAAL,CAAQe,EAAR,IAAc,KAAKf,EAAL,CAAQe,EAAE,GAAG,KAAKnB,CAAlB,IAAwBiB,CAAC,KAAK,CAA9B,GAAmCC,KAAK,CAACD,CAAC,GAAG,GAAL,CAAtD;;;IAEJ,OAAME,EAAE,GAAG,KAAKpB,CAAL,GAAS,CAApB,EAAuBoB,EAAE,EAAzB,EAA6B;MACzBF,CAAC,GAAI,KAAKb,EAAL,CAAQe,EAAR,IAAY,KAAKjB,UAAlB,GAA+B,KAAKE,EAAL,CAAQe,EAAE,GAAG,CAAb,IAAgB,KAAKhB,UAAxD;MACA,KAAKC,EAAL,CAAQe,EAAR,IAAc,KAAKf,EAAL,CAAQe,EAAE,IAAI,KAAKnB,CAAL,GAAS,KAAKD,CAAlB,CAAV,IAAmCkB,CAAC,KAAK,CAAzC,GAA8CC,KAAK,CAACD,CAAC,GAAG,GAAL,CAAjE;;;IAEJA,CAAC,GAAI,KAAKb,EAAL,CAAQ,KAAKL,CAAL,GAAS,CAAjB,IAAoB,KAAKG,UAA1B,GAAuC,KAAKE,EAAL,CAAQ,CAAR,IAAW,KAAKD,UAA3D;IACA,KAAKC,EAAL,CAAQ,KAAKL,CAAL,GAAS,CAAjB,IAAsB,KAAKK,EAAL,CAAQ,KAAKJ,CAAL,GAAS,CAAjB,IAAuBiB,CAAC,KAAK,CAA7B,GAAkCC,KAAK,CAACD,CAAC,GAAG,GAAL,CAA7D;IAEA,KAAKX,GAAL,GAAW,CAAX;;;EAGFW,CAAC,GAAG,KAAKb,EAAL,CAAQ,KAAKE,GAAL,EAAR,CAAJ;EAGAW,CAAC,IAAKA,CAAC,KAAK,EAAZ;EACAA,CAAC,IAAKA,CAAC,IAAI,CAAN,GAAW,UAAhB;EACAA,CAAC,IAAKA,CAAC,IAAI,EAAN,GAAY,UAAjB;EACAA,CAAC,IAAKA,CAAC,KAAK,EAAZ;EAEA,OAAOA,CAAC,KAAK,CAAb;AACD,CAlCD;;AAqCAzB,eAAe,CAACgB,SAAhB,CAA0BY,aAA1B,GAA0C;EACxC,OAAQ,KAAKJ,aAAL,OAAyB,CAAjC;AACD,CAFD;;AAKAxB,eAAe,CAACgB,SAAhB,CAA0Ba,aAA1B,GAA0C;EACxC,OAAO,KAAKL,aAAL,MAAwB,MAAM,YAA9B,CAAP;AAED,CAHD;;AAMAxB,eAAe,CAACgB,SAAhB,CAA0BX,MAA1B,GAAmC;EACjC,OAAO,KAAKmB,aAAL,MAAwB,MAAM,YAA9B,CAAP;AAED,CAHD;;AAMAxB,eAAe,CAACgB,SAAhB,CAA0Bc,aAA1B,GAA0C;EACxC,OAAO,CAAC,KAAKN,aAAL,KAAuB,GAAxB,KAAgC,MAAM,YAAtC,CAAP;AAED,CAHD;;AAMAxB,eAAe,CAACgB,SAAhB,CAA0Be,aAA1B,GAA0C;EACxC,IAAIC,CAAC,GAAG,KAAKR,aAAL,OAAuB,CAA/B;MAAkCS,CAAC,GAAG,KAAKT,aAAL,OAAuB,CAA7D;EACA,OAAO,CAACQ,CAAC,GAAG,UAAJ,GAAiBC,CAAlB,KAAwB,MAAM,kBAA9B,CAAP;AACD,CAHD;;IClLMC;EAMJ,iBAAYjC,IAAZ;IACE,IAAIA,IAAI,IAAI,IAAZ,EAAkBA,IAAI,GAAG,CAAE,IAAIkC,IAAJ,EAAT;IAElB,IAAIC,CAAC,GAAG,UAAR;IAGA,KAAKC,CAAL,GAAS,CAAT;IACA,KAAKC,EAAL,GAAUC,IAAI,CAAC,GAAD,CAAd;IACA,KAAKC,EAAL,GAAUD,IAAI,CAAC,GAAD,CAAd;IACA,KAAKE,EAAL,GAAUF,IAAI,CAAC,GAAD,CAAd;IACA,KAAKD,EAAL,IAAWC,IAAI,CAACtC,IAAD,CAAf;;IACA,IAAI,KAAKqC,EAAL,GAAU,CAAd,EAAiB;MAAE,KAAKA,EAAL,IAAW,CAAX;;;IACnB,KAAKE,EAAL,IAAWD,IAAI,CAACtC,IAAD,CAAf;;IACA,IAAI,KAAKuC,EAAL,GAAU,CAAd,EAAiB;MAAE,KAAKA,EAAL,IAAW,CAAX;;;IACnB,KAAKC,EAAL,IAAWF,IAAI,CAACtC,IAAD,CAAf;;IACA,IAAI,KAAKwC,EAAL,GAAU,CAAd,EAAiB;MAAE,KAAKA,EAAL,IAAW,CAAX;;;IAEnB,SAASF,IAAT,CAAcG,IAAd;MACEA,IAAI,GAAGC,MAAM,CAACD,IAAD,CAAb;;MACA,KAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,IAAI,CAACE,MAAzB,EAAiCvB,CAAC,EAAlC,EAAsC;QACpCe,CAAC,IAAIM,IAAI,CAACG,UAAL,CAAgBxB,CAAhB,CAAL;QACA,IAAIyB,CAAC,GAAG,sBAAsBV,CAA9B;QACAA,CAAC,GAAGU,CAAC,KAAK,CAAV;QACAA,CAAC,IAAIV,CAAL;QACAU,CAAC,IAAIV,CAAL;QACAA,CAAC,GAAGU,CAAC,KAAK,CAAV;QACAA,CAAC,IAAIV,CAAL;QACAA,CAAC,IAAIU,CAAC,GAAG,WAAT;;;MAEF,OAAO,CAACV,CAAC,KAAK,CAAP,IAAY,sBAAnB;;;;;;SAIJW,OAAA;IACE,IAAKV,CAAL,GAAmB,IAAnB,CAAKA,CAAL;QAAOC,EAAP,GAAmB,IAAnB,CAAOA,EAAP;QAAUE,EAAV,GAAmB,IAAnB,CAAUA,EAAV;QAAaC,EAAb,GAAmB,IAAnB,CAAaA,EAAb;IACA,IAAIO,CAAC,GAAG,UAAUV,EAAV,GAAeD,CAAC,GAAG,sBAA3B;IACA,KAAKC,EAAL,GAAUE,EAAV;IACA,KAAKA,EAAL,GAAUC,EAAV;IACA,OAAO,KAAKA,EAAL,GAAUO,CAAC,IAAI,KAAKX,CAAL,GAASW,CAAC,GAAG,CAAjB,CAAlB;;;SAGFC,OAAA,cAAKC,CAAL,EAAcF,CAAd;IACEA,CAAC,CAACX,CAAF,GAAMa,CAAC,CAACb,CAAR;IACAW,CAAC,CAACV,EAAF,GAAOY,CAAC,CAACZ,EAAT;IACAU,CAAC,CAACR,EAAF,GAAOU,CAAC,CAACV,EAAT;IACAQ,CAAC,CAACP,EAAF,GAAOS,CAAC,CAACT,EAAT;IACA,OAAOO,CAAP;;;;;;ACpCJ,SAASG,MAAT,CAAgBC,IAAhB;EACE,IAAQ/C,MAAR,GAA6B+C,IAA7B,CAAQ/C,MAAR;MAAgBgD,GAAhB,GAA6BD,IAA7B,CAAgBC,GAAhB;MAAqBC,GAArB,GAA6BF,IAA7B,CAAqBE,GAArB;EACA,OAAOnD,IAAI,CAACC,KAAL,CAAWC,MAAM,IAAIiD,GAAG,GAAGD,GAAN,GAAY,CAAhB,CAAN,GAA2BA,GAAtC,CAAP;AACD;;AAGD,SAAwBE,aAAaH;EACnC,IAAQI,KAAR,GAA4BJ,IAA5B,CAAQI,KAAR;MAAeH,GAAf,GAA4BD,IAA5B,CAAeC,GAAf;MAAoBC,GAApB,GAA4BF,IAA5B,CAAoBE,GAApB;EAEA,IAAMG,WAAW,GAAG,IAAIvB,OAAJ,CAAYsB,KAAZ,CAApB;EACA,IAAME,UAAU,GAAGD,WAAW,CAACjB,EAAZ,GAAiB,QAApC;EAEA,IAAMmB,QAAQ,GAAG,IAAI3D,eAAJ,CAAoB0D,UAApB,CAAjB;EAEA,OAAOP,MAAM,CAAC;IAAC9C,MAAM,EAAEsD,QAAQ,CAACtD,MAAT,EAAT;IAA4BgD,GAAG,EAAHA,GAA5B;IAAiCC,GAAG,EAAHA;GAAlC,CAAb;AACD;;AC/BD,IAAMM,eAAe,GAAG;EACtBC,KAAK,EAAE;IACL,MAAM,SADD;IAEL,OAAO,SAFF;IAGL,OAAO,SAHF;IAIL,OAAO,SAJF;IAKL,OAAO,SALF;IAML,OAAO,SANF;IAOL,OAAO,SAPF;IAQL,OAAO,SARF;IASL,OAAO,SATF;IAUL,OAAO;GAXa;EAatBC,IAAI,EAAE;IACJ,MAAM,SADF;IAEJ,OAAO,SAFH;IAGJ,OAAO,SAHH;IAIJ,OAAO,SAJH;IAKJ,OAAO,SALH;IAMJ,OAAO,SANH;IAOJ,OAAO,SAPH;IAQJ,OAAO,SARH;IASJ,OAAO,SATH;IAUJ,OAAO;GAvBa;EAyBtBC,IAAI,EAAE;IACJ,MAAM,SADF;IAEJ,OAAO,SAFH;IAGJ,OAAO,SAHH;IAIJ,OAAO,SAJH;IAKJ,OAAO,SALH;IAMJ,OAAO,SANH;IAOJ,OAAO,SAPH;IAQJ,OAAO,SARH;IASJ,OAAO,SATH;IAUJ,OAAO;GAnCa;EAqCtBC,OAAO,EAAE;IACP,MAAM,SADC;IAEP,OAAO,SAFA;IAGP,OAAO,SAHA;IAIP,OAAO,SAJA;IAKP,OAAO,SALA;IAMP,OAAO,SANA;IAOP,OAAO,SAPA;IAQP,OAAO,SARA;IASP,OAAO,SATA;IAUP,OAAO;GA/Ca;EAiDtBC,KAAK,EAAE;IACL,MAAM,SADD;IAEL,OAAO,SAFF;IAGL,OAAO,SAHF;IAIL,OAAO,SAJF;IAKL,OAAO,SALF;IAML,OAAO,SANF;IAOL,OAAO,SAPF;IAQL,OAAO,SARF;IASL,OAAO,SATF;IAUL,OAAO;GA3Da;EA6DtBC,GAAG,EAAE;IACH,MAAM,SADH;IAEH,OAAO,SAFJ;IAGH,OAAO,SAHJ;IAIH,OAAO,SAJJ;IAKH,OAAO,SALJ;IAMH,OAAO,SANJ;IAOH,OAAO,SAPJ;IAQH,OAAO,SARJ;IASH,OAAO,SATJ;IAUH,OAAO;GAvEa;EAyEtBC,MAAM,EAAE;IACN,MAAM,SADA;IAEN,OAAO,SAFD;IAGN,OAAO,SAHD;IAIN,OAAO,SAJD;IAKN,OAAO,SALD;IAMN,OAAO,SAND;IAON,OAAO,SAPD;IAQN,OAAO,SARD;IASN,OAAO,SATD;IAUN,OAAO;GAnFa;EAqFtBC,KAAK,EAAE;IACL,MAAM,SADD;IAEL,OAAO,SAFF;IAGL,OAAO,SAHF;IAIL,OAAO,SAJF;IAKL,OAAO,SALF;IAML,OAAO,SANF;IAOL,OAAO,SAPF;IAQL,OAAO,SARF;IASL,OAAO,SATF;IAUL,OAAO;GA/Fa;EAiGtBC,MAAM,EAAE;IACN,MAAM,SADA;IAEN,OAAO,SAFD;IAGN,OAAO,SAHD;IAIN,OAAO,SAJD;IAKN,OAAO,SALD;IAMN,OAAO,SAND;IAON,OAAO,SAPD;IAQN,OAAO,SARD;IASN,OAAO,SATD;IAUN,OAAO;GA3Ga;EA6GtBC,IAAI,EAAE;IACJ,MAAM,SADF;IAEJ,OAAO,SAFH;IAGJ,OAAO,SAHH;IAIJ,OAAO,SAJH;IAKJ,OAAO,SALH;IAMJ,OAAO,SANH;IAOJ,OAAO,SAPH;IAQJ,OAAO,SARH;IASJ,OAAO,SATH;IAUJ,OAAO;GAvHa;EAyHtBC,KAAK,EAAE;IACL,MAAM,SADD;IAEL,OAAO,SAFF;IAGL,OAAO,SAHF;IAIL,OAAO,SAJF;IAKL,OAAO,SALF;IAML,OAAO,SANF;IAOL,OAAO,SAPF;IAQL,OAAO,SARF;IASL,OAAO,SATF;IAUL,OAAO;GAnIa;EAqItBC,OAAO,EAAE;IACP,MAAM,SADC;IAEP,OAAO,SAFA;IAGP,OAAO,SAHA;IAIP,OAAO,SAJA;IAKP,OAAO,SALA;IAMP,OAAO,SANA;IAOP,OAAO,SAPA;IAQP,OAAO,SARA;IASP,OAAO,SATA;IAUP,OAAO;GA/Ia;EAiJtBC,IAAI,EAAE;IACJ,MAAM,SADF;IAEJ,OAAO,SAFH;IAGJ,OAAO,SAHH;IAIJ,OAAO,SAJH;IAKJ,OAAO,SALH;IAMJ,OAAO,SANH;IAOJ,OAAO,SAPH;IAQJ,OAAO,SARH;IASJ,OAAO,SATH;IAUJ,OAAO;GA3Ja;EA6JtBC,IAAI,EAAE;IACJ,MAAM,SADF;IAEJ,OAAO,SAFH;IAGJ,OAAO,SAHH;IAIJ,OAAO,SAJH;IAKJ,OAAO,SALH;IAMJ,OAAO,SANH;IAOJ,OAAO,SAPH;IAQJ,OAAO,SARH;IASJ,OAAO,SATH;IAUJ,OAAO;GAvKa;EAyKtBC,GAAG,EAAE;IACH,MAAM,SADH;IAEH,OAAO,SAFJ;IAGH,OAAO,SAHJ;IAIH,OAAO,SAJJ;IAKH,OAAO,SALJ;IAMH,OAAO,SANJ;IAOH,OAAO,SAPJ;IAQH,OAAO,SARJ;IASH,OAAO,SATJ;IAUH,OAAO;GAnLa;EAqLtBC,IAAI,EAAE;IACJ,MAAM,SADF;IAEJ,OAAO,SAFH;IAGJ,OAAO,SAHH;IAIJ,OAAO,SAJH;IAKJ,OAAO,SALH;IAMJ,OAAO,SANH;IAOJ,OAAO,SAPH;IAQJ,OAAO,SARH;IASJ,OAAO,SATH;IAUJ,OAAO;GA/La;EAiMtBC,MAAM,EAAE;IACN,MAAM,SADA;IAEN,OAAO,SAFD;IAGN,OAAO,SAHD;IAIN,OAAO,SAJD;IAKN,OAAO,SALD;IAMN,OAAO,SAND;IAON,OAAO,SAPD;IAQN,OAAO,SARD;IASN,OAAO,SATD;IAUN,OAAO;GA3Ma;EA6MtBC,MAAM,EAAE;IACN,MAAM,SADA;IAEN,OAAO,SAFD;IAGN,OAAO,SAHD;IAIN,OAAO,SAJD;IAKN,OAAO,SALD;IAMN,OAAO,SAND;IAON,OAAO,SAPD;IAQN,OAAO,SARD;IASN,OAAO,SATD;IAUN,OAAO;GAvNa;EAyNtBC,MAAM,EAAE;IACN,MAAM,SADA;IAEN,OAAO,SAFD;IAGN,OAAO,SAHD;IAIN,OAAO,SAJD;IAKN,OAAO,SALD;IAMN,OAAO,SAND;IAON,OAAO,SAPD;IAQN,OAAO,SARD;IASN,OAAO,SATD;IAUN,OAAO;GAnOa;EAqOtBC,OAAO,EAAE;IACP,MAAM,SADC;IAEP,OAAO,SAFA;IAGP,OAAO,SAHA;IAIP,OAAO,SAJA;IAKP,OAAO,SALA;IAMP,OAAO,SANA;IAOP,OAAO,SAPA;IAQP,OAAO,SARA;IASP,OAAO,SATA;IAUP,OAAO;GA/Oa;EAiPtBC,IAAI,EAAE;IACJ,MAAM,SADF;IAEJ,OAAO,SAFH;IAGJ,OAAO,SAHH;IAIJ,OAAO,SAJH;IAKJ,OAAO,SALH;IAMJ,OAAO,SANH;IAOJ,OAAO,SAPH;IAQJ,OAAO,SARH;IASJ,OAAO,SATH;IAUJ,OAAO;GA3Pa;EA6PtBC,IAAI,EAAE;IACJ,MAAM,SADF;IAEJ,OAAO,SAFH;IAGJ,OAAO,SAHH;IAIJ,OAAO,SAJH;IAKJ,OAAO,SALH;IAMJ,OAAO,SANH;IAOJ,OAAO,SAPH;IAQJ,OAAO,SARH;IASJ,OAAO,SATH;IAUJ,OAAO;;AAvQa,CAAxB;AA2QA,IAAMC,eAAe,GAAG;EACtBjB,GAAG,EAAE;IACH,IAAI,SADD;IAEH,KAAK,SAFF;IAGH,KAAK,SAHF;IAIH,KAAK,SAJF;IAKH,KAAK,SALF;IAMH,KAAK,SANF;IAOH,KAAK,SAPF;IAQH,KAAK,SARF;IASH,KAAK,SATF;IAUH,KAAK,SAVF;IAWHkB,IAAI,EAAE,SAXH;IAYHC,IAAI,EAAE,SAZH;IAaHC,IAAI,EAAE,SAbH;IAcHC,IAAI,EAAE;GAfc;EAiBtBN,IAAI,EAAE;IACJ,IAAI,SADA;IAEJ,KAAK,SAFD;IAGJ,KAAK,SAHD;IAIJ,KAAK,SAJD;IAKJ,KAAK,SALD;IAMJ,KAAK,SAND;IAOJ,KAAK,SAPD;IAQJ,KAAK,SARD;IASJ,KAAK,SATD;IAUJ,KAAK,SAVD;IAWJG,IAAI,EAAE,SAXF;IAYJC,IAAI,EAAE,SAZF;IAaJC,IAAI,EAAE,SAbF;IAcJC,IAAI,EAAE;GA/Bc;EAiCtBR,MAAM,EAAE;IACN,IAAI,SADE;IAEN,KAAK,SAFC;IAGN,KAAK,SAHC;IAIN,KAAK,SAJC;IAKN,KAAK,SALC;IAMN,KAAK,SANC;IAON,KAAK,SAPC;IAQN,KAAK,SARC;IASN,KAAK,SATC;IAUN,KAAK,SAVC;IAWNK,IAAI,EAAE,SAXA;IAYNC,IAAI,EAAE,SAZA;IAaNC,IAAI,EAAE,SAbA;IAcNC,IAAI,EAAE;GA/Cc;EAiDtBC,UAAU,EAAE;IACV,IAAI,SADM;IAEV,KAAK,SAFK;IAGV,KAAK,SAHK;IAIV,KAAK,SAJK;IAKV,KAAK,SALK;IAMV,KAAK,SANK;IAOV,KAAK,SAPK;IAQV,KAAK,SARK;IASV,KAAK,SATK;IAUV,KAAK,SAVK;IAWVJ,IAAI,EAAE,SAXI;IAYVC,IAAI,EAAE,SAZI;IAaVC,IAAI,EAAE,SAbI;IAcVC,IAAI,EAAE;GA/Dc;EAiEtBV,MAAM,EAAE;IACN,IAAI,SADE;IAEN,KAAK,SAFC;IAGN,KAAK,SAHC;IAIN,KAAK,SAJC;IAKN,KAAK,SALC;IAMN,KAAK,SANC;IAON,KAAK,SAPC;IAQN,KAAK,SARC;IASN,KAAK,SATC;IAUN,KAAK,SAVC;IAWNO,IAAI,EAAE,SAXA;IAYNC,IAAI,EAAE,SAZA;IAaNC,IAAI,EAAE,SAbA;IAcNC,IAAI,EAAE;GA/Ec;EAiFtBX,IAAI,EAAE;IACJ,IAAI,SADA;IAEJ,KAAK,SAFD;IAGJ,KAAK,SAHD;IAIJ,KAAK,SAJD;IAKJ,KAAK,SALD;IAMJ,KAAK,SAND;IAOJ,KAAK,SAPD;IAQJ,KAAK,SARD;IASJ,KAAK,SATD;IAUJ,KAAK,SAVD;IAWJQ,IAAI,EAAE,SAXF;IAYJC,IAAI,EAAE,SAZF;IAaJC,IAAI,EAAE,SAbF;IAcJC,IAAI,EAAE;GA/Fc;EAiGtBE,SAAS,EAAE;IACT,IAAI,SADK;IAET,KAAK,SAFI;IAGT,KAAK,SAHI;IAIT,KAAK,SAJI;IAKT,KAAK,SALI;IAMT,KAAK,SANI;IAOT,KAAK,SAPI;IAQT,KAAK,SARI;IAST,KAAK,SATI;IAUT,KAAK,SAVI;IAWTL,IAAI,EAAE,SAXG;IAYTC,IAAI,EAAE,SAZG;IAaTC,IAAI,EAAE,SAbG;IAcTC,IAAI,EAAE;GA/Gc;EAiHtBb,IAAI,EAAE;IACJ,IAAI,SADA;IAEJ,KAAK,SAFD;IAGJ,KAAK,SAHD;IAIJ,KAAK,SAJD;IAKJ,KAAK,SALD;IAMJ,KAAK,SAND;IAOJ,KAAK,SAPD;IAQJ,KAAK,SARD;IASJ,KAAK,SATD;IAUJ,KAAK,SAVD;IAWJU,IAAI,EAAE,SAXF;IAYJC,IAAI,EAAE,SAZF;IAaJC,IAAI,EAAE,SAbF;IAcJC,IAAI,EAAE;GA/Hc;EAiItBd,IAAI,EAAE;IACJ,IAAI,SADA;IAEJ,KAAK,SAFD;IAGJ,KAAK,SAHD;IAIJ,KAAK,SAJD;IAKJ,KAAK,SALD;IAMJ,KAAK,SAND;IAOJ,KAAK,SAPD;IAQJ,KAAK,SARD;IASJ,KAAK,SATD;IAUJ,KAAK,SAVD;IAWJW,IAAI,EAAE,SAXF;IAYJC,IAAI,EAAE,SAZF;IAaJC,IAAI,EAAE,SAbF;IAcJC,IAAI,EAAE;GA/Ic;EAiJtBhB,KAAK,EAAE;IACL,IAAI,SADC;IAEL,KAAK,SAFA;IAGL,KAAK,SAHA;IAIL,KAAK,SAJA;IAKL,KAAK,SALA;IAML,KAAK,SANA;IAOL,KAAK,SAPA;IAQL,KAAK,SARA;IASL,KAAK,SATA;IAUL,KAAK,SAVA;IAWLa,IAAI,EAAE,SAXD;IAYLC,IAAI,EAAE,SAZD;IAaLC,IAAI,EAAE,SAbD;IAcLC,IAAI,EAAE;GA/Jc;EAiKtBG,UAAU,EAAE;IACV,IAAI,SADM;IAEV,KAAK,SAFK;IAGV,KAAK,SAHK;IAIV,KAAK,SAJK;IAKV,KAAK,SALK;IAMV,KAAK,SANK;IAOV,KAAK,SAPK;IAQV,KAAK,SARK;IASV,KAAK,SATK;IAUV,KAAK,SAVK;IAWVN,IAAI,EAAE,SAXI;IAYVC,IAAI,EAAE,SAZI;IAaVC,IAAI,EAAE,SAbI;IAcVC,IAAI,EAAE;GA/Kc;EAiLtBjB,IAAI,EAAE;IACJ,IAAI,SADA;IAEJ,KAAK,SAFD;IAGJ,KAAK,SAHD;IAIJ,KAAK,SAJD;IAKJ,KAAK,SALD;IAMJ,KAAK,SAND;IAOJ,KAAK,SAPD;IAQJ,KAAK,SARD;IASJ,KAAK,SATD;IAUJ,KAAK,SAVD;IAWJc,IAAI,EAAE,SAXF;IAYJC,IAAI,EAAE,SAZF;IAaJC,IAAI,EAAE,SAbF;IAcJC,IAAI,EAAE;GA/Lc;EAiMtBlB,MAAM,EAAE;IACN,IAAI,SADE;IAEN,KAAK,SAFC;IAGN,KAAK,SAHC;IAIN,KAAK,SAJC;IAKN,KAAK,SALC;IAMN,KAAK,SANC;IAON,KAAK,SAPC;IAQN,KAAK,SARC;IASN,KAAK,SATC;IAUN,KAAK,SAVC;IAWNe,IAAI,EAAE,SAXA;IAYNC,IAAI,EAAE,SAZA;IAaNC,IAAI,EAAE,SAbA;IAcNC,IAAI,EAAE;GA/Mc;EAiNtBnB,KAAK,EAAE;IACL,IAAI,SADC;IAEL,KAAK,SAFA;IAGL,KAAK,SAHA;IAIL,KAAK,SAJA;IAKL,KAAK,SALA;IAML,KAAK,SANA;IAOL,KAAK,SAPA;IAQL,KAAK,SARA;IASL,KAAK,SATA;IAUL,KAAK,SAVA;IAWLgB,IAAI,EAAE,SAXD;IAYLC,IAAI,EAAE,SAZD;IAaLC,IAAI,EAAE,SAbD;IAcLC,IAAI,EAAE;GA/Nc;EAiOtBpB,MAAM,EAAE;IACN,IAAI,SADE;IAEN,KAAK,SAFC;IAGN,KAAK,SAHC;IAIN,KAAK,SAJC;IAKN,KAAK,SALC;IAMN,KAAK,SANC;IAON,KAAK,SAPC;IAQN,KAAK,SARC;IASN,KAAK,SATC;IAUN,KAAK,SAVC;IAWNiB,IAAI,EAAE,SAXA;IAYNC,IAAI,EAAE,SAZA;IAaNC,IAAI,EAAE,SAbA;IAcNC,IAAI,EAAE;GA/Oc;EAiPtBI,UAAU,EAAE;IACV,IAAI,SADM;IAEV,KAAK,SAFK;IAGV,KAAK,SAHK;IAIV,KAAK,SAJK;IAKV,KAAK,SALK;IAMV,KAAK,SANK;IAOV,KAAK,SAPK;IAQV,KAAK,SARK;IASV,KAAK,SATK;IAUV,KAAK,SAVK;IAWVP,IAAI,EAAE,SAXI;IAYVC,IAAI,EAAE,SAZI;IAaVC,IAAI,EAAE,SAbI;IAcVC,IAAI,EAAE;GA/Pc;EAiQtBK,KAAK,EAAE;IACL,IAAI,SADC;IAEL,KAAK,SAFA;IAGL,KAAK,SAHA;IAIL,KAAK,SAJA;IAKL,KAAK,SALA;IAML,KAAK,SANA;IAOL,KAAK,SAPA;IAQL,KAAK,SARA;IASL,KAAK,SATA;IAUL,KAAK;GA3Qe;EA6QtBC,QAAQ,EAAE;IACR,IAAI,SADI;IAER,KAAK,SAFG;IAGR,KAAK,SAHG;IAIR,KAAK,SAJG;IAKR,KAAK,SALG;IAMR,KAAK,SANG;IAOR,KAAK,SAPG;IAQR,KAAK,SARG;IASR,KAAK,SATG;IAUR,KAAK;GAvRe;EAyRtBC,IAAI,EAAE;IACJ,IAAI,SADA;IAEJ,KAAK,SAFD;IAGJ,KAAK,SAHD;IAIJ,KAAK,SAJD;IAKJ,KAAK,SALD;IAMJ,KAAK,SAND;IAOJ,KAAK,SAPD;IAQJ,KAAK,SARD;IASJ,KAAK,SATD;IAUJ,KAAK;;AAnSe,CAAxB;AA8TA,AAAO,IAAMC,iBAAiB,GAAG,CAC/BnC,eAAe,CAACE,IAAhB,CAAqB,KAArB,CAD+B,EAE/BF,eAAe,CAACK,KAAhB,CAAsB,KAAtB,CAF+B,EAG/BL,eAAe,CAACM,GAAhB,CAAoB,KAApB,CAH+B,EAI/BN,eAAe,CAACO,MAAhB,CAAuB,KAAvB,CAJ+B,EAK/BP,eAAe,CAACQ,KAAhB,CAAsB,KAAtB,CAL+B,EAM/BR,eAAe,CAACS,MAAhB,CAAuB,KAAvB,CAN+B,EAO/BT,eAAe,CAACU,IAAhB,CAAqB,KAArB,CAP+B,EAQ/BV,eAAe,CAACW,KAAhB,CAAsB,KAAtB,CAR+B,EAS/BX,eAAe,CAACY,OAAhB,CAAwB,KAAxB,CAT+B,EAU/BZ,eAAe,CAACa,IAAhB,CAAqB,KAArB,CAV+B,EAW/Bb,eAAe,CAACc,IAAhB,CAAqB,KAArB,CAX+B,EAY/Bd,eAAe,CAACe,GAAhB,CAAoB,KAApB,CAZ+B,EAa/Bf,eAAe,CAACgB,IAAhB,CAAqB,KAArB,CAb+B,EAc/BhB,eAAe,CAACiB,MAAhB,CAAuB,KAAvB,CAd+B,EAe/BjB,eAAe,CAACkB,MAAhB,CAAuB,KAAvB,CAf+B,EAgB/BlB,eAAe,CAACmB,MAAhB,CAAuB,KAAvB,CAhB+B,EAiB/BnB,eAAe,CAACoB,OAAhB,CAAwB,KAAxB,CAjB+B,EAkB/BpB,eAAe,CAACqB,IAAhB,CAAqB,KAArB,CAlB+B,EAmB/BrB,eAAe,CAACsB,IAAhB,CAAqB,KAArB,CAnB+B,EAoB/BC,eAAe,CAACjB,GAAhB,CAAoB,KAApB,CApB+B,EAqB/BiB,eAAe,CAACF,IAAhB,CAAqB,KAArB,CArB+B,EAsB/BE,eAAe,CAACJ,MAAhB,CAAuB,KAAvB,CAtB+B,EAuB/BI,eAAe,CAACK,UAAhB,CAA2B,KAA3B,CAvB+B,EAwB/BL,eAAe,CAACN,MAAhB,CAAuB,KAAvB,CAxB+B,EAyB/BM,eAAe,CAACP,IAAhB,CAAqB,KAArB,CAzB+B,EA0B/BO,eAAe,CAACM,SAAhB,CAA0B,KAA1B,CA1B+B,EA2B/BN,eAAe,CAACT,IAAhB,CAAqB,KAArB,CA3B+B,EA4B/BS,eAAe,CAACV,IAAhB,CAAqB,KAArB,CA5B+B,EA6B/BU,eAAe,CAACZ,KAAhB,CAAsB,KAAtB,CA7B+B,EA8B/BY,eAAe,CAACO,UAAhB,CAA2B,KAA3B,CA9B+B,EA+B/BP,eAAe,CAACb,IAAhB,CAAqB,KAArB,CA/B+B,EAgC/Ba,eAAe,CAACd,MAAhB,CAAuB,KAAvB,CAhC+B,EAiC/Bc,eAAe,CAACf,KAAhB,CAAsB,KAAtB,CAjC+B,EAkC/Be,eAAe,CAAChB,MAAhB,CAAuB,KAAvB,CAlC+B,EAmC/BgB,eAAe,CAACQ,UAAhB,CAA2B,KAA3B,CAnC+B,EAoC/BR,eAAe,CAACS,KAAhB,CAAsB,KAAtB,CApC+B,EAqC/BT,eAAe,CAACW,IAAhB,CAAqB,KAArB,CArC+B,EAsC/BX,eAAe,CAACU,QAAhB,CAAyB,KAAzB,CAtC+B,CAA1B;AA0FP,AAAO,IAAMG,YAAY,GAAG,CAC1BpC,eAAe,CAACE,IAAhB,CAAqB,KAArB,CAD0B,EAE1BF,eAAe,CAACK,KAAhB,CAAsB,KAAtB,CAF0B,EAG1BL,eAAe,CAACM,GAAhB,CAAoB,KAApB,CAH0B,EAI1BN,eAAe,CAACO,MAAhB,CAAuB,KAAvB,CAJ0B,EAK1BP,eAAe,CAACQ,KAAhB,CAAsB,KAAtB,CAL0B,EAM1BR,eAAe,CAACS,MAAhB,CAAuB,KAAvB,CAN0B,EAO1BT,eAAe,CAACU,IAAhB,CAAqB,KAArB,CAP0B,EAQ1BV,eAAe,CAACW,KAAhB,CAAsB,KAAtB,CAR0B,EAS1BX,eAAe,CAACY,OAAhB,CAAwB,KAAxB,CAT0B,EAU1BZ,eAAe,CAACa,IAAhB,CAAqB,KAArB,CAV0B,EAW1Bb,eAAe,CAACc,IAAhB,CAAqB,KAArB,CAX0B,EAY1Bd,eAAe,CAACe,GAAhB,CAAoB,KAApB,CAZ0B,EAa1Bf,eAAe,CAACgB,IAAhB,CAAqB,KAArB,CAb0B,EAc1BhB,eAAe,CAACiB,MAAhB,CAAuB,KAAvB,CAd0B,EAe1BjB,eAAe,CAACkB,MAAhB,CAAuB,KAAvB,CAf0B,EAgB1BlB,eAAe,CAACmB,MAAhB,CAAuB,KAAvB,CAhB0B,EAiB1BnB,eAAe,CAACoB,OAAhB,CAAwB,KAAxB,CAjB0B,EAkB1BpB,eAAe,CAACqB,IAAhB,CAAqB,KAArB,CAlB0B,EAmB1BrB,eAAe,CAACsB,IAAhB,CAAqB,KAArB,CAnB0B,EAoB1BC,eAAe,CAACjB,GAAhB,CAAoB,KAApB,CApB0B,EAqB1BiB,eAAe,CAACF,IAAhB,CAAqB,KAArB,CArB0B,EAsB1BE,eAAe,CAACJ,MAAhB,CAAuB,KAAvB,CAtB0B,EAuB1BI,eAAe,CAACK,UAAhB,CAA2B,KAA3B,CAvB0B,EAwB1BL,eAAe,CAACN,MAAhB,CAAuB,KAAvB,CAxB0B,EAyB1BM,eAAe,CAACP,IAAhB,CAAqB,KAArB,CAzB0B,EA0B1BO,eAAe,CAACM,SAAhB,CAA0B,KAA1B,CA1B0B,EA2B1BN,eAAe,CAACT,IAAhB,CAAqB,KAArB,CA3B0B,EA4B1BS,eAAe,CAACV,IAAhB,CAAqB,KAArB,CA5B0B,EA6B1BU,eAAe,CAACZ,KAAhB,CAAsB,KAAtB,CA7B0B,EA8B1BY,eAAe,CAACO,UAAhB,CAA2B,KAA3B,CA9B0B,EA+B1BP,eAAe,CAACb,IAAhB,CAAqB,KAArB,CA/B0B,EAgC1Ba,eAAe,CAACd,MAAhB,CAAuB,KAAvB,CAhC0B,EAiC1Bc,eAAe,CAACf,KAAhB,CAAsB,KAAtB,CAjC0B,EAkC1Be,eAAe,CAAChB,MAAhB,CAAuB,KAAvB,CAlC0B,EAmC1BgB,eAAe,CAACQ,UAAhB,CAA2B,KAA3B,CAnC0B,EAoC1BR,eAAe,CAACS,KAAhB,CAAsB,KAAtB,CApC0B,EAqC1BT,eAAe,CAACW,IAAhB,CAAqB,KAArB,CArC0B,EAsC1BX,eAAe,CAACU,QAAhB,CAAyB,KAAzB,CAtC0B,CAArB;;AC9pBP,IAAMI,YAAY,GAAG;EACnBC,OAAO,EAAE,WADU;EAEnBC,IAAI,EAAE;AAFa,CAArB;AAuBA,AAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKC,KAAL;;EAAA,OACpBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA+IJ,IAAI,EAAC;GAA5J,CADF,CADoB;AAAA,CAAf;AAwBP,AAAO,IAAMK,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKH,KAAL;;EAAA,OACpBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA2SJ,IAAI,EAAC;GAAxT,CADF,CADoB;AAAA,CAAf;AAyBP,AAAO,IAAMM,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKJ,KAAL;;EAAA,OACpBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAihBJ,IAAI,EAAC;GAA9hB,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADoB;AAAA,CAAf;AA+BP,AAAO,IAAMW,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKT,KAAL;;EAAA,OACpBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA24DJ,IAAI,EAAC;GAAx5D,CADF,CADoB;AAAA,CAAf;AAwBP,AAAO,IAAMY,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKV,KAAL;;EAAA,OACpBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACCJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA4oGJ,IAAI,EAAC;GAAzpG,CADD,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADoB;AAAA,CAAf;AA+BP,AAAO,IAAMa,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKX,KAAL;;EAAA,OACpBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAgxBJ,IAAI,EAAC;GAA7xB,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADoB;AAAA,CAAf;AA+BP,AAAO,IAAMc,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKZ,KAAL;;EAAA,OACpBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAmRJ,IAAI,EAAC;GAAtU,CADF,CADoB;AAAA,CAAf;AAwBP,AAAO,IAAMiB,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKf,KAAL;;EAAA,OACpBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAmpBJ,IAAI,EAAC;GAAtsB,CADF,CADoB;AAAA,CAAf;AAwBP,AAAO,IAAMkB,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKhB,KAAL;;EAAA,OACpBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAw9BJ,IAAI,EAAC;GAAr+B,CADF,CADoB;AAAA,CAAf;AAwBP,AAAO,IAAMmB,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKjB,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAA0PJ,IAAI,EAAC;GAA7S,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMoB,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKlB,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAmiEJ,IAAI,EAAC;GAAhjE,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMqB,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKnB,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAs6DJ,IAAI,EAAC;GAAn7D,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMsB,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKpB,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAgyCJ,IAAI,EAAC;GAAn1C,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMuB,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKrB,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAs1CJ,IAAI,EAAC;GAAz4C,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMwB,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKtB,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAw5CJ,IAAI,EAAC;GAA38C,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMyB,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKvB,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAs+FJ,IAAI,EAAC;GAAzhG,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM0B,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKxB,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAszFJ,IAAI,EAAC;GAAz2F,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM2B,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKzB,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAiOJ,IAAI,EAAC;GAApR,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM4B,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK1B,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAA2bJ,IAAI,EAAC;GAA9e,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM6B,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK3B,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAA4nCJ,IAAI,EAAC;GAA/qC,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM8B,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK5B,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAA4nCJ,IAAI,EAAC;GAA/qC,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM+B,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK7B,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAuoCJ,IAAI,EAAC;GAA1rC,CADF,CADqB;AAAA,CAAhB;AAuBP,AAAO,IAAMgC,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK9B,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA0DJ,IAAI,EAAC;GAAvE,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMiC,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK/B,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA+FJ,IAAI,EAAC;GAA5G,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMkC,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKhC,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAA4fJ,IAAI,EAAC;GAA/iB,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMmC,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKjC,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAoGJ,IAAI,EAAC;GAAvJ,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMoC,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKlC,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAoyBJ,IAAI,EAAC;GAAv1B,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMqC,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKnC,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA0PJ,IAAI,EAAC;GAAvQ,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMsC,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKpC,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAyvCJ,IAAI,EAAC;GAA5yC,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMuC,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKrC,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAs+BJ,IAAI,EAAC;GAAzhC,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMwC,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKtC,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAiEJ,IAAI,EAAC;GAApH,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMyC,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKvC,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAqMJ,IAAI,EAAC;GAAxP,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM0C,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKxC,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAomBJ,IAAI,EAAC;GAAvpB,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAM2C,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKzC,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAyrBJ,IAAI,EAAC;GAA5uB,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAM4C,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK1C,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAA43BJ,IAAI,EAAC;GAA/6B,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM6C,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK3C,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAmlDJ,IAAI,EAAC;GAAhmD,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAM8C,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK5C,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAkuCJ,IAAI,EAAC;GAA/uC,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM+C,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK7C,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAo7CJ,IAAI,EAAC;GAAv+C,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMgD,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK9C,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA+JJ,IAAI,EAAC;GAA5K,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMiD,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK/C,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA+VJ,IAAI,EAAC;GAA5W,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMkD,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKhD,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACAC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAyLJ,IAAI,EAAC;GAAtM,CADF,CADA,EAIAG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJA,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMmD,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKjD,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAyNJ,IAAI,EAAC;GAAtO,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMoD,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKlD,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAsNJ,IAAI,EAAC;GAAnO,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMqD,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKnD,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAuFJ,IAAI,EAAC;GAApG,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMsD,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKpD,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAsLJ,IAAI,EAAC;GAAnM,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMuD,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKrD,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA4ZJ,IAAI,EAAC;GAAza,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMwD,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKtD,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAsaJ,IAAI,EAAC;GAAnb,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMyD,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKvD,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA+VJ,IAAI,EAAC;GAA5W,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM0D,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKxD,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAmxBJ,IAAI,EAAC;GAAhyB,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM2D,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKzD,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAyUJ,IAAI,EAAC;GAAtV,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM4D,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK1D,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAmTJ,IAAI,EAAC;GAAhU,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAM6D,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK3D,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAA0lBJ,IAAI,EAAC;GAAvmB,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAM8D,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK5D,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMC,CAAC,EAAC;IAAklBJ,IAAI,EAAC;GAA/lB,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAM+D,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK7D,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAA4UJ,IAAI,EAAC;GAA/X,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMgE,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK9D,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAwqBJ,IAAI,EAAC;GAA3tB,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMiE,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAK/D,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAuVJ,IAAI,EAAC;GAA1Y,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMkE,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKhE,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAA4hBJ,IAAI,EAAC;GAA/kB,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMmE,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKjE,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAA0aJ,IAAI,EAAC;GAA7d,CADF,CADqB;AAAA,CAAhB;AAwBP,AAAO,IAAMoE,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKlE,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAA0iBJ,IAAI,EAAC;GAA7lB,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;AA+BP,AAAO,IAAMqE,OAAO,GAAG,SAAVA,OAAU;EAAA,IAAKnE,KAAL;;EAAA,OACrBC,mBAAA,MAAA,oBAASL,cAAkBI,MAA3B,EACEC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACEJ,mBAAA,OAAA;IAAMY,QAAQ,EAAC;IAAUC,QAAQ,EAAC;IAAUZ,CAAC,EAAC;IAAsNJ,IAAI,EAAC;GAAzQ,CADF,CADF,EAIEG,mBAAA,OAAA,MAAA,EACEA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACEL,mBAAA,OAAA;IAAMM,KAAK,EAAC;IAAKC,MAAM,EAAC;IAAKV,IAAI,EAAC;GAAlC,CADF,CADF,CAJF,CADqB;AAAA,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7iDP,IAAMF,cAAY,GAAG;EACjBC,OAAO,EAAE,WADQ;EAEjBC,IAAI,EAAE;AAFW,CAArB;AAKA,AAAO,IAAMsE,KAAK,GAAG,SAARA,KAAQ;EAAA,IAAKpE,KAAL;;EAAA,OACjBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADJ,EAKID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CALJ,CADiB;AAAA,CAAd;AAiBP,AAAO,IAAM6D,KAAK,GAAG,SAARA,KAAQ;EAAA,IAAKrE,KAAL;;EAAA,OACjBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IAAeI,CAAC,EAAC;GAA5B,CADJ,CADiB;AAAA,CAAd;AAOP,AAAO,IAAMoE,KAAK,GAAG,SAARA,KAAQ;EAAA,IAAKtE,KAAL;;EAAA,OACjBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IAAeI,CAAC,EAAC;GAA5B,CADJ,CADJ,EAIID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CAJJ,CADiB;AAAA,CAAd;AAgBP,AAAO,IAAM+D,KAAK,GAAG,SAARA,KAAQ;EAAA,IAAKvE,KAAL;;EAAA,OACjBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADiB;AAAA,CAAd;AAQP,AAAO,IAAMsE,KAAK,GAAG,SAARA,KAAQ;EAAA,IAAKxE,KAAL;;EAAA,OACjBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADiB;AAAA,CAAd;AAQP,AAAO,IAAMuE,KAAK,GAAG,SAARA,KAAQ;EAAA,IAAKzE,KAAL;;EAAA,OACjBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IAAeI,CAAC,EAAC;GAA5B,CADJ,CADiB;AAAA,CAAd;AAOP,AAAO,IAAMwE,KAAK,GAAG,SAARA,KAAQ;EAAA,IAAK1E,KAAL;;EAAA,OACjBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADiB;AAAA,CAAd;AAQP,AAAO,IAAMyE,KAAK,GAAG,SAARA,KAAQ;EAAA,IAAK3E,KAAL;;EAAA,OACjBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADiB;AAAA,CAAd;AAQP,AAAO,IAAM0E,KAAK,GAAG,SAARA,KAAQ;EAAA,IAAK5E,KAAL;;EAAA,OACjBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADiB;AAAA,CAAd;AAQP,AAAO,IAAM2E,MAAM,GAAG,SAATA,MAAS;EAAA,IAAK7E,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADkB;AAAA,CAAf;AAQP,AAAO,IAAM4E,MAAM,GAAG,SAATA,MAAS;EAAA,IAAK9E,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADJ,EAKID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CALJ,CADkB;AAAA,CAAf;AAiBP,AAAO,IAAMuE,MAAM,GAAG,SAATA,MAAS;EAAA,IAAK/E,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADkB;AAAA,CAAf;AAQP,AAAO,IAAM8E,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKhF,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADkB;AAAA,CAAf;AAQP,AAAO,IAAM+E,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKjF,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IAAeI,CAAC,EAAC;GAA5B,CADJ,CADkB;AAAA,CAAf;AAOP,AAAO,IAAMgF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKlF,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADJ,EAKID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CALJ,CADkB;AAAA,CAAf;AAiBP,AAAO,IAAM2E,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKnF,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADkB;AAAA,CAAf;AAQP,AAAO,IAAMkF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKpF,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADkB;AAAA,CAAf;AAQP,AAAO,IAAMmF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKrF,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADJ,EAKID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CALJ,CADkB;AAAA,CAAf;AAiBP,AAAO,IAAM8E,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKtF,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADkB;AAAA,CAAf;AAQP,AAAO,IAAMqF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKvF,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADJ,EAKID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CALJ,CADkB;AAAA,CAAf;AAiBP,AAAO,IAAMgF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKxF,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADJ,EAKID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CALJ,CADkB;AAAA,CAAf;AAiBP,AAAO,IAAMiF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKzF,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADkB;AAAA,CAAf;AAQP,AAAO,IAAMwF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAK1F,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADkB;AAAA,CAAf;AAQP,AAAO,IAAMyF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAK3F,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IAAeI,CAAC,EAAC;GAA5B,CADJ,CADJ,EAIID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CAJJ,CADkB;AAAA,CAAf;AAgBP,AAAO,IAAMoF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAK5F,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADJ,EAKID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CALJ,CADkB;AAAA,CAAf;AAiBP,AAAO,IAAMqF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAK7F,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IAAeI,CAAC,EAAC;GAA5B,CADJ,CADkB;AAAA,CAAf;AAOP,AAAO,IAAM4F,MAAM,GAAG,SAATA,MAAS;EAAA,IAAK9F,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADkB;AAAA,CAAf;AAQP,AAAO,IAAM6F,MAAM,GAAG,SAATA,MAAS;EAAA,IAAK/F,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IAAeI,CAAC,EAAC;GAA5B,CADJ,CADkB;AAAA,CAAf;AAOP,AAAO,IAAM8F,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKhG,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IAAeI,CAAC,EAAC;GAA5B,CADJ,CADJ,EAIID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CAJJ,CADkB;AAAA,CAAf;AAgBP,AAAO,IAAMyF,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKjG,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADkB;AAAA,CAAf;AAQP,AAAO,IAAMgG,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKlG,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADJ,EAKID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CALJ,CADkB;AAAA,CAAf;AAiBP,AAAO,IAAM2F,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKnG,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,IAAA;IAAGI,QAAQ,EAAC;GAAZ,EACIJ,mBAAA,OAAA;IAAMH,IAAI,EAAC;IACPI,CAAC,EAAC;GADN,CADJ,CADJ,EAKID,mBAAA,OAAA,MAAA,EACIA,mBAAA,WAAA;IAAUK,EAAE,EAAC;GAAb,EACIL,mBAAA,OAAA;IACIM,KAAK,EAAC;IACNC,MAAM,EAAC;GAFX,CADJ,CADJ,CALJ,CADkB;AAAA,CAAf;AAiBP,AAAO,IAAM4F,MAAM,GAAG,SAATA,MAAS;EAAA,IAAKpG,KAAL;;EAAA,OAClBC,mBAAA,MAAA,oBAASL,gBAAkBI,MAA3B,MAAA,EACIC,mBAAA,OAAA;IAAMH,IAAI,EAAC;IAAeI,CAAC,EAAC;GAA5B,CADJ,CADkB;AAAA,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1VA,IAAMmG,YAAY,gBAAGC,aAAM,CAAC,MAAD,CAAT,yLAKb,UAAAC,CAAC;EAAA,OAAIA,CAAC,CAACC,KAAF,IAAW,cAAf;AAAA,CALY,CAAlB;AAQP,SAEwBC,MAAMzG;EAC5B,IAAQ0G,IAAR,GAA4B1G,KAA5B,CAAQ0G,IAAR;oBAA4B1G,KAA5B,CAAc2G,IAAd;MAAcA,IAAd,4BAAqB,EAArB;EACA,IAAMC,OAAO,GAAGF,IAAI,CAACG,UAAL,CAAgB,MAAhB,CAAhB;EAEA,IAAMC,GAAG,GAAGF,OAAO,GAAIG,KAAmB,CAACL,IAAD,CAAvB,GAAiCM,MAAoB,CAACN,IAAD,CAAxE;;EAEA,IAAG,CAACI,GAAJ,EAAS;IAEP,OAAO,IAAP;;;EAGF,OACE7G,mBAAA,CAACoG,YAAD,oBAAkBrG;IAAOiH,IAAI,EAAC;IAA9B,EACEhH,mBAAA,CAAC6G,GAAD;IACEvG,KAAK,EAAEoG;GADT,CADF,CADF;AAOD;;;ACvCDO,YAAK,CAACjH,mBAAD,EAAsBpG,SAAtB,EAAiCA,SAAjC,EAA4C,UAACmG,KAAD;EAC/C,KAAK,IAAImH,IAAT,IAAiBnH,KAAjB,EAAwB;IACpB,IAAImH,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;MACjB,OAAOnH,KAAK,CAACmH,IAAD,CAAZ;;;AAGT,CANI,CAAL;AAQA,IAAMC,QAAQ,GAAG;EACfC,KAAK,EAAE,WADQ;EAEfC,IAAI,EAAE,SAFS;EAGfX,IAAI,EAAE,EAHS;EAIfY,MAAM,EAAE,KAJO;EAKfC,MAAM,EAAE,KALO;EAMfC,UAAU,EAAE,CANG;EAOfC,WAAW,EAAE;AAPE,CAAjB;AAsBA,IAAMC,OAAO,gBAAGrB,aAAM,CAAC,KAAD,CAAT,6WACF,UAAAC,CAAC;EAAA,OAAIA,CAAC,CAACI,IAAN;AAAA,CADC,EAED,UAAAJ,CAAC;EAAA,OAAIA,CAAC,CAACI,IAAN;AAAA,CAFA,EAGM,UAAAJ,CAAC;EAAA,OAAIA,CAAC,CAACqB,OAAF,IAAarB,CAAC,CAACI,IAAnB;AAAA,CAHP,EAIU,UAAAJ,CAAC;EAAA,OAAIA,CAAC,CAACC,KAAN;AAAA,CAJX,EAMR,UAAAD,CAAC;EAAA,OAAIA,CAAC,CAACsB,OAAF,iBACGtB,CAAC,CAACuB,WADL,iBAC4BvB,CAAC,CAACwB,YAD9B,MAAJ;AAAA,CANO,EAqBT,UAAAxB,CAAC;EAAA,OAAIA,CAAC,CAACyB,OAAF,oHAAJ;AAAA,CArBQ,CAAb;AA6BA,IAAMC,IAAI,gBAAG3B,aAAM,CAAC,GAAD,CAAT,uYAOK,UAAAC,CAAC;EAAA,OAAIzM,IAAI,CAACoO,KAAL,CAAW3B,CAAC,CAACI,IAAF,GAAS,GAAT,GAAe,EAA1B,CAAJ;AAAA,CAPN,EAQE,UAAAJ,CAAC;EAAA,OAAIA,CAAC,CAACC,KAAN;AAAA,CARH,CAAV;AAiCA,SAAwB2B,UAAUC;EAEhC,oBAWIA,MAXJ,CACEf,KADF;MACEA,KADF,8BACUD,QAAQ,CAACC,KADnB;MAEEgB,YAFF,GAWID,MAXJ,CAEEC,YAFF;MAGElL,KAHF,GAWIiL,MAXJ,CAGEjL,KAHF;MAIEmL,MAJF,GAWIF,MAXJ,CAIEE,MAJF;qBAWIF,MAXJ,CAKEd,IALF;MAKEA,IALF,6BAKSF,QAAQ,CAACE,IALlB;qBAWIc,MAXJ,CAMEzB,IANF;MAMEA,IANF,6BAMSS,QAAQ,CAACT,IANlB;uBAWIyB,MAXJ,CAOEb,MAPF;MAOEA,MAPF,+BAOWH,QAAQ,CAACG,MAPpB;uBAWIa,MAXJ,CAQEZ,MARF;MAQEA,MARF,+BAQWJ,QAAQ,CAACI,MARpB;2BAWIY,MAXJ,CASEX,UATF;MASEA,UATF,mCASeL,QAAQ,CAACK,UATxB;4BAWIW,MAXJ,CAUEV,WAVF;MAUEA,WAVF,oCAUgBN,QAAQ,CAACM,WAVzB;EAcA,IAAMhB,IAAI,GAAGpK,MAAM,CAAC+L,YAAY,IAAIlL,KAAjB,CAAN,CAA8BoL,SAA9B,CAAwC,CAAxC,EAA2C,CAA3C,CAAb;EAEA,IAAMC,SAAS,GAAGlB,IAAI,KAAK,SAAT,GAAqB,OAArB,GAA+B,MAAjD;EACA,IAAMmB,MAAM,GAAGD,SAAS,KAAK,MAA7B;EAIA,IAAME,GAAG,GAAGC,YAAQ,CAAC;IAAExL,KAAK,EAALA,KAAF;IAASH,GAAG,EAAE,CAAd;IAAiBC,GAAG,EAAEyC,iBAAiB,CAACnD,MAAlB,GAA2B;GAAlD,CAApB;EAGA,IAAMqM,QAAQ,GAAGH,MAAM,GAAGE,YAAQ,CAAC;IAAExL,KAAK,EAALA,KAAF;IAASH,GAAG,EAAE,CAAd;IAAiBC,GAAG,EAAE;GAAvB,CAAX,GAA0C0L,YAAQ,CAAC;IAAExL,KAAK,EAALA,KAAF;IAASH,GAAG,EAAE,CAAd;IAAiBC,GAAG,EAAE;GAAvB,CAAzE;EAEA,OACEgD,mBAAA,CAAC0H,OAAD;IACEhB,IAAI,EAAEA;IACNH,KAAK,EAAE9G,iBAAiB,CAACgJ,GAAD,CAAjB,CAAuBG,OAAvB,CAA+B,GAA/B,EAAoC,EAApC;eACEtB;eACAC;mBACIC;oBACCC;eACLY;GAPX,EASGjB,KAAK,KAAK,WAAV,GACCpH,mBAAA,CAACgI,IAAD;IACEzB,KAAK,EAAE7G,YAAY,CAAC+I,GAAD,CAAZ,CAAkBG,OAAlB,CAA0B,GAA1B,EAA+B,EAA/B;IACPlC,IAAI,EAAEA;GAFR,EAIGD,IAJH,CADD,GAQCzG,mBAAA,CAACwG,KAAD;IACEC,IAAI,OAAK8B,SAAL,GAAiBI;IACrBpC,KAAK,EAAE7G,YAAY,CAAC+I,GAAD,CAAZ,CAAkBG,OAAlB,CAA0B,GAA1B,EAA+B,EAA/B;IACPlC,IAAI,EAAE7M,IAAI,CAACoO,KAAL,CAAYvB,IAAD,GAAS,GAAT,GAAe,EAA1B;GAHR,CAjBJ,CADF;AA0BD;;;;"}